{
	"id": "c202394e4090c680838f7a55efc9aea1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"sosh/CertiFren.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.2 <0.9.0;\n\nimport \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\";\n\n\ncontract CertiFren is Ownable {\n    address public protocolFeeDestination;\n    uint256 public protocolFeePercent;\n    uint256 public subjectFeePercent;\n\n    event Trade(address trader, address subject, bool isBuy, uint256 shareAmount, uint256 ethAmount, uint256 protocolEthAmount, uint256 subjectEthAmount, uint256 supply);\n\n    // SharesSubject => (Holder => Balance)\n    mapping(address => mapping(address => uint256)) public sharesBalance;\n\n    // SharesSubject => Supply\n    mapping(address => uint256) public sharesSupply;\n\n    function setFeeDestination(address _feeDestination) public onlyOwner {\n        protocolFeeDestination = _feeDestination;\n    }\n\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\n        protocolFeePercent = _feePercent;\n    }\n\n    function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\n        subjectFeePercent = _feePercent;\n    }\n\n    function getPrice(uint256 supply, uint256 amount) public pure returns (uint256) {\n        uint256 sum1 = supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6;\n        uint256 sum2 = supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6;\n        uint256 summation = sum2 - sum1;\n        return summation * 1 ether / 16000;\n    }\n\n    function getBuyPrice(address sharesSubject, uint256 amount) public view returns (uint256) {\n        return getPrice(sharesSupply[sharesSubject], amount);\n    }\n\n    function getSellPrice(address sharesSubject, uint256 amount) public view returns (uint256) {\n        return getPrice(sharesSupply[sharesSubject] - amount, amount);\n    }\n\n    function getBuyPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {\n        uint256 price = getBuyPrice(sharesSubject, amount);\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\n        return price + protocolFee + subjectFee;\n    }\n\n    function getSellPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {\n        uint256 price = getSellPrice(sharesSubject, amount);\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\n        return price - protocolFee - subjectFee;\n    }\n\n    function buyShares(address sharesSubject, uint256 amount) public payable {\n        uint256 supply = sharesSupply[sharesSubject];\n        require(supply > 0 || sharesSubject == msg.sender, \"Only the shares' subject can buy the first share\");\n        uint256 price = getPrice(supply, amount);\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\n        require(msg.value >= price + protocolFee + subjectFee, \"Insufficient payment\");\n        sharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] + amount;\n        sharesSupply[sharesSubject] = supply + amount;\n        emit Trade(msg.sender, sharesSubject, true, amount, price, protocolFee, subjectFee, supply + amount);\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\"\");\n        (bool success2, ) = sharesSubject.call{value: subjectFee}(\"\");\n        require(success1 && success2, \"Unable to send funds\");\n    }\n\n    function sellShares(address sharesSubject, uint256 amount) public payable {\n        uint256 supply = sharesSupply[sharesSubject];\n        require(supply > amount, \"Cannot sell the last share\");\n        uint256 price = getPrice(supply - amount, amount);\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\n        require(sharesBalance[sharesSubject][msg.sender] >= amount, \"Insufficient shares\");\n        sharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] - amount;\n        sharesSupply[sharesSubject] = supply - amount;\n        emit Trade(msg.sender, sharesSubject, false, amount, price, protocolFee, subjectFee, supply - amount);\n        (bool success1, ) = msg.sender.call{value: price - protocolFee - subjectFee}(\"\");\n        (bool success2, ) = protocolFeeDestination.call{value: protocolFee}(\"\");\n        (bool success3, ) = sharesSubject.call{value: subjectFee}(\"\");\n        require(success1 && success2 && success3, \"Unable to send funds\");\n    }\n}"
			},
			"@openzeppelin/contracts@4.7.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sosh/CertiFren.sol": {
				"CertiFren": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "subject",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBuy",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shareAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolEthAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "subjectEthAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "Trade",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sharesSubject",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "buyShares",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sharesSubject",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getBuyPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sharesSubject",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getBuyPriceAfterFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sharesSubject",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getSellPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sharesSubject",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getSellPriceAfterFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeeDestination",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sharesSubject",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sellShares",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeDestination",
									"type": "address"
								}
							],
							"name": "setFeeDestination",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setProtocolFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setSubjectFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "sharesBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "sharesSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "subjectFeePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sosh/CertiFren.sol\":125:4573  contract CertiFren is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"sosh/CertiFren.sol\":125:4573  contract CertiFren is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"sosh/CertiFren.sol\":125:4573  contract CertiFren is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sosh/CertiFren.sol\":125:4573  contract CertiFren is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb51d0534\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb51d0534\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd6e6eb9f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf9931be0\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfbe53234\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9ae71781\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa4983421\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x4635256e\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x4635256e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4ce7957c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5a8a764e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5cf4ee91\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6945b123\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x020235ff\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0f026f6d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2267a89c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x24dc441d\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"sosh/CertiFren.sol\":498:566  mapping(address => mapping(address => uint256)) public sharesBalance */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":603:628   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":591:593   */\n      0x20\n        /* \"#utility.yul\":576:594   */\n      add\n        /* \"sosh/CertiFren.sol\":498:566  mapping(address => mapping(address => uint256)) public sharesBalance */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sosh/CertiFren.sol\":1786:2134  function getBuyPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_24\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":2140:2490  function getSellPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_24\n      tag_38\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":243:275  uint256 public subjectFeePercent */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_24\n      sload(0x03)\n      dup2\n      jump\n        /* \"sosh/CertiFren.sol\":1446:1605  function getBuyPrice(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_24\n      tag_47\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":161:198  address public protocolFeeDestination */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sload(0x01)\n      tag_51\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_51:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1062:1094   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1044:1095   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1032:1034   */\n      0x20\n        /* \"#utility.yul\":1017:1035   */\n      add\n        /* \"sosh/CertiFren.sol\":161:198  address public protocolFeeDestination */\n      tag_28\n        /* \"#utility.yul\":898:1101   */\n      jump\n        /* \"sosh/CertiFren.sol\":914:1030  function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"sosh/CertiFren.sol\":1036:1440  function getPrice(uint256 supply, uint256 amount) public pure returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":2496:3496  function buyShares(address sharesSubject, uint256 amount) public payable {... */\n    tag_10:\n      tag_56\n      tag_67\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_56\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_51)\n        /* \"sosh/CertiFren.sol\":1611:1780  function getSellPrice(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_24\n      tag_78\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":790:908  function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_56\n      tag_83\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":3502:4571  function sellShares(address sharesSubject, uint256 amount) public payable {... */\n    tag_15:\n      tag_56\n      tag_86\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":204:237  uint256 public protocolFeePercent */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_24\n      sload(0x02)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_56\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":604:651  mapping(address => uint256) public sharesSupply */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_24\n      tag_99\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_99:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"sosh/CertiFren.sol\":658:784  function setFeeDestination(address _feeDestination) public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_56\n      tag_104\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":1786:2134  function getBuyPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_34:\n        /* \"sosh/CertiFren.sol\":1875:1882  uint256 */\n      0x00\n        /* \"sosh/CertiFren.sol\":1894:1907  uint256 price */\n      dup1\n        /* \"sosh/CertiFren.sol\":1910:1944  getBuyPrice(sharesSubject, amount) */\n      tag_107\n        /* \"sosh/CertiFren.sol\":1922:1935  sharesSubject */\n      dup5\n        /* \"sosh/CertiFren.sol\":1937:1943  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":1910:1921  getBuyPrice */\n      tag_48\n        /* \"sosh/CertiFren.sol\":1910:1944  getBuyPrice(sharesSubject, amount) */\n      jump\t// in\n    tag_107:\n        /* \"sosh/CertiFren.sol\":1894:1944  uint256 price = getBuyPrice(sharesSubject, amount) */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":1954:1973  uint256 protocolFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":2005:2012  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":1984:2002  protocolFeePercent */\n      sload(0x02)\n        /* \"sosh/CertiFren.sol\":1976:1981  price */\n      dup4\n        /* \"sosh/CertiFren.sol\":1976:2002  price * protocolFeePercent */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"sosh/CertiFren.sol\":1976:2012  price * protocolFeePercent / 1 ether */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"sosh/CertiFren.sol\":1954:2012  uint256 protocolFee = price * protocolFeePercent / 1 ether */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":2022:2040  uint256 subjectFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":2071:2078  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":2051:2068  subjectFeePercent */\n      sload(0x03)\n        /* \"sosh/CertiFren.sol\":2043:2048  price */\n      dup5\n        /* \"sosh/CertiFren.sol\":2043:2068  price * subjectFeePercent */\n      tag_112\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_112:\n        /* \"sosh/CertiFren.sol\":2043:2078  price * subjectFeePercent / 1 ether */\n      tag_113\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_113:\n        /* \"sosh/CertiFren.sol\":2022:2078  uint256 subjectFee = price * subjectFeePercent / 1 ether */\n      swap1\n      pop\n      dup1\n        /* \"sosh/CertiFren.sol\":2095:2114  price + protocolFee */\n      tag_114\n        /* \"sosh/CertiFren.sol\":2103:2114  protocolFee */\n      dup4\n        /* \"sosh/CertiFren.sol\":2095:2100  price */\n      dup6\n        /* \"sosh/CertiFren.sol\":2095:2114  price + protocolFee */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"sosh/CertiFren.sol\":2095:2127  price + protocolFee + subjectFee */\n      tag_116\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_116:\n        /* \"sosh/CertiFren.sol\":2088:2127  return price + protocolFee + subjectFee */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"sosh/CertiFren.sol\":1786:2134  function getBuyPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_106:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sosh/CertiFren.sol\":2140:2490  function getSellPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_39:\n        /* \"sosh/CertiFren.sol\":2230:2237  uint256 */\n      0x00\n        /* \"sosh/CertiFren.sol\":2249:2262  uint256 price */\n      dup1\n        /* \"sosh/CertiFren.sol\":2265:2300  getSellPrice(sharesSubject, amount) */\n      tag_118\n        /* \"sosh/CertiFren.sol\":2278:2291  sharesSubject */\n      dup5\n        /* \"sosh/CertiFren.sol\":2293:2299  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":2265:2277  getSellPrice */\n      tag_79\n        /* \"sosh/CertiFren.sol\":2265:2300  getSellPrice(sharesSubject, amount) */\n      jump\t// in\n    tag_118:\n        /* \"sosh/CertiFren.sol\":2249:2300  uint256 price = getSellPrice(sharesSubject, amount) */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":2310:2329  uint256 protocolFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":2361:2368  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":2340:2358  protocolFeePercent */\n      sload(0x02)\n        /* \"sosh/CertiFren.sol\":2332:2337  price */\n      dup4\n        /* \"sosh/CertiFren.sol\":2332:2358  price * protocolFeePercent */\n      tag_119\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_119:\n        /* \"sosh/CertiFren.sol\":2332:2368  price * protocolFeePercent / 1 ether */\n      tag_120\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_120:\n        /* \"sosh/CertiFren.sol\":2310:2368  uint256 protocolFee = price * protocolFeePercent / 1 ether */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":2378:2396  uint256 subjectFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":2427:2434  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":2407:2424  subjectFeePercent */\n      sload(0x03)\n        /* \"sosh/CertiFren.sol\":2399:2404  price */\n      dup5\n        /* \"sosh/CertiFren.sol\":2399:2424  price * subjectFeePercent */\n      tag_121\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_121:\n        /* \"sosh/CertiFren.sol\":2399:2434  price * subjectFeePercent / 1 ether */\n      tag_122\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_122:\n        /* \"sosh/CertiFren.sol\":2378:2434  uint256 subjectFee = price * subjectFeePercent / 1 ether */\n      swap1\n      pop\n      dup1\n        /* \"sosh/CertiFren.sol\":2451:2470  price - protocolFee */\n      tag_123\n        /* \"sosh/CertiFren.sol\":2459:2470  protocolFee */\n      dup4\n        /* \"sosh/CertiFren.sol\":2451:2456  price */\n      dup6\n        /* \"sosh/CertiFren.sol\":2451:2470  price - protocolFee */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"sosh/CertiFren.sol\":2451:2483  price - protocolFee - subjectFee */\n      tag_116\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":1446:1605  function getBuyPrice(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":1562:1589  sharesSupply[sharesSubject] */\n      dup3\n      and\n        /* \"sosh/CertiFren.sol\":1527:1534  uint256 */\n      0x00\n        /* \"sosh/CertiFren.sol\":1562:1589  sharesSupply[sharesSubject] */\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":1562:1574  sharesSupply */\n      0x05\n        /* \"sosh/CertiFren.sol\":1562:1589  sharesSupply[sharesSubject] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"sosh/CertiFren.sol\":1553:1598  getPrice(sharesSupply[sharesSubject], amount) */\n      tag_127\n      swap1\n        /* \"sosh/CertiFren.sol\":1591:1597  amount */\n      dup4\n        /* \"sosh/CertiFren.sol\":1553:1561  getPrice */\n      tag_64\n        /* \"sosh/CertiFren.sol\":1553:1598  getPrice(sharesSupply[sharesSubject], amount) */\n      jump\t// in\n    tag_127:\n        /* \"sosh/CertiFren.sol\":1546:1598  return getPrice(sharesSupply[sharesSubject], amount) */\n      swap4\n        /* \"sosh/CertiFren.sol\":1446:1605  function getBuyPrice(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sosh/CertiFren.sol\":914:1030  function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"sosh/CertiFren.sol\":992:1009  subjectFeePercent */\n      0x03\n        /* \"sosh/CertiFren.sol\":992:1023  subjectFeePercent = _feePercent */\n      sstore\n        /* \"sosh/CertiFren.sol\":914:1030  function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {... */\n      jump\t// out\n        /* \"sosh/CertiFren.sol\":1036:1440  function getPrice(uint256 supply, uint256 amount) public pure returns (uint256) {... */\n    tag_64:\n        /* \"sosh/CertiFren.sol\":1107:1114  uint256 */\n      0x00\n      dup1\n        /* \"sosh/CertiFren.sol\":1141:1152  supply == 0 */\n      dup4\n      iszero\n        /* \"sosh/CertiFren.sol\":1141:1211  supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6 */\n      tag_133\n      jumpi\n        /* \"sosh/CertiFren.sol\":1210:1211  6 */\n      0x06\n        /* \"sosh/CertiFren.sol\":1191:1201  supply - 1 */\n      tag_134\n        /* \"sosh/CertiFren.sol\":1200:1201  1 */\n      0x01\n        /* \"sosh/CertiFren.sol\":1191:1197  supply */\n      dup7\n        /* \"sosh/CertiFren.sol\":1191:1201  supply - 1 */\n      tag_124\n      jump\t// in\n    tag_134:\n        /* \"sosh/CertiFren.sol\":1186:1202  2 * (supply - 1) */\n      tag_135\n      swap1\n        /* \"sosh/CertiFren.sol\":1186:1187  2 */\n      0x02\n        /* \"sosh/CertiFren.sol\":1186:1202  2 * (supply - 1) */\n      tag_109\n      jump\t// in\n    tag_135:\n        /* \"sosh/CertiFren.sol\":1186:1206  2 * (supply - 1) + 1 */\n      tag_136\n      swap1\n        /* \"sosh/CertiFren.sol\":1205:1206  1 */\n      0x01\n        /* \"sosh/CertiFren.sol\":1186:1206  2 * (supply - 1) + 1 */\n      tag_115\n      jump\t// in\n    tag_136:\n        /* \"sosh/CertiFren.sol\":1175:1181  supply */\n      dup6\n        /* \"sosh/CertiFren.sol\":1160:1170  supply - 1 */\n      tag_137\n        /* \"sosh/CertiFren.sol\":1169:1170  1 */\n      0x01\n        /* \"sosh/CertiFren.sol\":1175:1181  supply */\n      dup3\n        /* \"sosh/CertiFren.sol\":1160:1170  supply - 1 */\n      tag_124\n      jump\t// in\n    tag_137:\n        /* \"sosh/CertiFren.sol\":1159:1182  (supply - 1 )* (supply) */\n      tag_138\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_138:\n        /* \"sosh/CertiFren.sol\":1159:1207  (supply - 1 )* (supply) * (2 * (supply - 1) + 1) */\n      tag_139\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_139:\n        /* \"sosh/CertiFren.sol\":1159:1211  (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6 */\n      tag_140\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n        /* \"sosh/CertiFren.sol\":1141:1211  supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6 */\n      jump(tag_141)\n    tag_133:\n        /* \"sosh/CertiFren.sol\":1155:1156  0 */\n      0x00\n        /* \"sosh/CertiFren.sol\":1141:1211  supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6 */\n    tag_141:\n        /* \"sosh/CertiFren.sol\":1126:1211  uint256 sum1 = supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6 */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":1221:1233  uint256 sum2 */\n      0x00\n        /* \"sosh/CertiFren.sol\":1236:1247  supply == 0 */\n      dup5\n      iszero\n        /* \"sosh/CertiFren.sol\":1236:1262  supply == 0 && amount == 1 */\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n        /* \"sosh/CertiFren.sol\":1251:1257  amount */\n      dup4\n        /* \"sosh/CertiFren.sol\":1261:1262  1 */\n      0x01\n        /* \"sosh/CertiFren.sol\":1251:1262  amount == 1 */\n      eq\n        /* \"sosh/CertiFren.sol\":1236:1262  supply == 0 && amount == 1 */\n    tag_142:\n        /* \"sosh/CertiFren.sol\":1236:1348  supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6 */\n      tag_143\n      jumpi\n        /* \"sosh/CertiFren.sol\":1347:1348  6 */\n      0x06\n        /* \"sosh/CertiFren.sol\":1332:1338  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":1319:1329  supply - 1 */\n      tag_144\n        /* \"sosh/CertiFren.sol\":1328:1329  1 */\n      0x01\n        /* \"sosh/CertiFren.sol\":1319:1325  supply */\n      dup9\n        /* \"sosh/CertiFren.sol\":1319:1329  supply - 1 */\n      tag_124\n      jump\t// in\n    tag_144:\n        /* \"sosh/CertiFren.sol\":1319:1338  supply - 1 + amount */\n      tag_145\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_145:\n        /* \"sosh/CertiFren.sol\":1314:1339  2 * (supply - 1 + amount) */\n      tag_146\n      swap1\n        /* \"sosh/CertiFren.sol\":1314:1315  2 */\n      0x02\n        /* \"sosh/CertiFren.sol\":1314:1339  2 * (supply - 1 + amount) */\n      tag_109\n      jump\t// in\n    tag_146:\n        /* \"sosh/CertiFren.sol\":1314:1343  2 * (supply - 1 + amount) + 1 */\n      tag_147\n      swap1\n        /* \"sosh/CertiFren.sol\":1342:1343  1 */\n      0x01\n        /* \"sosh/CertiFren.sol\":1314:1343  2 * (supply - 1 + amount) + 1 */\n      tag_115\n      jump\t// in\n    tag_147:\n        /* \"sosh/CertiFren.sol\":1294:1309  supply + amount */\n      tag_148\n        /* \"sosh/CertiFren.sol\":1303:1309  amount */\n      dup7\n        /* \"sosh/CertiFren.sol\":1294:1300  supply */\n      dup9\n        /* \"sosh/CertiFren.sol\":1294:1309  supply + amount */\n      tag_115\n      jump\t// in\n    tag_148:\n        /* \"sosh/CertiFren.sol\":1283:1289  amount */\n      dup7\n        /* \"sosh/CertiFren.sol\":1270:1280  supply - 1 */\n      tag_149\n        /* \"sosh/CertiFren.sol\":1279:1280  1 */\n      0x01\n        /* \"sosh/CertiFren.sol\":1270:1276  supply */\n      dup11\n        /* \"sosh/CertiFren.sol\":1270:1280  supply - 1 */\n      tag_124\n      jump\t// in\n    tag_149:\n        /* \"sosh/CertiFren.sol\":1270:1289  supply - 1 + amount */\n      tag_150\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_150:\n        /* \"sosh/CertiFren.sol\":1269:1310  (supply - 1 + amount) * (supply + amount) */\n      tag_151\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_151:\n        /* \"sosh/CertiFren.sol\":1269:1344  (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) */\n      tag_152\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_152:\n        /* \"sosh/CertiFren.sol\":1269:1348  (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6 */\n      tag_153\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_153:\n        /* \"sosh/CertiFren.sol\":1236:1348  supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6 */\n      jump(tag_154)\n    tag_143:\n        /* \"sosh/CertiFren.sol\":1265:1266  0 */\n      0x00\n        /* \"sosh/CertiFren.sol\":1236:1348  supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6 */\n    tag_154:\n        /* \"sosh/CertiFren.sol\":1221:1348  uint256 sum2 = supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6 */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":1358:1375  uint256 summation */\n      0x00\n        /* \"sosh/CertiFren.sol\":1378:1389  sum2 - sum1 */\n      tag_155\n        /* \"sosh/CertiFren.sol\":1385:1389  sum1 */\n      dup4\n        /* \"sosh/CertiFren.sol\":1221:1348  uint256 sum2 = supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6 */\n      dup4\n        /* \"sosh/CertiFren.sol\":1378:1389  sum2 - sum1 */\n      tag_124\n      jump\t// in\n    tag_155:\n        /* \"sosh/CertiFren.sol\":1358:1389  uint256 summation = sum2 - sum1 */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":1428:1433  16000 */\n      0x3e80\n        /* \"sosh/CertiFren.sol\":1406:1425  summation * 1 ether */\n      tag_156\n        /* \"sosh/CertiFren.sol\":1358:1389  uint256 summation = sum2 - sum1 */\n      dup3\n        /* \"sosh/CertiFren.sol\":1418:1425  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":1406:1425  summation * 1 ether */\n      tag_109\n      jump\t// in\n    tag_156:\n        /* \"sosh/CertiFren.sol\":1406:1433  summation * 1 ether / 16000 */\n      tag_116\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":2496:3496  function buyShares(address sharesSubject, uint256 amount) public payable {... */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":2596:2623  sharesSupply[sharesSubject] */\n      dup3\n      and\n        /* \"sosh/CertiFren.sol\":2579:2593  uint256 supply */\n      0x00\n        /* \"sosh/CertiFren.sol\":2596:2623  sharesSupply[sharesSubject] */\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":2596:2608  sharesSupply */\n      0x05\n        /* \"sosh/CertiFren.sol\":2596:2623  sharesSupply[sharesSubject] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sosh/CertiFren.sol\":2641:2651  supply > 0 */\n      dup1\n      iszero\n      iszero\n      dup1\n        /* \"sosh/CertiFren.sol\":2641:2682  supply > 0 || sharesSubject == msg.sender */\n      tag_159\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":2655:2682  sharesSubject == msg.sender */\n      dup4\n      and\n        /* \"sosh/CertiFren.sol\":2672:2682  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":2655:2682  sharesSubject == msg.sender */\n      eq\n        /* \"sosh/CertiFren.sol\":2641:2682  supply > 0 || sharesSubject == msg.sender */\n    tag_159:\n        /* \"sosh/CertiFren.sol\":2633:2735  require(supply > 0 || sharesSubject == msg.sender, \"Only the shares' subject can buy the first share\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2727:2729   */\n      0x20\n        /* \"sosh/CertiFren.sol\":2633:2735  require(supply > 0 || sharesSubject == msg.sender, \"Only the shares' subject can buy the first share\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2709:2730   */\n      mstore\n        /* \"#utility.yul\":2766:2768   */\n      0x30\n        /* \"#utility.yul\":2746:2764   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2739:2769   */\n      mstore\n        /* \"#utility.yul\":2805:2839   */\n      0x4f6e6c79207468652073686172657327207375626a6563742063616e20627579\n        /* \"#utility.yul\":2785:2803   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2778:2840   */\n      mstore\n      shl(0x80, 0x20746865206669727374207368617265)\n        /* \"#utility.yul\":2856:2874   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2849:2895   */\n      mstore\n        /* \"#utility.yul\":2912:2931   */\n      0x84\n      add\n        /* \"sosh/CertiFren.sol\":2633:2735  require(supply > 0 || sharesSubject == msg.sender, \"Only the shares' subject can buy the first share\") */\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"sosh/CertiFren.sol\":2745:2758  uint256 price */\n      0x00\n        /* \"sosh/CertiFren.sol\":2761:2785  getPrice(supply, amount) */\n      tag_163\n        /* \"sosh/CertiFren.sol\":2770:2776  supply */\n      dup3\n        /* \"sosh/CertiFren.sol\":2778:2784  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":2761:2769  getPrice */\n      tag_64\n        /* \"sosh/CertiFren.sol\":2761:2785  getPrice(supply, amount) */\n      jump\t// in\n    tag_163:\n        /* \"sosh/CertiFren.sol\":2745:2785  uint256 price = getPrice(supply, amount) */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":2795:2814  uint256 protocolFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":2846:2853  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":2825:2843  protocolFeePercent */\n      sload(0x02)\n        /* \"sosh/CertiFren.sol\":2817:2822  price */\n      dup4\n        /* \"sosh/CertiFren.sol\":2817:2843  price * protocolFeePercent */\n      tag_164\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_164:\n        /* \"sosh/CertiFren.sol\":2817:2853  price * protocolFeePercent / 1 ether */\n      tag_165\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_165:\n        /* \"sosh/CertiFren.sol\":2795:2853  uint256 protocolFee = price * protocolFeePercent / 1 ether */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":2863:2881  uint256 subjectFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":2912:2919  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":2892:2909  subjectFeePercent */\n      sload(0x03)\n        /* \"sosh/CertiFren.sol\":2884:2889  price */\n      dup5\n        /* \"sosh/CertiFren.sol\":2884:2909  price * subjectFeePercent */\n      tag_166\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_166:\n        /* \"sosh/CertiFren.sol\":2884:2919  price * subjectFeePercent / 1 ether */\n      tag_167\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_167:\n        /* \"sosh/CertiFren.sol\":2863:2919  uint256 subjectFee = price * subjectFeePercent / 1 ether */\n      swap1\n      pop\n      dup1\n        /* \"sosh/CertiFren.sol\":2950:2969  price + protocolFee */\n      tag_168\n        /* \"sosh/CertiFren.sol\":2958:2969  protocolFee */\n      dup4\n        /* \"sosh/CertiFren.sol\":2950:2955  price */\n      dup6\n        /* \"sosh/CertiFren.sol\":2950:2969  price + protocolFee */\n      tag_115\n      jump\t// in\n    tag_168:\n        /* \"sosh/CertiFren.sol\":2950:2982  price + protocolFee + subjectFee */\n      tag_169\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_169:\n        /* \"sosh/CertiFren.sol\":2937:2946  msg.value */\n      callvalue\n        /* \"sosh/CertiFren.sol\":2937:2982  msg.value >= price + protocolFee + subjectFee */\n      lt\n      iszero\n        /* \"sosh/CertiFren.sol\":2929:3007  require(msg.value >= price + protocolFee + subjectFee, \"Insufficient payment\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3144:3146   */\n      0x20\n        /* \"sosh/CertiFren.sol\":2929:3007  require(msg.value >= price + protocolFee + subjectFee, \"Insufficient payment\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3126:3147   */\n      mstore\n        /* \"#utility.yul\":3183:3185   */\n      0x14\n        /* \"#utility.yul\":3163:3181   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3156:3186   */\n      mstore\n      shl(0x62, 0x125b9cdd59999a58da595b9d081c185e5b595b9d)\n        /* \"#utility.yul\":3202:3220   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3195:3245   */\n      mstore\n        /* \"#utility.yul\":3262:3280   */\n      0x64\n      add\n        /* \"sosh/CertiFren.sol\":2929:3007  require(msg.value >= price + protocolFee + subjectFee, \"Insufficient payment\") */\n      tag_161\n        /* \"#utility.yul\":2942:3286   */\n      jump\n        /* \"sosh/CertiFren.sol\":2929:3007  require(msg.value >= price + protocolFee + subjectFee, \"Insufficient payment\") */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3060:3088  sharesBalance[sharesSubject] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":3060:3073  sharesBalance */\n      0x04\n        /* \"sosh/CertiFren.sol\":3060:3088  sharesBalance[sharesSubject] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sosh/CertiFren.sol\":3089:3099  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":3060:3100  sharesBalance[sharesSubject][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"sosh/CertiFren.sol\":3060:3109  sharesBalance[sharesSubject][msg.sender] + amount */\n      tag_173\n      swap1\n        /* \"sosh/CertiFren.sol\":3103:3109  amount */\n      dup7\n      swap1\n        /* \"sosh/CertiFren.sol\":3060:3109  sharesBalance[sharesSubject][msg.sender] + amount */\n      tag_115\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3017:3045  sharesBalance[sharesSubject] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":3017:3030  sharesBalance */\n      0x04\n        /* \"sosh/CertiFren.sol\":3017:3045  sharesBalance[sharesSubject] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sosh/CertiFren.sol\":3046:3056  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":3017:3057  sharesBalance[sharesSubject][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"sosh/CertiFren.sol\":3017:3109  sharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] + amount */\n      sstore\n        /* \"sosh/CertiFren.sol\":3149:3164  supply + amount */\n      tag_174\n        /* \"sosh/CertiFren.sol\":3158:3164  amount */\n      dup6\n        /* \"sosh/CertiFren.sol\":3149:3155  supply */\n      dup6\n        /* \"sosh/CertiFren.sol\":3149:3164  supply + amount */\n      tag_115\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3119:3146  sharesSupply[sharesSubject] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":3119:3131  sharesSupply */\n      0x05\n        /* \"sosh/CertiFren.sol\":3119:3146  sharesSupply[sharesSubject] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"sosh/CertiFren.sol\":3119:3164  sharesSupply[sharesSubject] = supply + amount */\n      sstore\n        /* \"sosh/CertiFren.sol\":3179:3274  Trade(msg.sender, sharesSubject, true, amount, price, protocolFee, subjectFee, supply + amount) */\n      0x2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c3\n        /* \"sosh/CertiFren.sol\":3185:3195  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":3132:3145  sharesSubject */\n      dup8\n        /* \"sosh/CertiFren.sol\":3212:3216  true */\n      0x01\n        /* \"sosh/CertiFren.sol\":3218:3224  amount */\n      dup9\n        /* \"sosh/CertiFren.sol\":3226:3231  price */\n      dup8\n        /* \"sosh/CertiFren.sol\":3233:3244  protocolFee */\n      dup8\n        /* \"sosh/CertiFren.sol\":3246:3256  subjectFee */\n      dup8\n        /* \"sosh/CertiFren.sol\":3258:3273  supply + amount */\n      tag_175\n        /* \"sosh/CertiFren.sol\":3218:3224  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":3258:3264  supply */\n      dup14\n        /* \"sosh/CertiFren.sol\":3258:3273  supply + amount */\n      tag_115\n      jump\t// in\n    tag_175:\n        /* \"sosh/CertiFren.sol\":3179:3274  Trade(msg.sender, sharesSubject, true, amount, price, protocolFee, subjectFee, supply + amount) */\n      mload(0x40)\n      tag_176\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"sosh/CertiFren.sol\":3304:3326  protocolFeeDestination */\n      sload(0x01)\n        /* \"sosh/CertiFren.sol\":3304:3355  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      mload(0x40)\n        /* \"sosh/CertiFren.sol\":3285:3298  bool success1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3304:3326  protocolFeeDestination */\n      and\n      swap1\n        /* \"sosh/CertiFren.sol\":3339:3350  protocolFee */\n      dup5\n      swap1\n        /* \"sosh/CertiFren.sol\":3285:3298  bool success1 */\n      dup4\n        /* \"sosh/CertiFren.sol\":3304:3355  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      dup2\n        /* \"sosh/CertiFren.sol\":3285:3298  bool success1 */\n      dup2\n        /* \"sosh/CertiFren.sol\":3304:3355  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      dup2\n        /* \"sosh/CertiFren.sol\":3339:3350  protocolFee */\n      dup6\n        /* \"sosh/CertiFren.sol\":3304:3326  protocolFeeDestination */\n      dup8\n        /* \"sosh/CertiFren.sol\":3304:3355  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_182\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_181)\n    tag_182:\n      0x60\n      swap2\n      pop\n    tag_181:\n      pop\n        /* \"sosh/CertiFren.sol\":3284:3355  (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":3366:3379  bool success2 */\n      0x00\n        /* \"sosh/CertiFren.sol\":3385:3398  sharesSubject */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3385:3403  sharesSubject.call */\n      and\n        /* \"sosh/CertiFren.sol\":3411:3421  subjectFee */\n      dup4\n        /* \"sosh/CertiFren.sol\":3385:3426  sharesSubject.call{value: subjectFee}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_186\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_185)\n    tag_186:\n      0x60\n      swap2\n      pop\n    tag_185:\n      pop\n        /* \"sosh/CertiFren.sol\":3365:3426  (bool success2, ) = sharesSubject.call{value: subjectFee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":3444:3452  success1 */\n      dup2\n        /* \"sosh/CertiFren.sol\":3444:3464  success1 && success2 */\n      dup1\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"sosh/CertiFren.sol\":3456:3464  success2 */\n      dup1\n        /* \"sosh/CertiFren.sol\":3444:3464  success1 && success2 */\n    tag_187:\n        /* \"sosh/CertiFren.sol\":3436:3489  require(success1 && success2, \"Unable to send funds\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4453:4455   */\n      0x20\n        /* \"sosh/CertiFren.sol\":3436:3489  require(success1 && success2, \"Unable to send funds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4435:4456   */\n      mstore\n        /* \"#utility.yul\":4492:4494   */\n      0x14\n        /* \"#utility.yul\":4472:4490   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4465:4495   */\n      mstore\n      shl(0x60, 0x556e61626c6520746f2073656e642066756e6473)\n        /* \"#utility.yul\":4511:4529   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4504:4554   */\n      mstore\n        /* \"#utility.yul\":4571:4589   */\n      0x64\n      add\n        /* \"sosh/CertiFren.sol\":3436:3489  require(success1 && success2, \"Unable to send funds\") */\n      tag_161\n        /* \"#utility.yul\":4251:4595   */\n      jump\n        /* \"sosh/CertiFren.sol\":3436:3489  require(success1 && success2, \"Unable to send funds\") */\n    tag_188:\n        /* \"sosh/CertiFren.sol\":2569:3496  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"sosh/CertiFren.sol\":2496:3496  function buyShares(address sharesSubject, uint256 amount) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_194\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_195\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"sosh/CertiFren.sol\":1611:1780  function getSellPrice(address sharesSubject, uint256 amount) public view returns (uint256) {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":1728:1755  sharesSupply[sharesSubject] */\n      dup3\n      and\n        /* \"sosh/CertiFren.sol\":1693:1700  uint256 */\n      0x00\n        /* \"sosh/CertiFren.sol\":1728:1755  sharesSupply[sharesSubject] */\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":1728:1740  sharesSupply */\n      0x05\n        /* \"sosh/CertiFren.sol\":1728:1755  sharesSupply[sharesSubject] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"sosh/CertiFren.sol\":1719:1773  getPrice(sharesSupply[sharesSubject] - amount, amount) */\n      tag_127\n      swap1\n        /* \"sosh/CertiFren.sol\":1728:1764  sharesSupply[sharesSubject] - amount */\n      tag_199\n      swap1\n        /* \"sosh/CertiFren.sol\":1758:1764  amount */\n      dup5\n      swap1\n        /* \"sosh/CertiFren.sol\":1728:1764  sharesSupply[sharesSubject] - amount */\n      tag_124\n      jump\t// in\n    tag_199:\n        /* \"sosh/CertiFren.sol\":1766:1772  amount */\n      dup4\n        /* \"sosh/CertiFren.sol\":1719:1727  getPrice */\n      tag_64\n        /* \"sosh/CertiFren.sol\":1719:1773  getPrice(sharesSupply[sharesSubject] - amount, amount) */\n      jump\t// in\n        /* \"sosh/CertiFren.sol\":790:908  function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_201\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_201:\n        /* \"sosh/CertiFren.sol\":869:887  protocolFeePercent */\n      0x02\n        /* \"sosh/CertiFren.sol\":869:901  protocolFeePercent = _feePercent */\n      sstore\n        /* \"sosh/CertiFren.sol\":790:908  function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {... */\n      jump\t// out\n        /* \"sosh/CertiFren.sol\":3502:4571  function sellShares(address sharesSubject, uint256 amount) public payable {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3603:3630  sharesSupply[sharesSubject] */\n      dup3\n      and\n        /* \"sosh/CertiFren.sol\":3586:3600  uint256 supply */\n      0x00\n        /* \"sosh/CertiFren.sol\":3603:3630  sharesSupply[sharesSubject] */\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":3603:3615  sharesSupply */\n      0x05\n        /* \"sosh/CertiFren.sol\":3603:3630  sharesSupply[sharesSubject] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sosh/CertiFren.sol\":3648:3663  supply > amount */\n      dup2\n      dup2\n      gt\n        /* \"sosh/CertiFren.sol\":3640:3694  require(supply > amount, \"Cannot sell the last share\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4802:4804   */\n      0x20\n        /* \"sosh/CertiFren.sol\":3640:3694  require(supply > amount, \"Cannot sell the last share\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4784:4805   */\n      mstore\n        /* \"#utility.yul\":4841:4843   */\n      0x1a\n        /* \"#utility.yul\":4821:4839   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4814:4844   */\n      mstore\n        /* \"#utility.yul\":4880:4908   */\n      0x43616e6e6f742073656c6c20746865206c617374207368617265000000000000\n        /* \"#utility.yul\":4860:4878   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4853:4909   */\n      mstore\n        /* \"#utility.yul\":4926:4944   */\n      0x64\n      add\n        /* \"sosh/CertiFren.sol\":3640:3694  require(supply > amount, \"Cannot sell the last share\") */\n      tag_161\n        /* \"#utility.yul\":4600:4950   */\n      jump\n        /* \"sosh/CertiFren.sol\":3640:3694  require(supply > amount, \"Cannot sell the last share\") */\n    tag_204:\n        /* \"sosh/CertiFren.sol\":3704:3717  uint256 price */\n      0x00\n        /* \"sosh/CertiFren.sol\":3720:3753  getPrice(supply - amount, amount) */\n      tag_207\n        /* \"sosh/CertiFren.sol\":3729:3744  supply - amount */\n      tag_208\n        /* \"sosh/CertiFren.sol\":3738:3744  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":3729:3735  supply */\n      dup5\n        /* \"sosh/CertiFren.sol\":3729:3744  supply - amount */\n      tag_124\n      jump\t// in\n    tag_208:\n        /* \"sosh/CertiFren.sol\":3746:3752  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":3720:3728  getPrice */\n      tag_64\n        /* \"sosh/CertiFren.sol\":3720:3753  getPrice(supply - amount, amount) */\n      jump\t// in\n    tag_207:\n        /* \"sosh/CertiFren.sol\":3704:3753  uint256 price = getPrice(supply - amount, amount) */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":3763:3782  uint256 protocolFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":3814:3821  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":3793:3811  protocolFeePercent */\n      sload(0x02)\n        /* \"sosh/CertiFren.sol\":3785:3790  price */\n      dup4\n        /* \"sosh/CertiFren.sol\":3785:3811  price * protocolFeePercent */\n      tag_209\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_209:\n        /* \"sosh/CertiFren.sol\":3785:3821  price * protocolFeePercent / 1 ether */\n      tag_210\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_210:\n        /* \"sosh/CertiFren.sol\":3763:3821  uint256 protocolFee = price * protocolFeePercent / 1 ether */\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":3831:3849  uint256 subjectFee */\n      0x00\n        /* \"sosh/CertiFren.sol\":3880:3887  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/CertiFren.sol\":3860:3877  subjectFeePercent */\n      sload(0x03)\n        /* \"sosh/CertiFren.sol\":3852:3857  price */\n      dup5\n        /* \"sosh/CertiFren.sol\":3852:3877  price * subjectFeePercent */\n      tag_211\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_211:\n        /* \"sosh/CertiFren.sol\":3852:3887  price * subjectFeePercent / 1 ether */\n      tag_212\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3905:3933  sharesBalance[sharesSubject] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":3905:3918  sharesBalance */\n      0x04\n        /* \"sosh/CertiFren.sol\":3905:3933  sharesBalance[sharesSubject] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sosh/CertiFren.sol\":3934:3944  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":3905:3945  sharesBalance[sharesSubject][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"sosh/CertiFren.sol\":3831:3887  uint256 subjectFee = price * subjectFeePercent / 1 ether */\n      swap1\n      swap2\n      pop\n        /* \"sosh/CertiFren.sol\":3905:3955  sharesBalance[sharesSubject][msg.sender] >= amount */\n      dup6\n      gt\n      iszero\n        /* \"sosh/CertiFren.sol\":3897:3979  require(sharesBalance[sharesSubject][msg.sender] >= amount, \"Insufficient shares\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5157:5159   */\n      0x20\n        /* \"sosh/CertiFren.sol\":3897:3979  require(sharesBalance[sharesSubject][msg.sender] >= amount, \"Insufficient shares\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5139:5160   */\n      mstore\n        /* \"#utility.yul\":5196:5198   */\n      0x13\n        /* \"#utility.yul\":5176:5194   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5169:5199   */\n      mstore\n      shl(0x68, 0x496e73756666696369656e7420736861726573)\n        /* \"#utility.yul\":5215:5233   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5208:5257   */\n      mstore\n        /* \"#utility.yul\":5274:5292   */\n      0x64\n      add\n        /* \"sosh/CertiFren.sol\":3897:3979  require(sharesBalance[sharesSubject][msg.sender] >= amount, \"Insufficient shares\") */\n      tag_161\n        /* \"#utility.yul\":4955:5298   */\n      jump\n        /* \"sosh/CertiFren.sol\":3897:3979  require(sharesBalance[sharesSubject][msg.sender] >= amount, \"Insufficient shares\") */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":4032:4060  sharesBalance[sharesSubject] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":4032:4045  sharesBalance */\n      0x04\n        /* \"sosh/CertiFren.sol\":4032:4060  sharesBalance[sharesSubject] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sosh/CertiFren.sol\":4061:4071  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":4032:4072  sharesBalance[sharesSubject][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"sosh/CertiFren.sol\":4032:4081  sharesBalance[sharesSubject][msg.sender] - amount */\n      tag_216\n      swap1\n        /* \"sosh/CertiFren.sol\":4075:4081  amount */\n      dup7\n      swap1\n        /* \"sosh/CertiFren.sol\":4032:4081  sharesBalance[sharesSubject][msg.sender] - amount */\n      tag_124\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":3989:4017  sharesBalance[sharesSubject] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":3989:4002  sharesBalance */\n      0x04\n        /* \"sosh/CertiFren.sol\":3989:4017  sharesBalance[sharesSubject] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"sosh/CertiFren.sol\":4018:4028  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":3989:4029  sharesBalance[sharesSubject][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"sosh/CertiFren.sol\":3989:4081  sharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] - amount */\n      sstore\n        /* \"sosh/CertiFren.sol\":4121:4136  supply - amount */\n      tag_217\n        /* \"sosh/CertiFren.sol\":4130:4136  amount */\n      dup6\n        /* \"sosh/CertiFren.sol\":4121:4127  supply */\n      dup6\n        /* \"sosh/CertiFren.sol\":4121:4136  supply - amount */\n      tag_124\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":4091:4118  sharesSupply[sharesSubject] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"sosh/CertiFren.sol\":4091:4103  sharesSupply */\n      0x05\n        /* \"sosh/CertiFren.sol\":4091:4118  sharesSupply[sharesSubject] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"sosh/CertiFren.sol\":4091:4136  sharesSupply[sharesSubject] = supply - amount */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"sosh/CertiFren.sol\":4151:4247  Trade(msg.sender, sharesSubject, false, amount, price, protocolFee, subjectFee, supply - amount) */\n      0x2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c3\n      swap1\n        /* \"sosh/CertiFren.sol\":4157:4167  msg.sender */\n      caller\n      swap1\n        /* \"sosh/CertiFren.sol\":4104:4117  sharesSubject */\n      dup9\n      swap1\n        /* \"sosh/CertiFren.sol\":4191:4197  amount */\n      dup9\n        /* \"sosh/CertiFren.sol\":4199:4204  price */\n      dup8\n        /* \"sosh/CertiFren.sol\":4206:4217  protocolFee */\n      dup8\n        /* \"sosh/CertiFren.sol\":4219:4229  subjectFee */\n      dup8\n        /* \"sosh/CertiFren.sol\":4231:4246  supply - amount */\n      tag_218\n        /* \"sosh/CertiFren.sol\":4191:4197  amount */\n      dup5\n        /* \"sosh/CertiFren.sol\":4231:4237  supply */\n      dup14\n        /* \"sosh/CertiFren.sol\":4231:4246  supply - amount */\n      tag_124\n      jump\t// in\n    tag_218:\n        /* \"sosh/CertiFren.sol\":4151:4247  Trade(msg.sender, sharesSubject, false, amount, price, protocolFee, subjectFee, supply - amount) */\n      mload(0x40)\n      tag_219\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"sosh/CertiFren.sol\":4258:4271  bool success1 */\n      0x00\n        /* \"sosh/CertiFren.sol\":4277:4287  msg.sender */\n      caller\n        /* \"sosh/CertiFren.sol\":4322:4332  subjectFee */\n      dup3\n        /* \"sosh/CertiFren.sol\":4300:4319  price - protocolFee */\n      tag_220\n        /* \"sosh/CertiFren.sol\":4308:4319  protocolFee */\n      dup6\n        /* \"sosh/CertiFren.sol\":4300:4305  price */\n      dup8\n        /* \"sosh/CertiFren.sol\":4300:4319  price - protocolFee */\n      tag_124\n      jump\t// in\n    tag_220:\n        /* \"sosh/CertiFren.sol\":4300:4332  price - protocolFee - subjectFee */\n      tag_221\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_221:\n        /* \"sosh/CertiFren.sol\":4277:4337  msg.sender.call{value: price - protocolFee - subjectFee}(\"\") */\n      mload(0x40)\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_225\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_224)\n    tag_225:\n      0x60\n      swap2\n      pop\n    tag_224:\n      pop\n      pop\n        /* \"sosh/CertiFren.sol\":4367:4389  protocolFeeDestination */\n      sload(0x01)\n        /* \"sosh/CertiFren.sol\":4367:4418  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      mload(0x40)\n        /* \"sosh/CertiFren.sol\":4257:4337  (bool success1, ) = msg.sender.call{value: price - protocolFee - subjectFee}(\"\") */\n      swap2\n      swap3\n      pop\n        /* \"sosh/CertiFren.sol\":4348:4361  bool success2 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":4367:4389  protocolFeeDestination */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"sosh/CertiFren.sol\":4402:4413  protocolFee */\n      dup6\n      swap1\n        /* \"sosh/CertiFren.sol\":4348:4361  bool success2 */\n      dup4\n        /* \"sosh/CertiFren.sol\":4367:4418  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      dup2\n        /* \"sosh/CertiFren.sol\":4348:4361  bool success2 */\n      dup2\n        /* \"sosh/CertiFren.sol\":4367:4418  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      dup2\n        /* \"sosh/CertiFren.sol\":4402:4413  protocolFee */\n      dup6\n        /* \"sosh/CertiFren.sol\":4367:4389  protocolFeeDestination */\n      dup8\n        /* \"sosh/CertiFren.sol\":4367:4418  protocolFeeDestination.call{value: protocolFee}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_229\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_228)\n    tag_229:\n      0x60\n      swap2\n      pop\n    tag_228:\n      pop\n        /* \"sosh/CertiFren.sol\":4347:4418  (bool success2, ) = protocolFeeDestination.call{value: protocolFee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":4429:4442  bool success3 */\n      0x00\n        /* \"sosh/CertiFren.sol\":4448:4461  sharesSubject */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/CertiFren.sol\":4448:4466  sharesSubject.call */\n      and\n        /* \"sosh/CertiFren.sol\":4474:4484  subjectFee */\n      dup5\n        /* \"sosh/CertiFren.sol\":4448:4489  sharesSubject.call{value: subjectFee}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_233\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_232)\n    tag_233:\n      0x60\n      swap2\n      pop\n    tag_232:\n      pop\n        /* \"sosh/CertiFren.sol\":4428:4489  (bool success3, ) = sharesSubject.call{value: subjectFee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sosh/CertiFren.sol\":4507:4515  success1 */\n      dup3\n        /* \"sosh/CertiFren.sol\":4507:4527  success1 && success2 */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"sosh/CertiFren.sol\":4519:4527  success2 */\n      dup2\n        /* \"sosh/CertiFren.sol\":4507:4527  success1 && success2 */\n    tag_234:\n        /* \"sosh/CertiFren.sol\":4507:4539  success1 && success2 && success3 */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"sosh/CertiFren.sol\":4531:4539  success3 */\n      dup1\n        /* \"sosh/CertiFren.sol\":4507:4539  success1 && success2 && success3 */\n    tag_235:\n        /* \"sosh/CertiFren.sol\":4499:4564  require(success1 && success2 && success3, \"Unable to send funds\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4453:4455   */\n      0x20\n        /* \"sosh/CertiFren.sol\":4499:4564  require(success1 && success2 && success3, \"Unable to send funds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4435:4456   */\n      mstore\n        /* \"#utility.yul\":4492:4494   */\n      0x14\n        /* \"#utility.yul\":4472:4490   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4465:4495   */\n      mstore\n      shl(0x60, 0x556e61626c6520746f2073656e642066756e6473)\n        /* \"#utility.yul\":4511:4529   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4504:4554   */\n      mstore\n        /* \"#utility.yul\":4571:4589   */\n      0x64\n      add\n        /* \"sosh/CertiFren.sol\":4499:4564  require(success1 && success2 && success3, \"Unable to send funds\") */\n      tag_161\n        /* \"#utility.yul\":4251:4595   */\n      jump\n        /* \"sosh/CertiFren.sol\":4499:4564  require(success1 && success2 && success3, \"Unable to send funds\") */\n    tag_236:\n        /* \"sosh/CertiFren.sol\":3576:4571  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"sosh/CertiFren.sol\":3502:4571  function sellShares(address sharesSubject, uint256 amount) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5505:5507   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5487:5508   */\n      mstore\n        /* \"#utility.yul\":5544:5546   */\n      0x26\n        /* \"#utility.yul\":5524:5542   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5517:5547   */\n      mstore\n        /* \"#utility.yul\":5583:5617   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5563:5581   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5556:5618   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5634:5652   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5627:5663   */\n      mstore\n        /* \"#utility.yul\":5680:5699   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_161\n        /* \"#utility.yul\":5303:5705   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_241:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_244\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_195\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"sosh/CertiFren.sol\":658:784  function setFeeDestination(address _feeDestination) public onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_246\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_246:\n        /* \"sosh/CertiFren.sol\":737:759  protocolFeeDestination */\n      0x01\n        /* \"sosh/CertiFren.sol\":737:777  protocolFeeDestination = _feeDestination */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"sosh/CertiFren.sol\":658:784  function setFeeDestination(address _feeDestination) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5912:5914   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5894:5915   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5931:5949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5924:5954   */\n      mstore\n        /* \"#utility.yul\":5990:6024   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5970:5988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5963:6025   */\n      mstore\n        /* \"#utility.yul\":6042:6060   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n        /* \"#utility.yul\":5710:6066   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_257:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_261:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:452   */\n    tag_26:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_263:\n        /* \"#utility.yul\":360:389   */\n      tag_264\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_257\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":350:389   */\n      swap2\n      pop\n        /* \"#utility.yul\":408:446   */\n      tag_265\n        /* \"#utility.yul\":442:444   */\n      0x20\n        /* \"#utility.yul\":431:440   */\n      dup5\n        /* \"#utility.yul\":427:445   */\n      add\n        /* \"#utility.yul\":408:446   */\n      tag_257\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":398:446   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:452   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":639:893   */\n    tag_33:\n        /* \"#utility.yul\":707:713   */\n      0x00\n        /* \"#utility.yul\":715:721   */\n      dup1\n        /* \"#utility.yul\":768:770   */\n      0x40\n        /* \"#utility.yul\":756:765   */\n      dup4\n        /* \"#utility.yul\":747:754   */\n      dup6\n        /* \"#utility.yul\":743:766   */\n      sub\n        /* \"#utility.yul\":739:771   */\n      slt\n        /* \"#utility.yul\":736:788   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":784:785   */\n      0x00\n        /* \"#utility.yul\":781:782   */\n      dup1\n        /* \"#utility.yul\":774:786   */\n      revert\n        /* \"#utility.yul\":736:788   */\n    tag_268:\n        /* \"#utility.yul\":807:836   */\n      tag_269\n        /* \"#utility.yul\":826:835   */\n      dup4\n        /* \"#utility.yul\":807:836   */\n      tag_257\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":797:836   */\n      swap5\n        /* \"#utility.yul\":883:885   */\n      0x20\n        /* \"#utility.yul\":868:886   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":855:887   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":639:893   */\n      jump\t// out\n        /* \"#utility.yul\":1106:1286   */\n    tag_58:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1218:1220   */\n      0x20\n        /* \"#utility.yul\":1206:1215   */\n      dup3\n        /* \"#utility.yul\":1197:1204   */\n      dup5\n        /* \"#utility.yul\":1193:1216   */\n      sub\n        /* \"#utility.yul\":1189:1221   */\n      slt\n        /* \"#utility.yul\":1186:1238   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1234:1235   */\n      0x00\n        /* \"#utility.yul\":1231:1232   */\n      dup1\n        /* \"#utility.yul\":1224:1236   */\n      revert\n        /* \"#utility.yul\":1186:1238   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":1257:1280   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1106:1286   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1291:1539   */\n    tag_63:\n        /* \"#utility.yul\":1359:1365   */\n      0x00\n        /* \"#utility.yul\":1367:1373   */\n      dup1\n        /* \"#utility.yul\":1420:1422   */\n      0x40\n        /* \"#utility.yul\":1408:1417   */\n      dup4\n        /* \"#utility.yul\":1399:1406   */\n      dup6\n        /* \"#utility.yul\":1395:1418   */\n      sub\n        /* \"#utility.yul\":1391:1423   */\n      slt\n        /* \"#utility.yul\":1388:1440   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1433:1434   */\n      dup1\n        /* \"#utility.yul\":1426:1438   */\n      revert\n        /* \"#utility.yul\":1388:1440   */\n    tag_274:\n      pop\n      pop\n        /* \"#utility.yul\":1459:1482   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1529:1531   */\n      0x20\n        /* \"#utility.yul\":1514:1532   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1501:1533   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1291:1539   */\n      jump\t// out\n        /* \"#utility.yul\":1544:1730   */\n    tag_95:\n        /* \"#utility.yul\":1603:1609   */\n      0x00\n        /* \"#utility.yul\":1656:1658   */\n      0x20\n        /* \"#utility.yul\":1644:1653   */\n      dup3\n        /* \"#utility.yul\":1635:1642   */\n      dup5\n        /* \"#utility.yul\":1631:1654   */\n      sub\n        /* \"#utility.yul\":1627:1659   */\n      slt\n        /* \"#utility.yul\":1624:1676   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1672:1673   */\n      0x00\n        /* \"#utility.yul\":1669:1670   */\n      dup1\n        /* \"#utility.yul\":1662:1674   */\n      revert\n        /* \"#utility.yul\":1624:1676   */\n    tag_276:\n        /* \"#utility.yul\":1695:1724   */\n      tag_127\n        /* \"#utility.yul\":1714:1723   */\n      dup3\n        /* \"#utility.yul\":1695:1724   */\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":1735:1862   */\n    tag_258:\n        /* \"#utility.yul\":1796:1806   */\n      0x4e487b71\n        /* \"#utility.yul\":1791:1794   */\n      0xe0\n        /* \"#utility.yul\":1787:1807   */\n      shl\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1808   */\n      mstore\n        /* \"#utility.yul\":1827:1831   */\n      0x11\n        /* \"#utility.yul\":1824:1825   */\n      0x04\n        /* \"#utility.yul\":1817:1832   */\n      mstore\n        /* \"#utility.yul\":1851:1855   */\n      0x24\n        /* \"#utility.yul\":1848:1849   */\n      0x00\n        /* \"#utility.yul\":1841:1856   */\n      revert\n        /* \"#utility.yul\":1867:2035   */\n    tag_109:\n        /* \"#utility.yul\":1940:1949   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1971:1980   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1988:2003   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1982:2004   */\n      dup5\n      eq\n        /* \"#utility.yul\":1968:2005   */\n      or\n        /* \"#utility.yul\":1958:2029   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2009:2027   */\n      tag_106\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":2040:2257   */\n    tag_111:\n        /* \"#utility.yul\":2080:2081   */\n      0x00\n        /* \"#utility.yul\":2106:2107   */\n      dup3\n        /* \"#utility.yul\":2096:2228   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":2150:2160   */\n      0x4e487b71\n        /* \"#utility.yul\":2145:2148   */\n      0xe0\n        /* \"#utility.yul\":2141:2161   */\n      shl\n        /* \"#utility.yul\":2138:2139   */\n      0x00\n        /* \"#utility.yul\":2131:2162   */\n      mstore\n        /* \"#utility.yul\":2185:2189   */\n      0x12\n        /* \"#utility.yul\":2182:2183   */\n      0x04\n        /* \"#utility.yul\":2175:2190   */\n      mstore\n        /* \"#utility.yul\":2213:2217   */\n      0x24\n        /* \"#utility.yul\":2210:2211   */\n      0x00\n        /* \"#utility.yul\":2203:2218   */\n      revert\n        /* \"#utility.yul\":2096:2228   */\n    tag_283:\n      pop\n        /* \"#utility.yul\":2242:2251   */\n      div\n      swap1\n        /* \"#utility.yul\":2040:2257   */\n      jump\t// out\n        /* \"#utility.yul\":2262:2387   */\n    tag_115:\n        /* \"#utility.yul\":2327:2336   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2348:2358   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2345:2381   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2361:2379   */\n      tag_106\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":2392:2520   */\n    tag_124:\n        /* \"#utility.yul\":2459:2468   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2480:2491   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2477:2514   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2494:2512   */\n      tag_106\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":3291:4036   */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3684:3699   */\n      swap9\n      dup10\n      and\n        /* \"#utility.yul\":3666:3700   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3736:3751   */\n      swap7\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":3731:3733   */\n      0x20\n        /* \"#utility.yul\":3716:3734   */\n      dup8\n      add\n        /* \"#utility.yul\":3709:3752   */\n      mstore\n        /* \"#utility.yul\":3795:3809   */\n      swap4\n      iszero\n        /* \"#utility.yul\":3788:3810   */\n      iszero\n        /* \"#utility.yul\":3783:3785   */\n      0x40\n        /* \"#utility.yul\":3768:3786   */\n      dup7\n      add\n        /* \"#utility.yul\":3761:3811   */\n      mstore\n        /* \"#utility.yul\":3842:3844   */\n      0x60\n        /* \"#utility.yul\":3827:3845   */\n      dup6\n      add\n        /* \"#utility.yul\":3820:3854   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3885:3888   */\n      0x80\n        /* \"#utility.yul\":3870:3889   */\n      dup5\n      add\n        /* \"#utility.yul\":3863:3898   */\n      mstore\n        /* \"#utility.yul\":3646:3649   */\n      0xa0\n        /* \"#utility.yul\":3914:3933   */\n      dup4\n      add\n        /* \"#utility.yul\":3907:3942   */\n      mstore\n        /* \"#utility.yul\":3973:3976   */\n      0xc0\n        /* \"#utility.yul\":3958:3977   */\n      dup3\n      add\n        /* \"#utility.yul\":3951:3986   */\n      mstore\n        /* \"#utility.yul\":4017:4020   */\n      0xe0\n        /* \"#utility.yul\":4002:4021   */\n      dup2\n      add\n        /* \"#utility.yul\":3995:4030   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3615:3618   */\n      0x0100\n        /* \"#utility.yul\":3600:3619   */\n      add\n      swap1\n        /* \"#utility.yul\":3291:4036   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200f6f1f540079aca60e8c32d73ab0596f31a7b0796965089bf9747146c1e9f35064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 30,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506100193361001e565b61006d565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f198061007a5f395ff3fe608060405260043610610105575f3560e01c8063715018a611610092578063b51d053411610062578063b51d0534146102bc578063d6e6eb9f146102cf578063f2fde38b146102e4578063f9931be014610303578063fbe532341461032e575f80fd5b8063715018a61461024e5780638da5cb5b146102625780639ae717811461027e578063a49834211461029d575f80fd5b80634635256e116100d85780634635256e146101a55780634ce7957c146101c45780635a8a764e146101fb5780635cf4ee911461021c5780636945b1231461023b575f80fd5b8063020235ff146101095780630f026f6d146101525780632267a89c1461017157806324dc441d14610190575b5f80fd5b348015610114575f80fd5b5061013f610123366004610d86565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561015d575f80fd5b5061013f61016c366004610db7565b61034d565b34801561017c575f80fd5b5061013f61018b366004610db7565b6103c4565b34801561019b575f80fd5b5061013f60035481565b3480156101b0575f80fd5b5061013f6101bf366004610db7565b61042f565b3480156101cf575f80fd5b506001546101e3906001600160a01b031681565b6040516001600160a01b039091168152602001610149565b348015610206575f80fd5b5061021a610215366004610ddf565b610458565b005b348015610227575f80fd5b5061013f610236366004610df6565b610465565b61021a610249366004610db7565b610577565b348015610259575f80fd5b5061021a61087d565b34801561026d575f80fd5b505f546001600160a01b03166101e3565b348015610289575f80fd5b5061013f610298366004610db7565b610890565b3480156102a8575f80fd5b5061021a6102b7366004610ddf565b6108bd565b61021a6102ca366004610db7565b6108ca565b3480156102da575f80fd5b5061013f60025481565b3480156102ef575f80fd5b5061021a6102fe366004610e16565b610c20565b34801561030e575f80fd5b5061013f61031d366004610e16565b60056020525f908152604090205481565b348015610339575f80fd5b5061021a610348366004610e16565b610c99565b5f80610359848461042f565b90505f670de0b6b3a7640000600254836103739190610e43565b61037d9190610e5a565b90505f670de0b6b3a7640000600354846103979190610e43565b6103a19190610e5a565b9050806103ae8385610e79565b6103b89190610e79565b93505050505b92915050565b5f806103d08484610890565b90505f670de0b6b3a7640000600254836103ea9190610e43565b6103f49190610e5a565b90505f670de0b6b3a76400006003548461040e9190610e43565b6104189190610e5a565b9050806104258385610e8c565b6103b89190610e8c565b6001600160a01b0382165f908152600560205260408120546104519083610465565b9392505050565b610460610cc3565b600355565b5f8083156104bf57600661047a600186610e8c565b610485906002610e43565b610490906001610e79565b8561049c600182610e8c565b6104a69190610e43565b6104b09190610e43565b6104ba9190610e5a565b6104c1565b5f5b90505f841580156104d25750836001145b610547576006846104e4600188610e8c565b6104ee9190610e79565b6104f9906002610e43565b610504906001610e79565b61050e8688610e79565b8661051a60018a610e8c565b6105249190610e79565b61052e9190610e43565b6105389190610e43565b6105429190610e5a565b610549565b5f5b90505f6105568383610e8c565b9050613e8061056d82670de0b6b3a7640000610e43565b6103b89190610e5a565b6001600160a01b0382165f90815260056020526040902054801515806105a557506001600160a01b03831633145b61060f5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652073686172657327207375626a6563742063616e2062757960448201526f2074686520666972737420736861726560801b60648201526084015b60405180910390fd5b5f61061a8284610465565b90505f670de0b6b3a7640000600254836106349190610e43565b61063e9190610e5a565b90505f670de0b6b3a7640000600354846106589190610e43565b6106629190610e5a565b90508061066f8385610e79565b6106799190610e79565b3410156106bf5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610606565b6001600160a01b0386165f9081526004602090815260408083203384529091529020546106ed908690610e79565b6001600160a01b0387165f90815260046020908152604080832033845290915290205561071a8585610e79565b6001600160a01b0387165f908152600560205260409020557f2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c33387600188878787610765848d610e79565b604051610779989796959493929190610e9f565b60405180910390a16001546040515f916001600160a01b03169084908381818185875af1925050503d805f81146107cb576040519150601f19603f3d011682016040523d82523d5f602084013e6107d0565b606091505b505090505f876001600160a01b0316836040515f6040518083038185875af1925050503d805f811461081d576040519150601f19603f3d011682016040523d82523d5f602084013e610822565b606091505b505090508180156108305750805b6108735760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b6044820152606401610606565b5050505050505050565b610885610cc3565b61088e5f610d1c565b565b6001600160a01b0382165f90815260056020526040812054610451906108b7908490610e8c565b83610465565b6108c5610cc3565b600255565b6001600160a01b0382165f908152600560205260409020548181116109315760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073656c6c20746865206c6173742073686172650000000000006044820152606401610606565b5f61094561093f8484610e8c565b84610465565b90505f670de0b6b3a76400006002548361095f9190610e43565b6109699190610e5a565b90505f670de0b6b3a7640000600354846109839190610e43565b61098d9190610e5a565b6001600160a01b0387165f9081526004602090815260408083203384529091529020549091508511156109f85760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b6044820152606401610606565b6001600160a01b0386165f908152600460209081526040808320338452909152902054610a26908690610e8c565b6001600160a01b0387165f908152600460209081526040808320338452909152902055610a538585610e8c565b6001600160a01b0387165f908152600560205260408120919091557f2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c3903390889088878787610aa2848d610e8c565b604051610ab6989796959493929190610e9f565b60405180910390a15f3382610acb8587610e8c565b610ad59190610e8c565b6040515f81818185875af1925050503d805f8114610b0e576040519150601f19603f3d011682016040523d82523d5f602084013e610b13565b606091505b50506001546040519192505f916001600160a01b039091169085908381818185875af1925050503d805f8114610b64576040519150601f19603f3d011682016040523d82523d5f602084013e610b69565b606091505b505090505f886001600160a01b0316846040515f6040518083038185875af1925050503d805f8114610bb6576040519150601f19603f3d011682016040523d82523d5f602084013e610bbb565b606091505b50509050828015610bc95750815b8015610bd25750805b610c155760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b6044820152606401610606565b505050505050505050565b610c28610cc3565b6001600160a01b038116610c8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610606565b610c9681610d1c565b50565b610ca1610cc3565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b5f546001600160a01b0316331461088e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610606565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610d81575f80fd5b919050565b5f8060408385031215610d97575f80fd5b610da083610d6b565b9150610dae60208401610d6b565b90509250929050565b5f8060408385031215610dc8575f80fd5b610dd183610d6b565b946020939093013593505050565b5f60208284031215610def575f80fd5b5035919050565b5f8060408385031215610e07575f80fd5b50508035926020909101359150565b5f60208284031215610e26575f80fd5b61045182610d6b565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176103be576103be610e2f565b5f82610e7457634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156103be576103be610e2f565b818103818111156103be576103be610e2f565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e0810191909152610100019056fea26469706673582212200f6f1f540079aca60e8c32d73ab0596f31a7b0796965089bf9747146c1e9f35064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19 CALLER PUSH2 0x1E JUMP JUMPDEST PUSH2 0x6D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF19 DUP1 PUSH2 0x7A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xB51D0534 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xB51D0534 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xD6E6EB9F EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF9931BE0 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xFBE53234 EQ PUSH2 0x32E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x9AE71781 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xA4983421 EQ PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4635256E GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x4635256E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x4CE7957C EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5A8A764E EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x5CF4EE91 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x6945B123 EQ PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20235FF EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xF026F6D EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x2267A89C EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x24DC441D EQ PUSH2 0x190 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x149 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDF JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x87D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDF JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x21A PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x359 DUP5 DUP5 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3AE DUP4 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D0 DUP5 DUP5 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x418 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x425 DUP4 DUP6 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x451 SWAP1 DUP4 PUSH2 0x465 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x460 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH0 DUP1 DUP4 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x6 PUSH2 0x47A PUSH1 0x1 DUP7 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x485 SWAP1 PUSH1 0x2 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x490 SWAP1 PUSH1 0x1 PUSH2 0xE79 JUMP JUMPDEST DUP6 PUSH2 0x49C PUSH1 0x1 DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP PUSH0 DUP5 ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI POP DUP4 PUSH1 0x1 EQ JUMPDEST PUSH2 0x547 JUMPI PUSH1 0x6 DUP5 PUSH2 0x4E4 PUSH1 0x1 DUP9 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x4F9 SWAP1 PUSH1 0x2 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x504 SWAP1 PUSH1 0x1 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x50E DUP7 DUP9 PUSH2 0xE79 JUMP JUMPDEST DUP7 PUSH2 0x51A PUSH1 0x1 DUP11 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x524 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x542 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP PUSH0 PUSH2 0x556 DUP4 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH2 0x3E80 PUSH2 0x56D DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x5A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ JUMPDEST PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652073686172657327207375626A6563742063616E20627579 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x20746865206669727374207368617265 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x61A DUP3 DUP5 PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x63E SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x662 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x66F DUP4 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x679 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x6ED SWAP1 DUP7 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x71A DUP6 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH32 0x2C76E7A47FD53E2854856AC3F0A5F3EE40D15CFAA82266357EA9779C486AB9C3 CALLER DUP8 PUSH1 0x1 DUP9 DUP8 DUP8 DUP8 PUSH2 0x765 DUP5 DUP14 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x779 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x822 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x830 JUMPI POP DUP1 JUMPDEST PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x556E61626C6520746F2073656E642066756E6473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x885 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x88E PUSH0 PUSH2 0xD1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x451 SWAP1 PUSH2 0x8B7 SWAP1 DUP5 SWAP1 PUSH2 0xE8C JUMP JUMPDEST DUP4 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 GT PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C20746865206C617374207368617265000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH0 PUSH2 0x945 PUSH2 0x93F DUP5 DUP5 PUSH2 0xE8C JUMP JUMPDEST DUP5 PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x983 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x98D SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP6 GT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xA26 SWAP1 DUP7 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0xA53 DUP6 DUP6 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x2C76E7A47FD53E2854856AC3F0A5F3EE40D15CFAA82266357EA9779C486AB9C3 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 DUP8 DUP8 DUP8 PUSH2 0xAA2 DUP5 DUP14 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB6 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 CALLER DUP3 PUSH2 0xACB DUP6 DUP8 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xBC9 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xBD2 JUMPI POP DUP1 JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x556E61626C6520746F2073656E642066756E6473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC28 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x606 JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xD1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCA1 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD81 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD97 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDA0 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE PUSH1 0x20 DUP5 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE07 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x451 DUP3 PUSH2 0xD6B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3BE JUMPI PUSH2 0x3BE PUSH2 0xE2F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE74 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3BE JUMPI PUSH2 0x3BE PUSH2 0xE2F JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH2 0x3BE PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE SWAP7 SWAP1 SWAP8 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PUSH16 0x1F540079ACA60E8C32D73AB0596F31A7 0xB0 PUSH26 0x6965089BF9747146C1E9F35064736F6C63430008180033000000 ",
							"sourceMap": "125:4448:2:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;125:4448:2;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;125:4448:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 3267,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3356,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyShares_533": {
									"entryPoint": 1399,
									"id": 533,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBuyPriceAfterFee_370": {
									"entryPoint": 845,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBuyPrice_312": {
									"entryPoint": 1071,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPrice_295": {
									"entryPoint": 1125,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getSellPriceAfterFee_409": {
									"entryPoint": 964,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getSellPrice_331": {
									"entryPoint": 2192,
									"id": 331,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@protocolFeeDestination_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@protocolFeePercent_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2173,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellShares_670": {
									"entryPoint": 2250,
									"id": 670,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeDestination_185": {
									"entryPoint": 3225,
									"id": 185,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setProtocolFeePercent_197": {
									"entryPoint": 2237,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSubjectFeePercent_209": {
									"entryPoint": 1112,
									"id": 209,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sharesBalance_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sharesSupply_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@subjectFeePercent_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3104,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5661ed69831c42f6f73ca1b95dad4d1f4259009db2615f9ff2d691cda933124f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c7576e300e258ee0a0628d457872335ec2431c728fc2267c2420c87931c40f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95731e3645b28950334ad7f3c789cb3fc753c4d5301ff39cde149dc44d17161a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6068:3",
										"nodeType": "YulBlock",
										"src": "0:6068:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:3",
													"nodeType": "YulBlock",
													"src": "63:124:3",
													"statements": [
														{
															"nativeSrc": "73:29:3",
															"nodeType": "YulAssignment",
															"src": "73:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:3"
																},
																"nativeSrc": "82:20:3",
																"nodeType": "YulFunctionCall",
																"src": "82:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:3",
																"nodeType": "YulBlock",
																"src": "165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:3",
																					"nodeType": "YulLiteral",
																					"src": "174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:3",
																					"nodeType": "YulLiteral",
																					"src": "177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:3"
																			},
																			"nativeSrc": "167:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:3"
																		},
																		"nativeSrc": "167:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:3",
																										"nodeType": "YulLiteral",
																										"src": "150:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:3",
																										"nodeType": "YulLiteral",
																										"src": "155:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:3"
																								},
																								"nativeSrc": "146:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:3",
																								"nodeType": "YulLiteral",
																								"src": "159:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:3"
																						},
																						"nativeSrc": "142:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:3"
																				},
																				"nativeSrc": "131:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:3"
																		},
																		"nativeSrc": "121:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:3"
																},
																"nativeSrc": "114:50:3",
																"nodeType": "YulFunctionCall",
																"src": "114:50:3"
															},
															"nativeSrc": "111:70:3",
															"nodeType": "YulIf",
															"src": "111:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:3",
														"nodeType": "YulTypedName",
														"src": "42:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:3",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "14:173:3"
											},
											{
												"body": {
													"nativeSrc": "279:173:3",
													"nodeType": "YulBlock",
													"src": "279:173:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:3",
																"nodeType": "YulBlock",
																"src": "325:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:3",
																					"nodeType": "YulLiteral",
																					"src": "334:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:3",
																					"nodeType": "YulLiteral",
																					"src": "337:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:3"
																			},
																			"nativeSrc": "327:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:3"
																		},
																		"nativeSrc": "327:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:3"
																		},
																		"nativeSrc": "296:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:3",
																		"nodeType": "YulLiteral",
																		"src": "321:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:3"
																},
																"nativeSrc": "292:32:3",
																"nodeType": "YulFunctionCall",
																"src": "292:32:3"
															},
															"nativeSrc": "289:52:3",
															"nodeType": "YulIf",
															"src": "289:52:3"
														},
														{
															"nativeSrc": "350:39:3",
															"nodeType": "YulAssignment",
															"src": "350:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:3"
																},
																"nativeSrc": "360:29:3",
																"nodeType": "YulFunctionCall",
																"src": "360:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:3"
																}
															]
														},
														{
															"nativeSrc": "398:48:3",
															"nodeType": "YulAssignment",
															"src": "398:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "431:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "431:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "442:2:3",
																				"nodeType": "YulLiteral",
																				"src": "442:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "427:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "427:3:3"
																		},
																		"nativeSrc": "427:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "427:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "408:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "408:18:3"
																},
																"nativeSrc": "408:38:3",
																"nodeType": "YulFunctionCall",
																"src": "408:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "192:260:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:3",
														"nodeType": "YulTypedName",
														"src": "237:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:3",
														"nodeType": "YulTypedName",
														"src": "248:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:3",
														"nodeType": "YulTypedName",
														"src": "260:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:3",
														"nodeType": "YulTypedName",
														"src": "268:6:3",
														"type": ""
													}
												],
												"src": "192:260:3"
											},
											{
												"body": {
													"nativeSrc": "558:76:3",
													"nodeType": "YulBlock",
													"src": "558:76:3",
													"statements": [
														{
															"nativeSrc": "568:26:3",
															"nodeType": "YulAssignment",
															"src": "568:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "580:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "580:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "591:2:3",
																		"nodeType": "YulLiteral",
																		"src": "591:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "576:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "576:3:3"
																},
																"nativeSrc": "576:18:3",
																"nodeType": "YulFunctionCall",
																"src": "576:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "568:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "568:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "610:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "610:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "621:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "621:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:3"
																},
																"nativeSrc": "603:25:3",
																"nodeType": "YulFunctionCall",
																"src": "603:25:3"
															},
															"nativeSrc": "603:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "603:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "457:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "527:9:3",
														"nodeType": "YulTypedName",
														"src": "527:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "538:6:3",
														"nodeType": "YulTypedName",
														"src": "538:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "549:4:3",
														"nodeType": "YulTypedName",
														"src": "549:4:3",
														"type": ""
													}
												],
												"src": "457:177:3"
											},
											{
												"body": {
													"nativeSrc": "726:167:3",
													"nodeType": "YulBlock",
													"src": "726:167:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "772:16:3",
																"nodeType": "YulBlock",
																"src": "772:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "781:1:3",
																					"nodeType": "YulLiteral",
																					"src": "781:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "784:1:3",
																					"nodeType": "YulLiteral",
																					"src": "784:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "774:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "774:6:3"
																			},
																			"nativeSrc": "774:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "774:12:3"
																		},
																		"nativeSrc": "774:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "774:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "747:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "747:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "756:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "756:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "743:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:3"
																		},
																		"nativeSrc": "743:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "743:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "768:2:3",
																		"nodeType": "YulLiteral",
																		"src": "768:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "739:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "739:3:3"
																},
																"nativeSrc": "739:32:3",
																"nodeType": "YulFunctionCall",
																"src": "739:32:3"
															},
															"nativeSrc": "736:52:3",
															"nodeType": "YulIf",
															"src": "736:52:3"
														},
														{
															"nativeSrc": "797:39:3",
															"nodeType": "YulAssignment",
															"src": "797:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "826:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "826:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "807:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "807:18:3"
																},
																"nativeSrc": "807:29:3",
																"nodeType": "YulFunctionCall",
																"src": "807:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "797:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "797:6:3"
																}
															]
														},
														{
															"nativeSrc": "845:42:3",
															"nodeType": "YulAssignment",
															"src": "845:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "872:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "872:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "883:2:3",
																				"nodeType": "YulLiteral",
																				"src": "883:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "868:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:3"
																		},
																		"nativeSrc": "868:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "868:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "855:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "855:12:3"
																},
																"nativeSrc": "855:32:3",
																"nodeType": "YulFunctionCall",
																"src": "855:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "845:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "639:254:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "684:9:3",
														"nodeType": "YulTypedName",
														"src": "684:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "695:7:3",
														"nodeType": "YulTypedName",
														"src": "695:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "707:6:3",
														"nodeType": "YulTypedName",
														"src": "707:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "715:6:3",
														"nodeType": "YulTypedName",
														"src": "715:6:3",
														"type": ""
													}
												],
												"src": "639:254:3"
											},
											{
												"body": {
													"nativeSrc": "999:102:3",
													"nodeType": "YulBlock",
													"src": "999:102:3",
													"statements": [
														{
															"nativeSrc": "1009:26:3",
															"nodeType": "YulAssignment",
															"src": "1009:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1021:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1032:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1032:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1017:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:3"
																},
																"nativeSrc": "1017:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1017:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1009:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1009:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1051:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1051:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1066:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1082:3:3",
																								"nodeType": "YulLiteral",
																								"src": "1082:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1087:1:3",
																								"nodeType": "YulLiteral",
																								"src": "1087:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1078:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1078:3:3"
																						},
																						"nativeSrc": "1078:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1078:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1091:1:3",
																						"nodeType": "YulLiteral",
																						"src": "1091:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1074:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1074:3:3"
																				},
																				"nativeSrc": "1074:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1074:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1062:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:3"
																		},
																		"nativeSrc": "1062:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1044:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1044:6:3"
																},
																"nativeSrc": "1044:51:3",
																"nodeType": "YulFunctionCall",
																"src": "1044:51:3"
															},
															"nativeSrc": "1044:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "1044:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "898:203:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "968:9:3",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "979:6:3",
														"nodeType": "YulTypedName",
														"src": "979:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "990:4:3",
														"nodeType": "YulTypedName",
														"src": "990:4:3",
														"type": ""
													}
												],
												"src": "898:203:3"
											},
											{
												"body": {
													"nativeSrc": "1176:110:3",
													"nodeType": "YulBlock",
													"src": "1176:110:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1222:16:3",
																"nodeType": "YulBlock",
																"src": "1222:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1231:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1231:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1234:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1234:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1224:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1224:6:3"
																			},
																			"nativeSrc": "1224:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1224:12:3"
																		},
																		"nativeSrc": "1224:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1224:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1197:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1197:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1206:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1206:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1193:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:3"
																		},
																		"nativeSrc": "1193:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1193:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1218:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1189:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1189:3:3"
																},
																"nativeSrc": "1189:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1189:32:3"
															},
															"nativeSrc": "1186:52:3",
															"nodeType": "YulIf",
															"src": "1186:52:3"
														},
														{
															"nativeSrc": "1247:33:3",
															"nodeType": "YulAssignment",
															"src": "1247:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1270:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1270:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1257:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1257:12:3"
																},
																"nativeSrc": "1257:23:3",
																"nodeType": "YulFunctionCall",
																"src": "1257:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1247:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1106:180:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1142:9:3",
														"nodeType": "YulTypedName",
														"src": "1142:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1153:7:3",
														"nodeType": "YulTypedName",
														"src": "1153:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1165:6:3",
														"nodeType": "YulTypedName",
														"src": "1165:6:3",
														"type": ""
													}
												],
												"src": "1106:180:3"
											},
											{
												"body": {
													"nativeSrc": "1378:161:3",
													"nodeType": "YulBlock",
													"src": "1378:161:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1424:16:3",
																"nodeType": "YulBlock",
																"src": "1424:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1433:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1436:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1436:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1426:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1426:6:3"
																			},
																			"nativeSrc": "1426:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1426:12:3"
																		},
																		"nativeSrc": "1426:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1426:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1399:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1399:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1408:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1408:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1395:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:3"
																		},
																		"nativeSrc": "1395:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1395:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1420:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1391:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1391:3:3"
																},
																"nativeSrc": "1391:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1391:32:3"
															},
															"nativeSrc": "1388:52:3",
															"nodeType": "YulIf",
															"src": "1388:52:3"
														},
														{
															"nativeSrc": "1449:33:3",
															"nodeType": "YulAssignment",
															"src": "1449:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1472:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1472:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1459:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1459:12:3"
																},
																"nativeSrc": "1459:23:3",
																"nodeType": "YulFunctionCall",
																"src": "1459:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1449:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:3"
																}
															]
														},
														{
															"nativeSrc": "1491:42:3",
															"nodeType": "YulAssignment",
															"src": "1491:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1518:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1518:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1529:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1529:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1514:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1514:3:3"
																		},
																		"nativeSrc": "1514:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1514:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1501:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1501:12:3"
																},
																"nativeSrc": "1501:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1501:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1491:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1291:248:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1336:9:3",
														"nodeType": "YulTypedName",
														"src": "1336:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1347:7:3",
														"nodeType": "YulTypedName",
														"src": "1347:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1359:6:3",
														"nodeType": "YulTypedName",
														"src": "1359:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1367:6:3",
														"nodeType": "YulTypedName",
														"src": "1367:6:3",
														"type": ""
													}
												],
												"src": "1291:248:3"
											},
											{
												"body": {
													"nativeSrc": "1614:116:3",
													"nodeType": "YulBlock",
													"src": "1614:116:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1660:16:3",
																"nodeType": "YulBlock",
																"src": "1660:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1669:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1669:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1672:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1672:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1662:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1662:6:3"
																			},
																			"nativeSrc": "1662:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1662:12:3"
																		},
																		"nativeSrc": "1662:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1635:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1635:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1644:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1644:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1631:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:3"
																		},
																		"nativeSrc": "1631:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1627:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1627:3:3"
																},
																"nativeSrc": "1627:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1627:32:3"
															},
															"nativeSrc": "1624:52:3",
															"nodeType": "YulIf",
															"src": "1624:52:3"
														},
														{
															"nativeSrc": "1685:39:3",
															"nodeType": "YulAssignment",
															"src": "1685:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1714:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1714:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1695:18:3",
																	"nodeType": "YulIdentifier",
																	"src": "1695:18:3"
																},
																"nativeSrc": "1695:29:3",
																"nodeType": "YulFunctionCall",
																"src": "1695:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1685:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1544:186:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1580:9:3",
														"nodeType": "YulTypedName",
														"src": "1580:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1591:7:3",
														"nodeType": "YulTypedName",
														"src": "1591:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1603:6:3",
														"nodeType": "YulTypedName",
														"src": "1603:6:3",
														"type": ""
													}
												],
												"src": "1544:186:3"
											},
											{
												"body": {
													"nativeSrc": "1767:95:3",
													"nodeType": "YulBlock",
													"src": "1767:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1784:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1784:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1791:3:3",
																				"nodeType": "YulLiteral",
																				"src": "1791:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1796:10:3",
																				"nodeType": "YulLiteral",
																				"src": "1796:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1787:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1787:3:3"
																		},
																		"nativeSrc": "1787:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1777:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1777:6:3"
																},
																"nativeSrc": "1777:31:3",
																"nodeType": "YulFunctionCall",
																"src": "1777:31:3"
															},
															"nativeSrc": "1777:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "1777:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1824:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1824:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1827:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1827:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1817:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1817:6:3"
																},
																"nativeSrc": "1817:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1817:15:3"
															},
															"nativeSrc": "1817:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1817:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1851:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1841:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:3"
																},
																"nativeSrc": "1841:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1841:15:3"
															},
															"nativeSrc": "1841:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1841:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1735:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1735:127:3"
											},
											{
												"body": {
													"nativeSrc": "1919:116:3",
													"nodeType": "YulBlock",
													"src": "1919:116:3",
													"statements": [
														{
															"nativeSrc": "1929:20:3",
															"nodeType": "YulAssignment",
															"src": "1929:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1944:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1944:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1947:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1947:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1940:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:3"
																},
																"nativeSrc": "1940:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1940:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "1929:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1929:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2007:22:3",
																"nodeType": "YulBlock",
																"src": "2007:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2009:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2009:16:3"
																			},
																			"nativeSrc": "2009:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2009:18:3"
																		},
																		"nativeSrc": "2009:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2009:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1978:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "1978:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1971:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "1971:6:3"
																				},
																				"nativeSrc": "1971:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1971:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1985:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "1985:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1992:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "1992:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2001:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "2001:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1988:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1988:3:3"
																						},
																						"nativeSrc": "1988:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1988:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1982:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "1982:2:3"
																				},
																				"nativeSrc": "1982:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1982:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1968:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1968:2:3"
																		},
																		"nativeSrc": "1968:37:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1968:37:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1961:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:3"
																},
																"nativeSrc": "1961:45:3",
																"nodeType": "YulFunctionCall",
																"src": "1961:45:3"
															},
															"nativeSrc": "1958:71:3",
															"nodeType": "YulIf",
															"src": "1958:71:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1867:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1898:1:3",
														"nodeType": "YulTypedName",
														"src": "1898:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1901:1:3",
														"nodeType": "YulTypedName",
														"src": "1901:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "1907:7:3",
														"nodeType": "YulTypedName",
														"src": "1907:7:3",
														"type": ""
													}
												],
												"src": "1867:168:3"
											},
											{
												"body": {
													"nativeSrc": "2086:171:3",
													"nodeType": "YulBlock",
													"src": "2086:171:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2117:111:3",
																"nodeType": "YulBlock",
																"src": "2117:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2138:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2138:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2145:3:3",
																							"nodeType": "YulLiteral",
																							"src": "2145:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2150:10:3",
																							"nodeType": "YulLiteral",
																							"src": "2150:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2141:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2141:3:3"
																					},
																					"nativeSrc": "2141:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2141:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2131:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2131:6:3"
																			},
																			"nativeSrc": "2131:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2131:31:3"
																		},
																		"nativeSrc": "2131:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2131:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2182:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2182:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2185:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2185:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2175:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2175:6:3"
																			},
																			"nativeSrc": "2175:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2175:15:3"
																		},
																		"nativeSrc": "2175:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2175:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2210:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2213:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2213:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2203:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:3"
																			},
																			"nativeSrc": "2203:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:15:3"
																		},
																		"nativeSrc": "2203:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2106:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2106:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2099:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:3"
																},
																"nativeSrc": "2099:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2099:9:3"
															},
															"nativeSrc": "2096:132:3",
															"nodeType": "YulIf",
															"src": "2096:132:3"
														},
														{
															"nativeSrc": "2237:14:3",
															"nodeType": "YulAssignment",
															"src": "2237:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2246:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2246:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2249:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2249:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2242:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2242:3:3"
																},
																"nativeSrc": "2242:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2242:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2237:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2237:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2040:217:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2071:1:3",
														"nodeType": "YulTypedName",
														"src": "2071:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2074:1:3",
														"nodeType": "YulTypedName",
														"src": "2074:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2080:1:3",
														"nodeType": "YulTypedName",
														"src": "2080:1:3",
														"type": ""
													}
												],
												"src": "2040:217:3"
											},
											{
												"body": {
													"nativeSrc": "2310:77:3",
													"nodeType": "YulBlock",
													"src": "2310:77:3",
													"statements": [
														{
															"nativeSrc": "2320:16:3",
															"nodeType": "YulAssignment",
															"src": "2320:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2331:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2331:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2334:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2334:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2327:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2327:3:3"
																},
																"nativeSrc": "2327:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2327:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2320:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2359:22:3",
																"nodeType": "YulBlock",
																"src": "2359:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2361:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2361:16:3"
																			},
																			"nativeSrc": "2361:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2361:18:3"
																		},
																		"nativeSrc": "2361:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2361:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2351:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2351:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2354:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2354:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2348:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2348:2:3"
																},
																"nativeSrc": "2348:10:3",
																"nodeType": "YulFunctionCall",
																"src": "2348:10:3"
															},
															"nativeSrc": "2345:36:3",
															"nodeType": "YulIf",
															"src": "2345:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2262:125:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2293:1:3",
														"nodeType": "YulTypedName",
														"src": "2293:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2296:1:3",
														"nodeType": "YulTypedName",
														"src": "2296:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2302:3:3",
														"nodeType": "YulTypedName",
														"src": "2302:3:3",
														"type": ""
													}
												],
												"src": "2262:125:3"
											},
											{
												"body": {
													"nativeSrc": "2441:79:3",
													"nodeType": "YulBlock",
													"src": "2441:79:3",
													"statements": [
														{
															"nativeSrc": "2451:17:3",
															"nodeType": "YulAssignment",
															"src": "2451:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2463:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2463:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2466:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2466:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2459:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:3"
																},
																"nativeSrc": "2459:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2459:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2451:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2492:22:3",
																"nodeType": "YulBlock",
																"src": "2492:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2494:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2494:16:3"
																			},
																			"nativeSrc": "2494:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2494:18:3"
																		},
																		"nativeSrc": "2494:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2494:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2483:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2483:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2489:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2489:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2480:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2480:2:3"
																},
																"nativeSrc": "2480:11:3",
																"nodeType": "YulFunctionCall",
																"src": "2480:11:3"
															},
															"nativeSrc": "2477:37:3",
															"nodeType": "YulIf",
															"src": "2477:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2392:128:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2423:1:3",
														"nodeType": "YulTypedName",
														"src": "2423:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2426:1:3",
														"nodeType": "YulTypedName",
														"src": "2426:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2432:4:3",
														"nodeType": "YulTypedName",
														"src": "2432:4:3",
														"type": ""
													}
												],
												"src": "2392:128:3"
											},
											{
												"body": {
													"nativeSrc": "2699:238:3",
													"nodeType": "YulBlock",
													"src": "2699:238:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2716:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2716:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2727:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2727:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2709:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:3"
																},
																"nativeSrc": "2709:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2709:21:3"
															},
															"nativeSrc": "2709:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2709:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2750:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2750:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2761:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2761:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2746:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:3"
																		},
																		"nativeSrc": "2746:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2766:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2766:2:3",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2739:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:3"
																},
																"nativeSrc": "2739:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2739:30:3"
															},
															"nativeSrc": "2739:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2739:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2789:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2800:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2800:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2785:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2785:3:3"
																		},
																		"nativeSrc": "2785:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:18:3"
																	},
																	{
																		"hexValue": "4f6e6c79207468652073686172657327207375626a6563742063616e20627579",
																		"kind": "string",
																		"nativeSrc": "2805:34:3",
																		"nodeType": "YulLiteral",
																		"src": "2805:34:3",
																		"type": "",
																		"value": "Only the shares' subject can buy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2778:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:3"
																},
																"nativeSrc": "2778:62:3",
																"nodeType": "YulFunctionCall",
																"src": "2778:62:3"
															},
															"nativeSrc": "2778:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "2778:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2860:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2860:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2871:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2871:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2856:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:3"
																		},
																		"nativeSrc": "2856:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:18:3"
																	},
																	{
																		"hexValue": "20746865206669727374207368617265",
																		"kind": "string",
																		"nativeSrc": "2876:18:3",
																		"nodeType": "YulLiteral",
																		"src": "2876:18:3",
																		"type": "",
																		"value": " the first share"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2849:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:3"
																},
																"nativeSrc": "2849:46:3",
																"nodeType": "YulFunctionCall",
																"src": "2849:46:3"
															},
															"nativeSrc": "2849:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "2849:46:3"
														},
														{
															"nativeSrc": "2904:27:3",
															"nodeType": "YulAssignment",
															"src": "2904:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2916:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2916:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2927:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2927:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2912:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2912:3:3"
																},
																"nativeSrc": "2912:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2912:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2904:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2904:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95731e3645b28950334ad7f3c789cb3fc753c4d5301ff39cde149dc44d17161a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2525:412:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2676:9:3",
														"nodeType": "YulTypedName",
														"src": "2676:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2690:4:3",
														"nodeType": "YulTypedName",
														"src": "2690:4:3",
														"type": ""
													}
												],
												"src": "2525:412:3"
											},
											{
												"body": {
													"nativeSrc": "3116:170:3",
													"nodeType": "YulBlock",
													"src": "3116:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3133:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3133:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3144:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3144:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3126:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3126:6:3"
																},
																"nativeSrc": "3126:21:3",
																"nodeType": "YulFunctionCall",
																"src": "3126:21:3"
															},
															"nativeSrc": "3126:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "3126:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3167:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3167:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3178:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3178:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3163:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3163:3:3"
																		},
																		"nativeSrc": "3163:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3163:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3183:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3183:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3156:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3156:6:3"
																},
																"nativeSrc": "3156:30:3",
																"nodeType": "YulFunctionCall",
																"src": "3156:30:3"
															},
															"nativeSrc": "3156:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "3156:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3206:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3206:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3217:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3217:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3202:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:3"
																		},
																		"nativeSrc": "3202:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:18:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207061796d656e74",
																		"kind": "string",
																		"nativeSrc": "3222:22:3",
																		"nodeType": "YulLiteral",
																		"src": "3222:22:3",
																		"type": "",
																		"value": "Insufficient payment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3195:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3195:6:3"
																},
																"nativeSrc": "3195:50:3",
																"nodeType": "YulFunctionCall",
																"src": "3195:50:3"
															},
															"nativeSrc": "3195:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "3195:50:3"
														},
														{
															"nativeSrc": "3254:26:3",
															"nodeType": "YulAssignment",
															"src": "3254:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3266:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3266:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3277:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3277:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3262:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3262:3:3"
																},
																"nativeSrc": "3262:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3262:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3254:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3254:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2942:344:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3093:9:3",
														"nodeType": "YulTypedName",
														"src": "3093:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3107:4:3",
														"nodeType": "YulTypedName",
														"src": "3107:4:3",
														"type": ""
													}
												],
												"src": "2942:344:3"
											},
											{
												"body": {
													"nativeSrc": "3582:454:3",
													"nodeType": "YulBlock",
													"src": "3582:454:3",
													"statements": [
														{
															"nativeSrc": "3592:27:3",
															"nodeType": "YulAssignment",
															"src": "3592:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3604:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3604:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3615:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3600:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3600:3:3"
																},
																"nativeSrc": "3600:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3600:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3592:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3592:4:3"
																}
															]
														},
														{
															"nativeSrc": "3628:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3628:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3646:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3646:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3651:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3651:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3642:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:3"
																		},
																		"nativeSrc": "3642:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3642:11:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3655:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3655:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3638:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3638:3:3"
																},
																"nativeSrc": "3638:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3638:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3632:2:3",
																	"nodeType": "YulTypedName",
																	"src": "3632:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3673:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3673:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3688:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3688:6:3"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3696:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "3696:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3684:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3684:3:3"
																		},
																		"nativeSrc": "3684:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3684:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3666:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:3"
																},
																"nativeSrc": "3666:34:3",
																"nodeType": "YulFunctionCall",
																"src": "3666:34:3"
															},
															"nativeSrc": "3666:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "3666:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3720:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3731:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3731:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3716:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:3"
																		},
																		"nativeSrc": "3716:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3740:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:3"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3748:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "3748:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3736:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:3"
																		},
																		"nativeSrc": "3736:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3709:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:3"
																},
																"nativeSrc": "3709:43:3",
																"nodeType": "YulFunctionCall",
																"src": "3709:43:3"
															},
															"nativeSrc": "3709:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "3709:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3772:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3772:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3783:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3783:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3768:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:3"
																		},
																		"nativeSrc": "3768:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3768:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "3802:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3802:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3795:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "3795:6:3"
																				},
																				"nativeSrc": "3795:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3795:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3788:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3788:6:3"
																		},
																		"nativeSrc": "3788:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3788:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3761:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:3"
																},
																"nativeSrc": "3761:50:3",
																"nodeType": "YulFunctionCall",
																"src": "3761:50:3"
															},
															"nativeSrc": "3761:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "3761:50:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3831:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3842:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3827:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:3"
																		},
																		"nativeSrc": "3827:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:3"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3847:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3847:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3820:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:3"
																},
																"nativeSrc": "3820:34:3",
																"nodeType": "YulFunctionCall",
																"src": "3820:34:3"
															},
															"nativeSrc": "3820:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "3820:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3885:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3885:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3870:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:3"
																		},
																		"nativeSrc": "3870:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3870:19:3"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "3891:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3891:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3863:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:3"
																},
																"nativeSrc": "3863:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3863:35:3"
															},
															"nativeSrc": "3863:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3863:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3918:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3918:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3929:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3929:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3914:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3914:3:3"
																		},
																		"nativeSrc": "3914:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3914:19:3"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3935:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3935:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3907:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3907:6:3"
																},
																"nativeSrc": "3907:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3907:35:3"
															},
															"nativeSrc": "3907:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3907:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3962:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3962:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3973:3:3",
																				"nodeType": "YulLiteral",
																				"src": "3973:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3958:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3958:3:3"
																		},
																		"nativeSrc": "3958:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3958:19:3"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "3979:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3979:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3951:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:3"
																},
																"nativeSrc": "3951:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3951:35:3"
															},
															"nativeSrc": "3951:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3951:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4006:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4006:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4017:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4017:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4002:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:3"
																		},
																		"nativeSrc": "4002:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4002:19:3"
																	},
																	{
																		"name": "value7",
																		"nativeSrc": "4023:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3995:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:3"
																},
																"nativeSrc": "3995:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3995:35:3"
															},
															"nativeSrc": "3995:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3995:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3291:745:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3495:9:3",
														"nodeType": "YulTypedName",
														"src": "3495:9:3",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "3506:6:3",
														"nodeType": "YulTypedName",
														"src": "3506:6:3",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3514:6:3",
														"nodeType": "YulTypedName",
														"src": "3514:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3522:6:3",
														"nodeType": "YulTypedName",
														"src": "3522:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3530:6:3",
														"nodeType": "YulTypedName",
														"src": "3530:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3538:6:3",
														"nodeType": "YulTypedName",
														"src": "3538:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3546:6:3",
														"nodeType": "YulTypedName",
														"src": "3546:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3554:6:3",
														"nodeType": "YulTypedName",
														"src": "3554:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3562:6:3",
														"nodeType": "YulTypedName",
														"src": "3562:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3573:4:3",
														"nodeType": "YulTypedName",
														"src": "3573:4:3",
														"type": ""
													}
												],
												"src": "3291:745:3"
											},
											{
												"body": {
													"nativeSrc": "4232:14:3",
													"nodeType": "YulBlock",
													"src": "4232:14:3",
													"statements": [
														{
															"nativeSrc": "4234:10:3",
															"nodeType": "YulAssignment",
															"src": "4234:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "4241:3:3",
																"nodeType": "YulIdentifier",
																"src": "4241:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4234:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4234:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4041:205:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4216:3:3",
														"nodeType": "YulTypedName",
														"src": "4216:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4224:3:3",
														"nodeType": "YulTypedName",
														"src": "4224:3:3",
														"type": ""
													}
												],
												"src": "4041:205:3"
											},
											{
												"body": {
													"nativeSrc": "4425:170:3",
													"nodeType": "YulBlock",
													"src": "4425:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4442:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4453:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4453:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4435:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:3"
																},
																"nativeSrc": "4435:21:3",
																"nodeType": "YulFunctionCall",
																"src": "4435:21:3"
															},
															"nativeSrc": "4435:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "4435:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4476:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4487:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4487:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4472:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:3"
																		},
																		"nativeSrc": "4472:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4472:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4492:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4492:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4465:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:3"
																},
																"nativeSrc": "4465:30:3",
																"nodeType": "YulFunctionCall",
																"src": "4465:30:3"
															},
															"nativeSrc": "4465:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "4465:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4515:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4515:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4526:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4526:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4511:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:3"
																		},
																		"nativeSrc": "4511:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4511:18:3"
																	},
																	{
																		"hexValue": "556e61626c6520746f2073656e642066756e6473",
																		"kind": "string",
																		"nativeSrc": "4531:22:3",
																		"nodeType": "YulLiteral",
																		"src": "4531:22:3",
																		"type": "",
																		"value": "Unable to send funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4504:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:3"
																},
																"nativeSrc": "4504:50:3",
																"nodeType": "YulFunctionCall",
																"src": "4504:50:3"
															},
															"nativeSrc": "4504:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "4504:50:3"
														},
														{
															"nativeSrc": "4563:26:3",
															"nodeType": "YulAssignment",
															"src": "4563:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4575:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4575:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4586:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4586:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4571:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:3"
																},
																"nativeSrc": "4571:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4571:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4563:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4563:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c7576e300e258ee0a0628d457872335ec2431c728fc2267c2420c87931c40f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4251:344:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4402:9:3",
														"nodeType": "YulTypedName",
														"src": "4402:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4416:4:3",
														"nodeType": "YulTypedName",
														"src": "4416:4:3",
														"type": ""
													}
												],
												"src": "4251:344:3"
											},
											{
												"body": {
													"nativeSrc": "4774:176:3",
													"nodeType": "YulBlock",
													"src": "4774:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4791:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4802:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4802:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4784:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:3"
																},
																"nativeSrc": "4784:21:3",
																"nodeType": "YulFunctionCall",
																"src": "4784:21:3"
															},
															"nativeSrc": "4784:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "4784:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4825:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4836:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4821:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:3"
																		},
																		"nativeSrc": "4821:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4841:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4841:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:3"
																},
																"nativeSrc": "4814:30:3",
																"nodeType": "YulFunctionCall",
																"src": "4814:30:3"
															},
															"nativeSrc": "4814:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "4814:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4864:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4864:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4875:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4875:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:3"
																		},
																		"nativeSrc": "4860:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:18:3"
																	},
																	{
																		"hexValue": "43616e6e6f742073656c6c20746865206c617374207368617265",
																		"kind": "string",
																		"nativeSrc": "4880:28:3",
																		"nodeType": "YulLiteral",
																		"src": "4880:28:3",
																		"type": "",
																		"value": "Cannot sell the last share"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:3"
																},
																"nativeSrc": "4853:56:3",
																"nodeType": "YulFunctionCall",
																"src": "4853:56:3"
															},
															"nativeSrc": "4853:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "4853:56:3"
														},
														{
															"nativeSrc": "4918:26:3",
															"nodeType": "YulAssignment",
															"src": "4918:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4930:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4941:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4926:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:3"
																},
																"nativeSrc": "4926:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4926:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4918:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4918:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5661ed69831c42f6f73ca1b95dad4d1f4259009db2615f9ff2d691cda933124f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4600:350:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4751:9:3",
														"nodeType": "YulTypedName",
														"src": "4751:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4765:4:3",
														"nodeType": "YulTypedName",
														"src": "4765:4:3",
														"type": ""
													}
												],
												"src": "4600:350:3"
											},
											{
												"body": {
													"nativeSrc": "5129:169:3",
													"nodeType": "YulBlock",
													"src": "5129:169:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5146:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5146:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5157:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5157:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5139:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:3"
																},
																"nativeSrc": "5139:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5139:21:3"
															},
															"nativeSrc": "5139:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "5139:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5180:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5180:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5191:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5191:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5176:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5176:3:3"
																		},
																		"nativeSrc": "5176:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5176:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5196:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5196:2:3",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5169:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5169:6:3"
																},
																"nativeSrc": "5169:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5169:30:3"
															},
															"nativeSrc": "5169:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5169:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5219:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5219:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5230:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5230:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5215:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5215:3:3"
																		},
																		"nativeSrc": "5215:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5215:18:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420736861726573",
																		"kind": "string",
																		"nativeSrc": "5235:21:3",
																		"nodeType": "YulLiteral",
																		"src": "5235:21:3",
																		"type": "",
																		"value": "Insufficient shares"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5208:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5208:6:3"
																},
																"nativeSrc": "5208:49:3",
																"nodeType": "YulFunctionCall",
																"src": "5208:49:3"
															},
															"nativeSrc": "5208:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "5208:49:3"
														},
														{
															"nativeSrc": "5266:26:3",
															"nodeType": "YulAssignment",
															"src": "5266:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5278:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5278:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5289:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5289:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5274:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5274:3:3"
																},
																"nativeSrc": "5274:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5274:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5266:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5266:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4955:343:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5106:9:3",
														"nodeType": "YulTypedName",
														"src": "5106:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5120:4:3",
														"nodeType": "YulTypedName",
														"src": "5120:4:3",
														"type": ""
													}
												],
												"src": "4955:343:3"
											},
											{
												"body": {
													"nativeSrc": "5477:228:3",
													"nodeType": "YulBlock",
													"src": "5477:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5494:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5494:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5505:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5505:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5487:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5487:6:3"
																},
																"nativeSrc": "5487:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5487:21:3"
															},
															"nativeSrc": "5487:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "5487:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5528:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5528:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5539:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5539:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5524:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5524:3:3"
																		},
																		"nativeSrc": "5524:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5524:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5544:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5544:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5517:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:3"
																},
																"nativeSrc": "5517:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5517:30:3"
															},
															"nativeSrc": "5517:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5517:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5567:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5578:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5578:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5563:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:3"
																		},
																		"nativeSrc": "5563:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5563:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "5583:34:3",
																		"nodeType": "YulLiteral",
																		"src": "5583:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5556:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5556:6:3"
																},
																"nativeSrc": "5556:62:3",
																"nodeType": "YulFunctionCall",
																"src": "5556:62:3"
															},
															"nativeSrc": "5556:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "5556:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5638:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5638:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5649:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5649:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5634:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5634:3:3"
																		},
																		"nativeSrc": "5634:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5634:18:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "5654:8:3",
																		"nodeType": "YulLiteral",
																		"src": "5654:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5627:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5627:6:3"
																},
																"nativeSrc": "5627:36:3",
																"nodeType": "YulFunctionCall",
																"src": "5627:36:3"
															},
															"nativeSrc": "5627:36:3",
															"nodeType": "YulExpressionStatement",
															"src": "5627:36:3"
														},
														{
															"nativeSrc": "5672:27:3",
															"nodeType": "YulAssignment",
															"src": "5672:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5684:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5684:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5695:3:3",
																		"nodeType": "YulLiteral",
																		"src": "5695:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5680:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5680:3:3"
																},
																"nativeSrc": "5680:19:3",
																"nodeType": "YulFunctionCall",
																"src": "5680:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5672:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5672:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5303:402:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5454:9:3",
														"nodeType": "YulTypedName",
														"src": "5454:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5468:4:3",
														"nodeType": "YulTypedName",
														"src": "5468:4:3",
														"type": ""
													}
												],
												"src": "5303:402:3"
											},
											{
												"body": {
													"nativeSrc": "5884:182:3",
													"nodeType": "YulBlock",
													"src": "5884:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5901:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5901:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5912:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5912:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5894:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5894:6:3"
																},
																"nativeSrc": "5894:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5894:21:3"
															},
															"nativeSrc": "5894:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "5894:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5935:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5935:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5946:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5946:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5931:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5931:3:3"
																		},
																		"nativeSrc": "5931:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5931:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5951:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5951:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5924:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5924:6:3"
																},
																"nativeSrc": "5924:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5924:30:3"
															},
															"nativeSrc": "5924:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5924:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5974:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5974:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5985:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5985:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5970:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5970:3:3"
																		},
																		"nativeSrc": "5970:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5970:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "5990:34:3",
																		"nodeType": "YulLiteral",
																		"src": "5990:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5963:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:3"
																},
																"nativeSrc": "5963:62:3",
																"nodeType": "YulFunctionCall",
																"src": "5963:62:3"
															},
															"nativeSrc": "5963:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "5963:62:3"
														},
														{
															"nativeSrc": "6034:26:3",
															"nodeType": "YulAssignment",
															"src": "6034:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6046:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6046:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6057:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6057:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6042:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6042:3:3"
																},
																"nativeSrc": "6042:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6042:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6034:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6034:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5710:356:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5861:9:3",
														"nodeType": "YulTypedName",
														"src": "5861:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5875:4:3",
														"nodeType": "YulTypedName",
														"src": "5875:4:3",
														"type": ""
													}
												],
												"src": "5710:356:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_95731e3645b28950334ad7f3c789cb3fc753c4d5301ff39cde149dc44d17161a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Only the shares' subject can buy\")\n        mstore(add(headStart, 96), \" the first share\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient payment\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_6c7576e300e258ee0a0628d457872335ec2431c728fc2267c2420c87931c40f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Unable to send funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5661ed69831c42f6f73ca1b95dad4d1f4259009db2615f9ff2d691cda933124f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot sell the last share\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient shares\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610105575f3560e01c8063715018a611610092578063b51d053411610062578063b51d0534146102bc578063d6e6eb9f146102cf578063f2fde38b146102e4578063f9931be014610303578063fbe532341461032e575f80fd5b8063715018a61461024e5780638da5cb5b146102625780639ae717811461027e578063a49834211461029d575f80fd5b80634635256e116100d85780634635256e146101a55780634ce7957c146101c45780635a8a764e146101fb5780635cf4ee911461021c5780636945b1231461023b575f80fd5b8063020235ff146101095780630f026f6d146101525780632267a89c1461017157806324dc441d14610190575b5f80fd5b348015610114575f80fd5b5061013f610123366004610d86565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561015d575f80fd5b5061013f61016c366004610db7565b61034d565b34801561017c575f80fd5b5061013f61018b366004610db7565b6103c4565b34801561019b575f80fd5b5061013f60035481565b3480156101b0575f80fd5b5061013f6101bf366004610db7565b61042f565b3480156101cf575f80fd5b506001546101e3906001600160a01b031681565b6040516001600160a01b039091168152602001610149565b348015610206575f80fd5b5061021a610215366004610ddf565b610458565b005b348015610227575f80fd5b5061013f610236366004610df6565b610465565b61021a610249366004610db7565b610577565b348015610259575f80fd5b5061021a61087d565b34801561026d575f80fd5b505f546001600160a01b03166101e3565b348015610289575f80fd5b5061013f610298366004610db7565b610890565b3480156102a8575f80fd5b5061021a6102b7366004610ddf565b6108bd565b61021a6102ca366004610db7565b6108ca565b3480156102da575f80fd5b5061013f60025481565b3480156102ef575f80fd5b5061021a6102fe366004610e16565b610c20565b34801561030e575f80fd5b5061013f61031d366004610e16565b60056020525f908152604090205481565b348015610339575f80fd5b5061021a610348366004610e16565b610c99565b5f80610359848461042f565b90505f670de0b6b3a7640000600254836103739190610e43565b61037d9190610e5a565b90505f670de0b6b3a7640000600354846103979190610e43565b6103a19190610e5a565b9050806103ae8385610e79565b6103b89190610e79565b93505050505b92915050565b5f806103d08484610890565b90505f670de0b6b3a7640000600254836103ea9190610e43565b6103f49190610e5a565b90505f670de0b6b3a76400006003548461040e9190610e43565b6104189190610e5a565b9050806104258385610e8c565b6103b89190610e8c565b6001600160a01b0382165f908152600560205260408120546104519083610465565b9392505050565b610460610cc3565b600355565b5f8083156104bf57600661047a600186610e8c565b610485906002610e43565b610490906001610e79565b8561049c600182610e8c565b6104a69190610e43565b6104b09190610e43565b6104ba9190610e5a565b6104c1565b5f5b90505f841580156104d25750836001145b610547576006846104e4600188610e8c565b6104ee9190610e79565b6104f9906002610e43565b610504906001610e79565b61050e8688610e79565b8661051a60018a610e8c565b6105249190610e79565b61052e9190610e43565b6105389190610e43565b6105429190610e5a565b610549565b5f5b90505f6105568383610e8c565b9050613e8061056d82670de0b6b3a7640000610e43565b6103b89190610e5a565b6001600160a01b0382165f90815260056020526040902054801515806105a557506001600160a01b03831633145b61060f5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652073686172657327207375626a6563742063616e2062757960448201526f2074686520666972737420736861726560801b60648201526084015b60405180910390fd5b5f61061a8284610465565b90505f670de0b6b3a7640000600254836106349190610e43565b61063e9190610e5a565b90505f670de0b6b3a7640000600354846106589190610e43565b6106629190610e5a565b90508061066f8385610e79565b6106799190610e79565b3410156106bf5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610606565b6001600160a01b0386165f9081526004602090815260408083203384529091529020546106ed908690610e79565b6001600160a01b0387165f90815260046020908152604080832033845290915290205561071a8585610e79565b6001600160a01b0387165f908152600560205260409020557f2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c33387600188878787610765848d610e79565b604051610779989796959493929190610e9f565b60405180910390a16001546040515f916001600160a01b03169084908381818185875af1925050503d805f81146107cb576040519150601f19603f3d011682016040523d82523d5f602084013e6107d0565b606091505b505090505f876001600160a01b0316836040515f6040518083038185875af1925050503d805f811461081d576040519150601f19603f3d011682016040523d82523d5f602084013e610822565b606091505b505090508180156108305750805b6108735760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b6044820152606401610606565b5050505050505050565b610885610cc3565b61088e5f610d1c565b565b6001600160a01b0382165f90815260056020526040812054610451906108b7908490610e8c565b83610465565b6108c5610cc3565b600255565b6001600160a01b0382165f908152600560205260409020548181116109315760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073656c6c20746865206c6173742073686172650000000000006044820152606401610606565b5f61094561093f8484610e8c565b84610465565b90505f670de0b6b3a76400006002548361095f9190610e43565b6109699190610e5a565b90505f670de0b6b3a7640000600354846109839190610e43565b61098d9190610e5a565b6001600160a01b0387165f9081526004602090815260408083203384529091529020549091508511156109f85760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b6044820152606401610606565b6001600160a01b0386165f908152600460209081526040808320338452909152902054610a26908690610e8c565b6001600160a01b0387165f908152600460209081526040808320338452909152902055610a538585610e8c565b6001600160a01b0387165f908152600560205260408120919091557f2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c3903390889088878787610aa2848d610e8c565b604051610ab6989796959493929190610e9f565b60405180910390a15f3382610acb8587610e8c565b610ad59190610e8c565b6040515f81818185875af1925050503d805f8114610b0e576040519150601f19603f3d011682016040523d82523d5f602084013e610b13565b606091505b50506001546040519192505f916001600160a01b039091169085908381818185875af1925050503d805f8114610b64576040519150601f19603f3d011682016040523d82523d5f602084013e610b69565b606091505b505090505f886001600160a01b0316846040515f6040518083038185875af1925050503d805f8114610bb6576040519150601f19603f3d011682016040523d82523d5f602084013e610bbb565b606091505b50509050828015610bc95750815b8015610bd25750805b610c155760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b6044820152606401610606565b505050505050505050565b610c28610cc3565b6001600160a01b038116610c8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610606565b610c9681610d1c565b50565b610ca1610cc3565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b5f546001600160a01b0316331461088e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610606565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610d81575f80fd5b919050565b5f8060408385031215610d97575f80fd5b610da083610d6b565b9150610dae60208401610d6b565b90509250929050565b5f8060408385031215610dc8575f80fd5b610dd183610d6b565b946020939093013593505050565b5f60208284031215610def575f80fd5b5035919050565b5f8060408385031215610e07575f80fd5b50508035926020909101359150565b5f60208284031215610e26575f80fd5b61045182610d6b565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176103be576103be610e2f565b5f82610e7457634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156103be576103be610e2f565b818103818111156103be576103be610e2f565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e0810191909152610100019056fea26469706673582212200f6f1f540079aca60e8c32d73ab0596f31a7b0796965089bf9747146c1e9f35064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xB51D0534 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xB51D0534 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xD6E6EB9F EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF9931BE0 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xFBE53234 EQ PUSH2 0x32E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x9AE71781 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xA4983421 EQ PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4635256E GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x4635256E EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x4CE7957C EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5A8A764E EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x5CF4EE91 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x6945B123 EQ PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20235FF EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xF026F6D EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x2267A89C EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x24DC441D EQ PUSH2 0x190 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x149 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDF JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x87D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDF JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x21A PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x359 DUP5 DUP5 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3AE DUP4 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D0 DUP5 DUP5 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x418 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x425 DUP4 DUP6 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x451 SWAP1 DUP4 PUSH2 0x465 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x460 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH0 DUP1 DUP4 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x6 PUSH2 0x47A PUSH1 0x1 DUP7 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x485 SWAP1 PUSH1 0x2 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x490 SWAP1 PUSH1 0x1 PUSH2 0xE79 JUMP JUMPDEST DUP6 PUSH2 0x49C PUSH1 0x1 DUP3 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP PUSH0 DUP5 ISZERO DUP1 ISZERO PUSH2 0x4D2 JUMPI POP DUP4 PUSH1 0x1 EQ JUMPDEST PUSH2 0x547 JUMPI PUSH1 0x6 DUP5 PUSH2 0x4E4 PUSH1 0x1 DUP9 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x4F9 SWAP1 PUSH1 0x2 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x504 SWAP1 PUSH1 0x1 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x50E DUP7 DUP9 PUSH2 0xE79 JUMP JUMPDEST DUP7 PUSH2 0x51A PUSH1 0x1 DUP11 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x524 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x542 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP PUSH0 PUSH2 0x556 DUP4 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH2 0x3E80 PUSH2 0x56D DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x5A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ JUMPDEST PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652073686172657327207375626A6563742063616E20627579 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x20746865206669727374207368617265 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x61A DUP3 DUP5 PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x63E SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x662 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x66F DUP4 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x679 SWAP2 SWAP1 PUSH2 0xE79 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x6ED SWAP1 DUP7 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x71A DUP6 DUP6 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH32 0x2C76E7A47FD53E2854856AC3F0A5F3EE40D15CFAA82266357EA9779C486AB9C3 CALLER DUP8 PUSH1 0x1 DUP9 DUP8 DUP8 DUP8 PUSH2 0x765 DUP5 DUP14 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x779 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7CB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x822 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x830 JUMPI POP DUP1 JUMPDEST PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x556E61626C6520746F2073656E642066756E6473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x885 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x88E PUSH0 PUSH2 0xD1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x451 SWAP1 PUSH2 0x8B7 SWAP1 DUP5 SWAP1 PUSH2 0xE8C JUMP JUMPDEST DUP4 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 GT PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073656C6C20746865206C617374207368617265000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH0 PUSH2 0x945 PUSH2 0x93F DUP5 DUP5 PUSH2 0xE8C JUMP JUMPDEST DUP5 PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x95F SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SLOAD DUP5 PUSH2 0x983 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x98D SWAP2 SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP6 GT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420736861726573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xA26 SWAP1 DUP7 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0xA53 DUP6 DUP6 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x2C76E7A47FD53E2854856AC3F0A5F3EE40D15CFAA82266357EA9779C486AB9C3 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 DUP8 DUP8 DUP8 PUSH2 0xAA2 DUP5 DUP14 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB6 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 CALLER DUP3 PUSH2 0xACB DUP6 DUP8 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xBC9 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xBD2 JUMPI POP DUP1 JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x556E61626C6520746F2073656E642066756E6473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC28 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x606 JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xD1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCA1 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x606 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD81 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD97 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDA0 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE PUSH1 0x20 DUP5 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE07 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x451 DUP3 PUSH2 0xD6B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3BE JUMPI PUSH2 0x3BE PUSH2 0xE2F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE74 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3BE JUMPI PUSH2 0x3BE PUSH2 0xE2F JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH2 0x3BE PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE SWAP7 SWAP1 SWAP8 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PUSH16 0x1F540079ACA60E8C32D73AB0596F31A7 0xB0 PUSH26 0x6965089BF9747146C1E9F35064736F6C63430008180033000000 ",
							"sourceMap": "125:4448:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;498:68;;;;;;;;;;-1:-1:-1;498:68:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:25:3;;;591:2;576:18;498:68:2;;;;;;;;1786:348;;;;;;;;;;-1:-1:-1;1786:348:2;;;;;:::i;:::-;;:::i;2140:350::-;;;;;;;;;;-1:-1:-1;2140:350:2;;;;;:::i;:::-;;:::i;243:32::-;;;;;;;;;;;;;;;;1446:159;;;;;;;;;;-1:-1:-1;1446:159:2;;;;;:::i;:::-;;:::i;161:37::-;;;;;;;;;;-1:-1:-1;161:37:2;;;;-1:-1:-1;;;;;161:37:2;;;;;;-1:-1:-1;;;;;1062:32:3;;;1044:51;;1032:2;1017:18;161:37:2;898:203:3;914:116:2;;;;;;;;;;-1:-1:-1;914:116:2;;;;;:::i;:::-;;:::i;:::-;;1036:404;;;;;;;;;;-1:-1:-1;1036:404:2;;;;;:::i;:::-;;:::i;2496:1000::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1611:169:2;;;;;;;;;;-1:-1:-1;1611:169:2;;;;;:::i;:::-;;:::i;790:118::-;;;;;;;;;;-1:-1:-1;790:118:2;;;;;:::i;:::-;;:::i;3502:1069::-;;;;;;:::i;:::-;;:::i;204:33::-;;;;;;;;;;;;;;;;2081:198:0;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;604:47:2:-;;;;;;;;;;-1:-1:-1;604:47:2;;;;;:::i;:::-;;;;;;;;;;;;;;658:126;;;;;;;;;;-1:-1:-1;658:126:2;;;;;:::i;:::-;;:::i;1786:348::-;1875:7;1894:13;1910:34;1922:13;1937:6;1910:11;:34::i;:::-;1894:50;;1954:19;2005:7;1984:18;;1976:5;:26;;;;:::i;:::-;:36;;;;:::i;:::-;1954:58;;2022:18;2071:7;2051:17;;2043:5;:25;;;;:::i;:::-;:35;;;;:::i;:::-;2022:56;-1:-1:-1;2022:56:2;2095:19;2103:11;2095:5;:19;:::i;:::-;:32;;;;:::i;:::-;2088:39;;;;;1786:348;;;;;:::o;2140:350::-;2230:7;2249:13;2265:35;2278:13;2293:6;2265:12;:35::i;:::-;2249:51;;2310:19;2361:7;2340:18;;2332:5;:26;;;;:::i;:::-;:36;;;;:::i;:::-;2310:58;;2378:18;2427:7;2407:17;;2399:5;:25;;;;:::i;:::-;:35;;;;:::i;:::-;2378:56;-1:-1:-1;2378:56:2;2451:19;2459:11;2451:5;:19;:::i;:::-;:32;;;;:::i;1446:159::-;-1:-1:-1;;;;;1562:27:2;;1527:7;1562:27;;;:12;:27;;;;;;1553:45;;1591:6;1553:8;:45::i;:::-;1546:52;1446:159;-1:-1:-1;;;1446:159:2:o;914:116::-;1094:13:0;:11;:13::i;:::-;992:17:2::1;:31:::0;914:116::o;1036:404::-;1107:7;;1141:11;;:70;;1210:1;1191:10;1200:1;1191:6;:10;:::i;:::-;1186:16;;:1;:16;:::i;:::-;:20;;1205:1;1186:20;:::i;:::-;1175:6;1160:10;1169:1;1175:6;1160:10;:::i;:::-;1159:23;;;;:::i;:::-;:48;;;;:::i;:::-;:52;;;;:::i;:::-;1141:70;;;1155:1;1141:70;1126:85;-1:-1:-1;1221:12:2;1236:11;;:26;;;;;1251:6;1261:1;1251:11;1236:26;:112;;1347:1;1332:6;1319:10;1328:1;1319:6;:10;:::i;:::-;:19;;;;:::i;:::-;1314:25;;:1;:25;:::i;:::-;:29;;1342:1;1314:29;:::i;:::-;1294:15;1303:6;1294;:15;:::i;:::-;1283:6;1270:10;1279:1;1270:6;:10;:::i;:::-;:19;;;;:::i;:::-;1269:41;;;;:::i;:::-;:75;;;;:::i;:::-;:79;;;;:::i;:::-;1236:112;;;1265:1;1236:112;1221:127;-1:-1:-1;1358:17:2;1378:11;1385:4;1221:127;1378:11;:::i;:::-;1358:31;-1:-1:-1;1428:5:2;1406:19;1358:31;1418:7;1406:19;:::i;:::-;:27;;;;:::i;2496:1000::-;-1:-1:-1;;;;;2596:27:2;;2579:14;2596:27;;;:12;:27;;;;;;2641:10;;;;:41;;-1:-1:-1;;;;;;2655:27:2;;2672:10;2655:27;2641:41;2633:102;;;;-1:-1:-1;;;2633:102:2;;2727:2:3;2633:102:2;;;2709:21:3;2766:2;2746:18;;;2739:30;2805:34;2785:18;;;2778:62;-1:-1:-1;;;2856:18:3;;;2849:46;2912:19;;2633:102:2;;;;;;;;;2745:13;2761:24;2770:6;2778;2761:8;:24::i;:::-;2745:40;;2795:19;2846:7;2825:18;;2817:5;:26;;;;:::i;:::-;:36;;;;:::i;:::-;2795:58;;2863:18;2912:7;2892:17;;2884:5;:25;;;;:::i;:::-;:35;;;;:::i;:::-;2863:56;-1:-1:-1;2863:56:2;2950:19;2958:11;2950:5;:19;:::i;:::-;:32;;;;:::i;:::-;2937:9;:45;;2929:78;;;;-1:-1:-1;;;2929:78:2;;3144:2:3;2929:78:2;;;3126:21:3;3183:2;3163:18;;;3156:30;-1:-1:-1;;;3202:18:3;;;3195:50;3262:18;;2929:78:2;2942:344:3;2929:78:2;-1:-1:-1;;;;;3060:28:2;;;;;;:13;:28;;;;;;;;3089:10;3060:40;;;;;;;;:49;;3103:6;;3060:49;:::i;:::-;-1:-1:-1;;;;;3017:28:2;;;;;;:13;:28;;;;;;;;3046:10;3017:40;;;;;;;:92;3149:15;3158:6;3149;:15;:::i;:::-;-1:-1:-1;;;;;3119:27:2;;;;;;:12;:27;;;;;:45;3179:95;3185:10;3132:13;3212:4;3218:6;3226:5;3233:11;3246:10;3258:15;3218:6;3258;:15;:::i;:::-;3179:95;;;;;;;;;;;;;:::i;:::-;;;;;;;;3304:22;;:51;;3285:13;;-1:-1:-1;;;;;3304:22:2;;3339:11;;3285:13;3304:51;3285:13;3304:51;3339:11;3304:22;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3284:71;;;3366:13;3385;-1:-1:-1;;;;;3385:18:2;3411:10;3385:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3365:61;;;3444:8;:20;;;;;3456:8;3444:20;3436:53;;;;-1:-1:-1;;;3436:53:2;;4453:2:3;3436:53:2;;;4435:21:3;4492:2;4472:18;;;4465:30;-1:-1:-1;;;4511:18:3;;;4504:50;4571:18;;3436:53:2;4251:344:3;3436:53:2;2569:927;;;;;;2496:1000;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1611:169:2:-;-1:-1:-1;;;;;1728:27:2;;1693:7;1728:27;;;:12;:27;;;;;;1719:54;;1728:36;;1758:6;;1728:36;:::i;:::-;1766:6;1719:8;:54::i;790:118::-;1094:13:0;:11;:13::i;:::-;869:18:2::1;:32:::0;790:118::o;3502:1069::-;-1:-1:-1;;;;;3603:27:2;;3586:14;3603:27;;;:12;:27;;;;;;3648:15;;;3640:54;;;;-1:-1:-1;;;3640:54:2;;4802:2:3;3640:54:2;;;4784:21:3;4841:2;4821:18;;;4814:30;4880:28;4860:18;;;4853:56;4926:18;;3640:54:2;4600:350:3;3640:54:2;3704:13;3720:33;3729:15;3738:6;3729;:15;:::i;:::-;3746:6;3720:8;:33::i;:::-;3704:49;;3763:19;3814:7;3793:18;;3785:5;:26;;;;:::i;:::-;:36;;;;:::i;:::-;3763:58;;3831:18;3880:7;3860:17;;3852:5;:25;;;;:::i;:::-;:35;;;;:::i;:::-;-1:-1:-1;;;;;3905:28:2;;;;;;:13;:28;;;;;;;;3934:10;3905:40;;;;;;;;3831:56;;-1:-1:-1;3905:50:2;-1:-1:-1;3905:50:2;3897:82;;;;-1:-1:-1;;;3897:82:2;;5157:2:3;3897:82:2;;;5139:21:3;5196:2;5176:18;;;5169:30;-1:-1:-1;;;5215:18:3;;;5208:49;5274:18;;3897:82:2;4955:343:3;3897:82:2;-1:-1:-1;;;;;4032:28:2;;;;;;:13;:28;;;;;;;;4061:10;4032:40;;;;;;;;:49;;4075:6;;4032:49;:::i;:::-;-1:-1:-1;;;;;3989:28:2;;;;;;:13;:28;;;;;;;;4018:10;3989:40;;;;;;;:92;4121:15;4130:6;4121;:15;:::i;:::-;-1:-1:-1;;;;;4091:27:2;;;;;;:12;:27;;;;;:45;;;;4151:96;;4157:10;;4104:13;;4191:6;4199:5;4206:11;4219:10;4231:15;4191:6;4231;:15;:::i;:::-;4151:96;;;;;;;;;;;;;:::i;:::-;;;;;;;;4258:13;4277:10;4322;4300:19;4308:11;4300:5;:19;:::i;:::-;:32;;;;:::i;:::-;4277:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4367:22:2;;:51;;4257:80;;-1:-1:-1;4348:13:2;;-1:-1:-1;;;;;4367:22:2;;;;4402:11;;4348:13;4367:51;4348:13;4367:51;4402:11;4367:22;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4347:71;;;4429:13;4448;-1:-1:-1;;;;;4448:18:2;4474:10;4448:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4428:61;;;4507:8;:20;;;;;4519:8;4507:20;:32;;;;;4531:8;4507:32;4499:65;;;;-1:-1:-1;;;4499:65:2;;4453:2:3;4499:65:2;;;4435:21:3;4492:2;4472:18;;;4465:30;-1:-1:-1;;;4511:18:3;;;4504:50;4571:18;;4499:65:2;4251:344:3;4499:65:2;3576:995;;;;;;;3502:1069;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5505:2:3;2161:73:0::1;::::0;::::1;5487:21:3::0;5544:2;5524:18;;;5517:30;5583:34;5563:18;;;5556:62;-1:-1:-1;;;5634:18:3;;;5627:36;5680:19;;2161:73:0::1;5303:402:3::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;658:126:2:-;1094:13:0;:11;:13::i;:::-;737:22:2::1;:40:::0;;-1:-1:-1;;;;;;737:40:2::1;-1:-1:-1::0;;;;;737:40:2;;;::::1;::::0;;;::::1;::::0;;658:126::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5912:2:3;1414:68:0;;;5894:21:3;;;5931:18;;;5924:30;5990:34;5970:18;;;5963:62;6042:18;;1414:68:0;5710:356:3;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;639:254::-;707:6;715;768:2;756:9;747:7;743:23;739:32;736:52;;;784:1;781;774:12;736:52;807:29;826:9;807:29;:::i;:::-;797:39;883:2;868:18;;;;855:32;;-1:-1:-1;;;639:254:3:o;1106:180::-;1165:6;1218:2;1206:9;1197:7;1193:23;1189:32;1186:52;;;1234:1;1231;1224:12;1186:52;-1:-1:-1;1257:23:3;;1106:180;-1:-1:-1;1106:180:3:o;1291:248::-;1359:6;1367;1420:2;1408:9;1399:7;1395:23;1391:32;1388:52;;;1436:1;1433;1426:12;1388:52;-1:-1:-1;;1459:23:3;;;1529:2;1514:18;;;1501:32;;-1:-1:-1;1291:248:3:o;1544:186::-;1603:6;1656:2;1644:9;1635:7;1631:23;1627:32;1624:52;;;1672:1;1669;1662:12;1624:52;1695:29;1714:9;1695:29;:::i;1735:127::-;1796:10;1791:3;1787:20;1784:1;1777:31;1827:4;1824:1;1817:15;1851:4;1848:1;1841:15;1867:168;1940:9;;;1971;;1988:15;;;1982:22;;1968:37;1958:71;;2009:18;;:::i;2040:217::-;2080:1;2106;2096:132;;2150:10;2145:3;2141:20;2138:1;2131:31;2185:4;2182:1;2175:15;2213:4;2210:1;2203:15;2096:132;-1:-1:-1;2242:9:3;;2040:217::o;2262:125::-;2327:9;;;2348:10;;;2345:36;;;2361:18;;:::i;2392:128::-;2459:9;;;2480:11;;;2477:37;;;2494:18;;:::i;3291:745::-;-1:-1:-1;;;;;3684:15:3;;;3666:34;;3736:15;;;;3731:2;3716:18;;3709:43;3795:14;;3788:22;3783:2;3768:18;;3761:50;3842:2;3827:18;;3820:34;;;;3885:3;3870:19;;3863:35;3646:3;3914:19;;3907:35;3973:3;3958:19;;3951:35;4017:3;4002:19;;3995:35;;;;3615:3;3600:19;;3291:745::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "773000",
								"executionCost": "26643",
								"totalCost": "799643"
							},
							"external": {
								"buyShares(address,uint256)": "infinite",
								"getBuyPrice(address,uint256)": "infinite",
								"getBuyPriceAfterFee(address,uint256)": "infinite",
								"getPrice(uint256,uint256)": "infinite",
								"getSellPrice(address,uint256)": "infinite",
								"getSellPriceAfterFee(address,uint256)": "infinite",
								"owner()": "2374",
								"protocolFeeDestination()": "2381",
								"protocolFeePercent()": "2327",
								"renounceOwnership()": "infinite",
								"sellShares(address,uint256)": "infinite",
								"setFeeDestination(address)": "26842",
								"setProtocolFeePercent(uint256)": "24574",
								"setSubjectFeePercent(uint256)": "24552",
								"sharesBalance(address,address)": "infinite",
								"sharesSupply(address)": "2593",
								"subjectFeePercent()": "2373",
								"transferOwnership(address)": "28395"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 4573,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f6f1f540079aca60e8c32d73ab0596f31a7b0796965089bf9747146c1e9f35064736f6c63430008180033",
									".code": [
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "B51D0534"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "B51D0534"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "D6E6EB9F"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "F9931BE0"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "FBE53234"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "9AE71781"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "A4983421"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "4635256E"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "4635256E"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "4CE7957C"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "5A8A764E"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "5CF4EE91"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "6945B123"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "20235FF"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "F026F6D"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "2267A89C"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "24DC441D"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 125,
											"end": 4573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 498,
											"end": 566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 603,
											"end": 628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 603,
											"end": 628,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 498,
											"end": 566,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 566,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1786,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1786,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2140,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2140,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 243,
											"end": 275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 243,
											"end": 275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 275,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 275,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 243,
											"end": 275,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1446,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1446,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 161,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 161,
											"end": 198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 161,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 161,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 914,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 914,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1036,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2496,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2496,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1611,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1611,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 790,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 790,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 790,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3502,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3502,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 204,
											"end": 237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 204,
											"end": 237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 204,
											"end": 237,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 237,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 237,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 651,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 604,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 604,
											"end": 651,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 658,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 658,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 658,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1943,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1910,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1944,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1910,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1976,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1976,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1976,
											"end": 2012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1976,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2012,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1976,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 2012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 2012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2051,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2051,
											"end": 2068,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2048,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2043,
											"end": 2068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2043,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2043,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2043,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2103,
											"end": 2114,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2100,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2095,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2114,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2095,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2095,
											"end": 2127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2095,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2095,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 2134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2140,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2299,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2265,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2300,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2265,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2368,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2332,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2332,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2332,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2332,
											"end": 2368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2332,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2332,
											"end": 2368,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2332,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2399,
											"end": 2424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2399,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2399,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2399,
											"end": 2434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2399,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2434,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2399,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2434,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2459,
											"end": 2470,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2451,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2451,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2451,
											"end": 2483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2451,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1553,
											"end": 1598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1553,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1598,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1553,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1605,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1036,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1152,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1152,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1191,
											"end": 1197,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1191,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1186,
											"end": 1202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1187,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1186,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1186,
											"end": 1202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1202,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1186,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1186,
											"end": 1206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1186,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1186,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1206,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1186,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1169,
											"end": 1170,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1160,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1159,
											"end": 1182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1159,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1182,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1159,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1159,
											"end": 1207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1159,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1207,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1159,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1159,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1159,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1141,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1247,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1251,
											"end": 1262,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1236,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1319,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1319,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1319,
											"end": 1338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1319,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1319,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1314,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1314,
											"end": 1343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1314,
											"end": 1343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1314,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1294,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1270,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1280,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1270,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1270,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1269,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1269,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1269,
											"end": 1344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1269,
											"end": 1344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1344,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1269,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1269,
											"end": 1348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1269,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1269,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1236,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1385,
											"end": 1389,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1348,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1378,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1389,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1378,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "3E80"
										},
										{
											"begin": 1406,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1358,
											"end": 1389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1406,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1406,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1425,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 1406,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1406,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2608,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2623,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2682,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2682,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2682,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2730,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C79207468652073686172657327207375626A6563742063616E20627579"
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20746865206669727374207368617265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2931,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2912,
											"end": 2931,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2770,
											"end": 2776,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2761,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2761,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2825,
											"end": 2843,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2825,
											"end": 2843,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2817,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2817,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2817,
											"end": 2853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2817,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2853,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2817,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2919,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2892,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2892,
											"end": 2909,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2884,
											"end": 2909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2884,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2884,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2884,
											"end": 2919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2884,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2884,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2863,
											"end": 2919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2958,
											"end": 2969,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2950,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2950,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2950,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2950,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3146,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3126,
											"end": 3147,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3185,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3163,
											"end": 3181,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3163,
											"end": 3181,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3181,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3156,
											"end": 3186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D081C185E5B595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2942,
											"end": 3286,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2929,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3073,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3088,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3100,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3060,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3060,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3045,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3046,
											"end": 3056,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3057,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3109,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3149,
											"end": 3164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3164,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3149,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3146,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "2C76E7A47FD53E2854856AC3F0A5F3EE40D15CFAA82266357EA9779C486AB9C3"
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3244,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3246,
											"end": 3256,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3258,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3179,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3274,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3326,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3304,
											"end": 3326,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3304,
											"end": 3326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3339,
											"end": 3350,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3339,
											"end": 3350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3339,
											"end": 3350,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3326,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3398,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3444,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4435,
											"end": 4456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4495,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E61626C6520746F2073656E642066756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4251,
											"end": 4595,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1719,
											"end": 1773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1728,
											"end": 1764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1764,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1728,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1728,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1719,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 790,
											"end": 908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 869,
											"end": 901,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 790,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3630,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3663,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4802,
											"end": 4804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4784,
											"end": 4805,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4843,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4844,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4880,
											"end": 4908,
											"name": "PUSH",
											"source": 3,
											"value": "43616E6E6F742073656C6C20746865206C617374207368617265000000000000"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4909,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4926,
											"end": 4944,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4926,
											"end": 4944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4600,
											"end": 4950,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3640,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3729,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3729,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3744,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3729,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3720,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3753,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3720,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3821,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3793,
											"end": 3811,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3793,
											"end": 3811,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3785,
											"end": 3811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3785,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3785,
											"end": 3821,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3785,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3821,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3785,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3887,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3860,
											"end": 3877,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3852,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3852,
											"end": 3887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3852,
											"end": 3887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3887,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3852,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3944,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3945,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 3955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 3955,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5157,
											"end": 5159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5199,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E7420736861726573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4955,
											"end": 5298,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3897,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4045,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4060,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4071,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4032,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4032,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4032,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4028,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4029,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4081,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4121,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 4130,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4121,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4121,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4121,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 4121,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4091,
											"end": 4136,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "PUSH",
											"source": 2,
											"value": "2C76E7A47FD53E2854856AC3F0A5F3EE40D15CFAA82266357EA9779C486AB9C3"
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4157,
											"end": 4167,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4157,
											"end": 4167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4104,
											"end": 4117,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4104,
											"end": 4117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4204,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4206,
											"end": 4217,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4229,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4191,
											"end": 4197,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4237,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4231,
											"end": 4246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4231,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4151,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4247,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 4258,
											"end": 4271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4287,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 4308,
											"end": 4319,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4300,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4300,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4277,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4413,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4361,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4361,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4413,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4347,
											"end": 4418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4448,
											"end": 4466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4474,
											"end": 4484,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4448,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4519,
											"end": 4527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4507,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4531,
											"end": 4539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4435,
											"end": 4456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4495,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E61626C6520746F2073656E642066756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4251,
											"end": 4595,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4499,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 4571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5507,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5487,
											"end": 5508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5546,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5617,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5618,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5627,
											"end": 5663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5699,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5680,
											"end": 5699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5303,
											"end": 5705,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 658,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 737,
											"end": 759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 737,
											"end": 777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 737,
											"end": 777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 777,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 658,
											"end": 784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 5914,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 5915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5949,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5931,
											"end": 5949,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6024,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5970,
											"end": 5988,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5970,
											"end": 5988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 5988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5710,
											"end": 6066,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 192,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 440,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 427,
											"end": 445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 408,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 408,
											"end": 446,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 408,
											"end": 446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 398,
											"end": 446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 398,
											"end": 446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 893,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 639,
											"end": 893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 707,
											"end": 713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 768,
											"end": 770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 765,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 747,
											"end": 754,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 743,
											"end": 766,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 739,
											"end": 771,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 736,
											"end": 788,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 736,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 736,
											"end": 788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 784,
											"end": 785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 774,
											"end": 786,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 736,
											"end": 788,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 736,
											"end": 788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 807,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 807,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 807,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 807,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 807,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 797,
											"end": 836,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 883,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 886,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 868,
											"end": 886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 886,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 868,
											"end": 886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 887,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 887,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 639,
											"end": 893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1106,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1204,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1216,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1238,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1186,
											"end": 1238,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1238,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1186,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1280,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1280,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1539,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1291,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1418,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1423,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1531,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1730,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1544,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1659,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1624,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1714,
											"end": 1723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1695,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1862,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1735,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1808,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 2035,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1867,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1968,
											"end": 2005,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1958,
											"end": 2029,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2009,
											"end": 2027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2040,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2096,
											"end": 2228,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2145,
											"end": 2148,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2141,
											"end": 2161,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2189,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2182,
											"end": 2183,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2175,
											"end": 2190,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2228,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2096,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2387,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2262,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2358,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2358,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2358,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2381,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2345,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2345,
											"end": 2381,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2361,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2361,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2520,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2392,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2491,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2477,
											"end": 2514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2494,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3291,
											"end": 4036,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3291,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3709,
											"end": 3752,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3809,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3809,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3810,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3761,
											"end": 3811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3854,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3854,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3870,
											"end": 3889,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3863,
											"end": 3898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3914,
											"end": 3933,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3914,
											"end": 3933,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3907,
											"end": 3942,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3976,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3958,
											"end": 3977,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3958,
											"end": 3977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4017,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4002,
											"end": 4021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4002,
											"end": 4021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4030,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4030,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3618,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3291,
											"end": 4036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.0/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.0/utils/Context.sol",
								"sosh/CertiFren.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyShares(address,uint256)": "6945b123",
							"getBuyPrice(address,uint256)": "4635256e",
							"getBuyPriceAfterFee(address,uint256)": "0f026f6d",
							"getPrice(uint256,uint256)": "5cf4ee91",
							"getSellPrice(address,uint256)": "9ae71781",
							"getSellPriceAfterFee(address,uint256)": "2267a89c",
							"owner()": "8da5cb5b",
							"protocolFeeDestination()": "4ce7957c",
							"protocolFeePercent()": "d6e6eb9f",
							"renounceOwnership()": "715018a6",
							"sellShares(address,uint256)": "b51d0534",
							"setFeeDestination(address)": "fbe53234",
							"setProtocolFeePercent(uint256)": "a4983421",
							"setSubjectFeePercent(uint256)": "5a8a764e",
							"sharesBalance(address,address)": "020235ff",
							"sharesSupply(address)": "f9931be0",
							"subjectFeePercent()": "24dc441d",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subject\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subjectEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sharesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sharesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sosh/CertiFren.sol\":\"CertiFren\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"sosh/CertiFren.sol\":{\"keccak256\":\"0x11c472b228e9c5d75074fc50a0305a5a5e9fe97673233c660b4cc4ea1fcb4372\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55f78f225aa33b79c5906c6de42c7abdb142205482a1182028eda29cce149fad\",\"dweb:/ipfs/QmaPQTxjappnPzpufTy2crYzq4wji2ZpUvSGnZmPqbznJG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "sosh/CertiFren.sol:CertiFren",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 141,
								"contract": "sosh/CertiFren.sol:CertiFren",
								"label": "protocolFeeDestination",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 143,
								"contract": "sosh/CertiFren.sol:CertiFren",
								"label": "protocolFeePercent",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 145,
								"contract": "sosh/CertiFren.sol:CertiFren",
								"label": "subjectFeePercent",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "sosh/CertiFren.sol:CertiFren",
								"label": "sharesBalance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 173,
								"contract": "sosh/CertiFren.sol:CertiFren",
								"label": "sharesSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"sosh/CertiFren.sol": {
				"ast": {
					"absolutePath": "sosh/CertiFren.sol",
					"exportedSymbols": {
						"CertiFren": [
							671
						],
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.0/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 672,
							"sourceUnit": 113,
							"src": "64:58:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "Ownable",
										"nameLocations": [
											"147:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "147:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "147:7:2"
								}
							],
							"canonicalName": "CertiFren",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 671,
							"linearizedBaseContracts": [
								671,
								112,
								134
							],
							"name": "CertiFren",
							"nameLocation": "134:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4ce7957c",
									"id": 141,
									"mutability": "mutable",
									"name": "protocolFeeDestination",
									"nameLocation": "176:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 671,
									"src": "161:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 140,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d6e6eb9f",
									"id": 143,
									"mutability": "mutable",
									"name": "protocolFeePercent",
									"nameLocation": "219:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 671,
									"src": "204:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "204:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24dc441d",
									"id": 145,
									"mutability": "mutable",
									"name": "subjectFeePercent",
									"nameLocation": "258:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 671,
									"src": "243:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c3",
									"id": 163,
									"name": "Trade",
									"nameLocation": "288:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"indexed": false,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "302:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "294:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"indexed": false,
												"mutability": "mutable",
												"name": "subject",
												"nameLocation": "318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBuy",
												"nameLocation": "332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "327:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "327:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": false,
												"mutability": "mutable",
												"name": "shareAmount",
												"nameLocation": "347:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "339:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "368:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "360:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolEthAmount",
												"nameLocation": "387:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "379:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "subjectEthAmount",
												"nameLocation": "414:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "406:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "440:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "432:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:154:2"
									},
									"src": "282:166:2"
								},
								{
									"constant": false,
									"functionSelector": "020235ff",
									"id": 169,
									"mutability": "mutable",
									"name": "sharesBalance",
									"nameLocation": "553:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 671,
									"src": "498:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 168,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 164,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "498:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 167,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 165,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "525:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "517:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 166,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "536:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9931be0",
									"id": 173,
									"mutability": "mutable",
									"name": "sharesSupply",
									"nameLocation": "639:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 671,
									"src": "604:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 172,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "612:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "604:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 171,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "623:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "727:57:2",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "protocolFeeDestination",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "737:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "_feeDestination",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "762:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "737:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "737:40:2"
											}
										]
									},
									"functionSelector": "fbe53234",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nameLocations": [
													"717:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "717:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "717:9:2"
										}
									],
									"name": "setFeeDestination",
									"nameLocation": "667:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_feeDestination",
												"nameLocation": "693:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "685:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:25:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:2"
									},
									"scope": 671,
									"src": "658:126:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "859:49:2",
										"statements": [
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 192,
														"name": "protocolFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "869:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 193,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "890:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "869:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "869:32:2"
											}
										]
									},
									"functionSelector": "a4983421",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 189,
												"name": "onlyOwner",
												"nameLocations": [
													"849:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "849:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "849:9:2"
										}
									],
									"name": "setProtocolFeePercent",
									"nameLocation": "799:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "829:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "821:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:21:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:0:2"
									},
									"scope": 671,
									"src": "790:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "982:48:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "subjectFeePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "992:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1012:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "992:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "992:31:2"
											}
										]
									},
									"functionSelector": "5a8a764e",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "onlyOwner",
												"nameLocations": [
													"972:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "972:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "972:9:2"
										}
									],
									"name": "setSubjectFeePercent",
									"nameLocation": "923:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "952:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "944:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:21:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:0:2"
									},
									"scope": 671,
									"src": "914:116:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1116:324:2",
										"statements": [
											{
												"assignments": [
													219
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "sum1",
														"nameLocation": "1134:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "1126:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1126:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 220,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1141:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1151:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1141:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 224,
																				"name": "supply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "1160:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1169:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "1160:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 227,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1159:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"id": 228,
																			"name": "supply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "1175:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 229,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1174:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1159:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1186:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 232,
																							"name": "supply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 211,
																							"src": "1191:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1200:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "1191:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 235,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1190:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1186:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1205:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1186:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 239,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1185:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1159:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "36",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "1159:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1141:70:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1155:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1126:85:2"
											},
											{
												"assignments": [
													246
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "sum2",
														"nameLocation": "1229:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "1221:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1221:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 247,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1236:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1246:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1236:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 250,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "1251:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1261:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1251:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1236:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 255,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 211,
																					"src": "1270:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1279:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1270:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 258,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 213,
																				"src": "1283:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1270:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1269:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 261,
																				"name": "supply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "1294:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 262,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 213,
																				"src": "1303:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1294:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 264,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1293:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1314:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 269,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 267,
																								"name": "supply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 211,
																								"src": "1319:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 268,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1328:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "1319:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 270,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 213,
																							"src": "1332:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1319:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 272,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1318:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1314:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1342:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1314:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1313:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1269:75:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "36",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "1269:79:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1236:112:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1265:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1221:127:2"
											},
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "summation",
														"nameLocation": "1366:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "1358:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1358:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 284,
														"name": "sum2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1378:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 285,
														"name": "sum1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1385:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1378:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1358:31:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 288,
															"name": "summation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1406:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1418:7:2",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1"
														},
														"src": "1406:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3136303030",
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1428:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16000_by_1",
															"typeString": "int_const 16000"
														},
														"value": "16000"
													},
													"src": "1406:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 293,
												"nodeType": "Return",
												"src": "1399:34:2"
											}
										]
									},
									"functionSelector": "5cf4ee91",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "1045:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "1062:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1054:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1078:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1070:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:32:2"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1107:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:9:2"
									},
									"scope": 671,
									"src": "1036:404:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "1536:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 305,
																"name": "sharesSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "1562:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 307,
															"indexExpression": {
																"id": 306,
																"name": "sharesSubject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "1575:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1562:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1591:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1553:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1553:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 303,
												"id": 310,
												"nodeType": "Return",
												"src": "1546:52:2"
											}
										]
									},
									"functionSelector": "4635256e",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyPrice",
									"nameLocation": "1455:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "sharesSubject",
												"nameLocation": "1475:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1467:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1498:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1490:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:39:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1527:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:9:2"
									},
									"scope": 671,
									"src": "1446:159:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1702:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 322,
																	"name": "sharesSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 324,
																"indexExpression": {
																	"id": 323,
																	"name": "sharesSubject",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "1741:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1728:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 325,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "1758:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1728:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "1766:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 321,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1719:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1719:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 320,
												"id": 329,
												"nodeType": "Return",
												"src": "1712:61:2"
											}
										]
									},
									"functionSelector": "9ae71781",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSellPrice",
									"nameLocation": "1620:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "sharesSubject",
												"nameLocation": "1641:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1633:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1664:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1656:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:39:2"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:9:2"
									},
									"scope": 671,
									"src": "1611:169:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "1884:250:2",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1902:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "1894:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1894:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"id": 343,
															"name": "sharesSubject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "1922:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1937:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "getBuyPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "1910:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1910:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1894:50:2"
											},
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "protocolFee",
														"nameLocation": "1962:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "1954:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 349,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1976:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 350,
															"name": "protocolFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1984:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1976:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2005:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "1976:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1954:58:2"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "subjectFee",
														"nameLocation": "2030:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "2022:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2022:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 357,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "2043:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 358,
															"name": "subjectFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2051:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2043:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2071:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "2043:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2022:56:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 363,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "2095:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 364,
															"name": "protocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "2103:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2095:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 366,
														"name": "subjectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2117:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2095:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 339,
												"id": 368,
												"nodeType": "Return",
												"src": "2088:39:2"
											}
										]
									},
									"functionSelector": "0f026f6d",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyPriceAfterFee",
									"nameLocation": "1795:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "sharesSubject",
												"nameLocation": "1823:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1815:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1846:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1838:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:39:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1875:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1874:9:2"
									},
									"scope": 671,
									"src": "1786:348:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2239:251:2",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2257:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "2249:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2249:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 382,
															"name": "sharesSubject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "2278:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "2293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "getSellPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2265:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2249:51:2"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "protocolFee",
														"nameLocation": "2318:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "2310:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2310:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 388,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2332:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 389,
															"name": "protocolFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2340:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2332:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2361:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "2332:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2310:58:2"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "subjectFee",
														"nameLocation": "2386:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "2378:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 396,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2399:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 397,
															"name": "subjectFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2407:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2399:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2427:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "2399:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2378:56:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 402,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2451:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 403,
															"name": "protocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2459:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2451:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 405,
														"name": "subjectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "2473:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2451:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 407,
												"nodeType": "Return",
												"src": "2444:39:2"
											}
										]
									},
									"functionSelector": "2267a89c",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSellPriceAfterFee",
									"nameLocation": "2149:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "sharesSubject",
												"nameLocation": "2178:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2170:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2201:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2193:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2169:39:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2230:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:9:2"
									},
									"scope": 671,
									"src": "2140:350:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "2569:927:2",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "2587:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "2579:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2579:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"baseExpression": {
														"id": 418,
														"name": "sharesSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2596:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 420,
													"indexExpression": {
														"id": 419,
														"name": "sharesSubject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "2609:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2596:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2579:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 423,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "2641:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2650:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2641:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 426,
																	"name": "sharesSubject",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "2655:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 427,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2672:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2676:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2672:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2655:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2641:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207468652073686172657327207375626a6563742063616e2062757920746865206669727374207368617265",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2684:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95731e3645b28950334ad7f3c789cb3fc753c4d5301ff39cde149dc44d17161a",
																"typeString": "literal_string \"Only the shares' subject can buy the first share\""
															},
															"value": "Only the shares' subject can buy the first share"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95731e3645b28950334ad7f3c789cb3fc753c4d5301ff39cde149dc44d17161a",
																"typeString": "literal_string \"Only the shares' subject can buy the first share\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2633:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "2633:102:2"
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2753:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "2745:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2745:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 437,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2770:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 438,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "2778:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2761:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2761:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2745:40:2"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "protocolFee",
														"nameLocation": "2803:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "2795:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2795:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 443,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "2817:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 444,
															"name": "protocolFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2825:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2817:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2846:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "2817:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2795:58:2"
											},
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "subjectFee",
														"nameLocation": "2871:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "2863:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2863:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 451,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "2884:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 452,
															"name": "subjectFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2892:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2884:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2912:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "2884:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2863:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 458,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2937:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2941:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2937:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 460,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2950:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 461,
																		"name": "protocolFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "2958:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2950:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 463,
																	"name": "subjectFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "2972:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2950:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2937:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207061796d656e74",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2984:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																"typeString": "literal_string \"Insufficient payment\""
															},
															"value": "Insufficient payment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																"typeString": "literal_string \"Insufficient payment\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2929:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2929:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "2929:78:2"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 469,
																"name": "sharesBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "3017:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 473,
															"indexExpression": {
																"id": 470,
																"name": "sharesSubject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3031:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3017:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 474,
														"indexExpression": {
															"expression": {
																"id": 471,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3046:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3050:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3046:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3017:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 475,
																	"name": "sharesBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "3060:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 477,
																"indexExpression": {
																	"id": 476,
																	"name": "sharesSubject",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3074:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3060:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 480,
															"indexExpression": {
																"expression": {
																	"id": 478,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3089:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3093:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3089:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3060:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 481,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3103:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3060:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3017:92:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "3017:92:2"
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 485,
															"name": "sharesSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "3119:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 487,
														"indexExpression": {
															"id": 486,
															"name": "sharesSubject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3132:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3119:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 488,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3149:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 489,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3158:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3149:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3119:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "3119:45:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3185:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3189:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3185:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "sharesSubject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3197:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3212:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3218:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 499,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "3226:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 500,
															"name": "protocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "3233:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 501,
															"name": "subjectFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "3246:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "3258:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 503,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "3267:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3258:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 493,
														"name": "Trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "3179:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,bool,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3179:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "3174:100:2"
											},
											{
												"assignments": [
													508,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "success1",
														"nameLocation": "3290:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "3285:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 507,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3285:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 509,
																"name": "protocolFeeDestination",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "3304:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3327:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3304:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "protocolFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "3339:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3304:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3284:71:2"
											},
											{
												"assignments": [
													517,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "success2",
														"nameLocation": "3371:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "3366:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 516,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3366:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3423:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 518,
																"name": "sharesSubject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3385:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3399:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3385:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 520,
																"name": "subjectFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3411:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3385:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3385:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3365:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "success1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "3444:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 527,
																"name": "success2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "3456:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3444:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e61626c6520746f2073656e642066756e6473",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3466:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c7576e300e258ee0a0628d457872335ec2431c728fc2267c2420c87931c40f0",
																"typeString": "literal_string \"Unable to send funds\""
															},
															"value": "Unable to send funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c7576e300e258ee0a0628d457872335ec2431c728fc2267c2420c87931c40f0",
																"typeString": "literal_string \"Unable to send funds\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3436:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "3436:53:2"
											}
										]
									},
									"functionSelector": "6945b123",
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyShares",
									"nameLocation": "2505:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "sharesSubject",
												"nameLocation": "2523:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2515:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2546:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2538:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:39:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2569:0:2"
									},
									"scope": 671,
									"src": "2496:1000:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3576:995:2",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "3594:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "3586:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3586:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"baseExpression": {
														"id": 542,
														"name": "sharesSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3603:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 544,
													"indexExpression": {
														"id": 543,
														"name": "sharesSubject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "3616:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3603:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3586:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3648:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "3657:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3648:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073656c6c20746865206c617374207368617265",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3665:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5661ed69831c42f6f73ca1b95dad4d1f4259009db2615f9ff2d691cda933124f",
																"typeString": "literal_string \"Cannot sell the last share\""
															},
															"value": "Cannot sell the last share"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5661ed69831c42f6f73ca1b95dad4d1f4259009db2615f9ff2d691cda933124f",
																"typeString": "literal_string \"Cannot sell the last share\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3640:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3640:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "3640:54:2"
											},
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3712:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "3704:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 556,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3729:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 557,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "3738:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3729:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3746:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3720:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3720:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3704:49:2"
											},
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "protocolFee",
														"nameLocation": "3771:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "3763:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3763:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "3785:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 565,
															"name": "protocolFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3793:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3785:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3814:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "3785:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3763:58:2"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "subjectFee",
														"nameLocation": "3839:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "3831:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 570,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3831:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "3852:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 573,
															"name": "subjectFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3860:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3852:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3880:7:2",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "3852:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3831:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 579,
																		"name": "sharesBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "3905:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 581,
																	"indexExpression": {
																		"id": 580,
																		"name": "sharesSubject",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "3919:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3905:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 584,
																"indexExpression": {
																	"expression": {
																		"id": 582,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3934:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3938:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3934:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3905:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 585,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "3949:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3905:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420736861726573",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3957:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665",
																"typeString": "literal_string \"Insufficient shares\""
															},
															"value": "Insufficient shares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_043f4b20be62bb0d39adad142dcc6d5a35d567a4072048f22c528cf051db2665",
																"typeString": "literal_string \"Insufficient shares\""
															}
														],
														"id": 578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "3897:82:2"
											},
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 590,
																"name": "sharesBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "3989:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 594,
															"indexExpression": {
																"id": 591,
																"name": "sharesSubject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4003:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3989:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 595,
														"indexExpression": {
															"expression": {
																"id": 592,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4018:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4022:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4018:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3989:40:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 596,
																	"name": "sharesBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "4032:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 598,
																"indexExpression": {
																	"id": 597,
																	"name": "sharesSubject",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "4046:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4032:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 601,
															"indexExpression": {
																"expression": {
																	"id": 599,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4061:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4065:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4061:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4032:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 602,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4075:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4032:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3989:92:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "3989:92:2"
											},
											{
												"expression": {
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 606,
															"name": "sharesSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4091:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 608,
														"indexExpression": {
															"id": 607,
															"name": "sharesSubject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4104:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4091:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 609,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4121:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4130:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4121:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4091:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "4091:45:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 615,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4157:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4161:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4157:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "sharesSubject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4169:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4184:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"id": 619,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4191:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 620,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4199:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 621,
															"name": "protocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4206:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 622,
															"name": "subjectFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4219:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "4231:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 624,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4240:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4231:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "Trade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "4151:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,bool,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4151:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "EmitStatement",
												"src": "4146:101:2"
											},
											{
												"assignments": [
													629,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "success1",
														"nameLocation": "4263:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "4258:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 628,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4258:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 641,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4334:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 630,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4277:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4281:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4277:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4288:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4277:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4300:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 634,
																		"name": "protocolFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "4308:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4300:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 636,
																	"name": "subjectFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "4322:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4300:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4277:56:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4277:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4257:80:2"
											},
											{
												"assignments": [
													643,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "success2",
														"nameLocation": "4353:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "4348:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 642,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4348:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 650,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 644,
																"name": "protocolFeeDestination",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "4367:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4390:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4367:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 646,
																"name": "protocolFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4402:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4367:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4347:71:2"
											},
											{
												"assignments": [
													652,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "success3",
														"nameLocation": "4434:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "4429:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 651,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4429:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 659,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4486:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 653,
																"name": "sharesSubject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4448:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4462:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4448:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 655,
																"name": "subjectFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "4474:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4448:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4448:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4428:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 661,
																	"name": "success1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "4507:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 662,
																	"name": "success2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4519:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4507:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 664,
																"name": "success3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "4531:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4507:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e61626c6520746f2073656e642066756e6473",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4541:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c7576e300e258ee0a0628d457872335ec2431c728fc2267c2420c87931c40f0",
																"typeString": "literal_string \"Unable to send funds\""
															},
															"value": "Unable to send funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c7576e300e258ee0a0628d457872335ec2431c728fc2267c2420c87931c40f0",
																"typeString": "literal_string \"Unable to send funds\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4499:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4499:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "4499:65:2"
											}
										]
									},
									"functionSelector": "b51d0534",
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellShares",
									"nameLocation": "3511:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "sharesSubject",
												"nameLocation": "3530:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3522:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:39:2"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:2"
									},
									"scope": 671,
									"src": "3502:1069:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 672,
							"src": "125:4448:2",
							"usedErrors": [],
							"usedEvents": [
								13,
								163
							]
						}
					],
					"src": "31:4542:2"
				},
				"id": 2
			}
		}
	}
}