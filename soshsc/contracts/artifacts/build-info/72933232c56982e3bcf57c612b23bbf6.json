{
	"id": "72933232c56982e3bcf57c612b23bbf6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"sosh/FuzzMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// import \"hardhat/console.sol\";\n\n/**\n * @dev provides some functions for maths that are illegal under solidity rules\n */\nlibrary FuzzyMath {\n\n    /**\n     * @dev estimates the equation f(x) = x^(a/b)^\n     * does so by calculating subtotal x^a^ and iterating to the b-root of that subtotal\n     * using a generalized form of the Babylonian Method (rounded down to nearest whole #)\n     * https://www.researchgate.net/publication/237415858_EXTENDING_THE_BABYLONIAN_ALGORITHM\n     * e\n\n     * NOTE: greater inputs could be considered if this function were used to\n     * estimate exponential mappings with a limited number of sig-figs\n     */ \n    function fraxExp(uint x, uint8 a, uint8 b) external pure returns (uint ans)  {\n        // constraints (too loose rn.. 1e81 is overflow)\n        require(b < 10, \"need exponent denominator b < 10\");\n        require(a < 10, \"need exponent numerator a < 10\");\n        require(x < 1000000000, \"maximum input is 1e9\");\n\n        unchecked {\n            // shortcuts + simpifications (224 gas) -- do we need these?\n            if (x <= 1) return x;\n            if (a % b == 0) return x ** (a / b);\n            if (b % a == 0) { \n                b = b / a;\n                a = 1;\n            }\n            uint subTotal = (a > 1) ? x**a : x;     // calc subtotal w exp numerator, prior to rooting\n            if (b == 2) return sqrt(subTotal);      // shortcut square root case\n            \n            // TODO: consider treating inputs differently depending on size?\n\n            // rough binary search for pow2 bound on x\n            uint8 stepSizePow = 7;\n            uint8 guessMSB = 128;\n            while (stepSizePow > 2) {\n                stepSizePow--;\n                if (1<<guessMSB > subTotal) {\n                    guessMSB -= uint8(1)<<stepSizePow;\n                } else {\n                    guessMSB += uint8(1)<<stepSizePow;\n                }\n            }\n\n            // narrow in on estimate\n            if (subTotal>>guessMSB > 0) {\n                while(subTotal>>guessMSB > 0) guessMSB++;\n            } else {\n                while(subTotal>>guessMSB == 0) guessMSB--;\n                guessMSB++;\n            }\n\n            // (answer bound est) z := 2^c^ ; where c = ⌈⌈lg2(subTotal)⌉ / b⌉\n            uint expBoundGuess = guessMSB / b;\n            expBoundGuess += (guessMSB % b != 0) ? 1 : 0;\n            uint z = (1<<expBoundGuess) - 1;\n            ans = subTotal;\n\n            uint8 b2 = b - 1;\n            while (z < ans) {\n                ans = z;\n                z = (subTotal / z**b2 + b2 * z) / b;\n            }\n        }\n    }\n\n    /**\n     * @dev estimates the square root of an input using Babylonian Method\n     * (not much more performant on large numbers, due to lack of tight est bounding)\n     * https://www.cs.utep.edu/vladik/2009/olg09-05a.pdf\n     */\n    function sqrt(uint x) public pure returns (uint ans) {\n        unchecked {\n            ans = x;\n            uint est = (x + 1) / 2; // intial guess, could be improved\n            while (est < ans) {\n                (ans, est) = (est, (x / est + est) / 2);\n            }\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"sosh/FuzzMath.sol": {
				"FuzzyMath": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "a",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "b",
									"type": "uint8"
								}
							],
							"name": "fraxExp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ans",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "sqrt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ans",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "provides some functions for maths that are illegal under solidity rules",
						"kind": "dev",
						"methods": {
							"fraxExp(uint256,uint8,uint8)": {
								"details": "estimates the equation f(x) = x^(a/b)^ does so by calculating subtotal x^a^ and iterating to the b-root of that subtotal using a generalized form of the Babylonian Method (rounded down to nearest whole #) https://www.researchgate.net/publication/237415858_EXTENDING_THE_BABYLONIAN_ALGORITHM e NOTE: greater inputs could be considered if this function were used to estimate exponential mappings with a limited number of sig-figs"
							},
							"sqrt(uint256)": {
								"details": "estimates the square root of an input using Babylonian Method (not much more performant on large numbers, due to lack of tight est bounding) https://www.cs.utep.edu/vladik/2009/olg09-05a.pdf"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sosh/FuzzMath.sol\":180:3190  library FuzzyMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sosh/FuzzMath.sol\":180:3190  library FuzzyMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x677342ce\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd2b5a370\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"sosh/FuzzMath.sol\":2903:3188  function sqrt(uint x) public pure returns (uint ans) {... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sosh/FuzzMath.sol\":705:2664  function fraxExp(uint x, uint8 a, uint8 b) external pure returns (uint ans)  {... */\n    tag_3:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sosh/FuzzMath.sol\":2903:3188  function sqrt(uint x) public pure returns (uint ans) {... */\n    tag_7:\n        /* \"sosh/FuzzMath.sol\":2946:2954  uint ans */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2996:2997  x */\n      dup2\n        /* \"sosh/FuzzMath.sol\":2990:2997  ans = x */\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":3011:3019  uint est */\n      0x00\n        /* \"sosh/FuzzMath.sol\":3032:3033  2 */\n      0x02\n        /* \"sosh/FuzzMath.sol\":3027:3028  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":3023:3024  x */\n      dup5\n        /* \"sosh/FuzzMath.sol\":3023:3028  x + 1 */\n      add\n        /* \"sosh/FuzzMath.sol\":3022:3033  (x + 1) / 2 */\n      dup2\n      tag_16\n      jumpi\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n    tag_16:\n      div\n        /* \"sosh/FuzzMath.sol\":3011:3033  uint est = (x + 1) / 2 */\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":3082:3172  while (est < ans) {... */\n    tag_19:\n        /* \"sosh/FuzzMath.sol\":3095:3098  ans */\n      dup2\n        /* \"sosh/FuzzMath.sol\":3089:3092  est */\n      dup2\n        /* \"sosh/FuzzMath.sol\":3089:3098  est < ans */\n      lt\n        /* \"sosh/FuzzMath.sol\":3082:3172  while (est < ans) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"sosh/FuzzMath.sol\":3132:3135  est */\n      dup1\n        /* \"sosh/FuzzMath.sol\":3155:3156  2 */\n      0x02\n        /* \"sosh/FuzzMath.sol\":3148:3151  est */\n      dup3\n        /* \"sosh/FuzzMath.sol\":3142:3145  est */\n      dup4\n        /* \"sosh/FuzzMath.sol\":3138:3139  x */\n      dup7\n        /* \"sosh/FuzzMath.sol\":3138:3145  x / est */\n      dup2\n      tag_21\n      jumpi\n      tag_22\n      tag_18\n      jump\t// in\n    tag_22:\n    tag_21:\n      div\n        /* \"sosh/FuzzMath.sol\":3138:3151  x / est + est */\n      add\n        /* \"sosh/FuzzMath.sol\":3137:3156  (x / est + est) / 2 */\n      dup2\n      tag_23\n      jumpi\n      tag_24\n      tag_18\n      jump\t// in\n    tag_24:\n    tag_23:\n      div\n        /* \"sosh/FuzzMath.sol\":3118:3157  (ans, est) = (est, (x / est + est) / 2) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"sosh/FuzzMath.sol\":3082:3172  while (est < ans) {... */\n      jump(tag_19)\n    tag_20:\n        /* \"sosh/FuzzMath.sol\":2966:3182  unchecked {... */\n      pop\n        /* \"sosh/FuzzMath.sol\":2903:3188  function sqrt(uint x) public pure returns (uint ans) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sosh/FuzzMath.sol\":705:2664  function fraxExp(uint x, uint8 a, uint8 b) external pure returns (uint ans)  {... */\n    tag_13:\n        /* \"sosh/FuzzMath.sol\":771:779  uint ans */\n      0x00\n        /* \"sosh/FuzzMath.sol\":861:863  10 */\n      0x0a\n        /* \"sosh/FuzzMath.sol\":857:858  b */\n      dup3\n        /* \"sosh/FuzzMath.sol\":857:863  b < 10 */\n      0xff\n      and\n      lt\n        /* \"sosh/FuzzMath.sol\":849:900  require(b < 10, \"need exponent denominator b < 10\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"sosh/FuzzMath.sol\":922:924  10 */\n      0x0a\n        /* \"sosh/FuzzMath.sol\":918:919  a */\n      dup4\n        /* \"sosh/FuzzMath.sol\":918:924  a < 10 */\n      0xff\n      and\n      lt\n        /* \"sosh/FuzzMath.sol\":910:959  require(a < 10, \"need exponent numerator a < 10\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"sosh/FuzzMath.sol\":981:991  1000000000 */\n      0x3b9aca00\n        /* \"sosh/FuzzMath.sol\":977:978  x */\n      dup5\n        /* \"sosh/FuzzMath.sol\":977:991  x < 1000000000 */\n      lt\n        /* \"sosh/FuzzMath.sol\":969:1016  require(x < 1000000000, \"maximum input is 1e9\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"sosh/FuzzMath.sol\":1133:1134  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":1128:1129  x */\n      dup5\n        /* \"sosh/FuzzMath.sol\":1128:1134  x <= 1 */\n      gt\n        /* \"sosh/FuzzMath.sol\":1124:1144  if (x <= 1) return x */\n      tag_35\n      jumpi\n        /* \"sosh/FuzzMath.sol\":1143:1144  x */\n      dup4\n        /* \"sosh/FuzzMath.sol\":1136:1144  return x */\n      swap1\n      pop\n      jump(tag_25)\n        /* \"sosh/FuzzMath.sol\":1124:1144  if (x <= 1) return x */\n    tag_35:\n        /* \"sosh/FuzzMath.sol\":1171:1172  0 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":1166:1167  b */\n      dup3\n        /* \"sosh/FuzzMath.sol\":1162:1167  a % b */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1162:1163  a */\n      dup5\n        /* \"sosh/FuzzMath.sol\":1162:1167  a % b */\n      0xff\n      and\n      dup2\n      tag_36\n      jumpi\n      tag_37\n      tag_18\n      jump\t// in\n    tag_37:\n    tag_36:\n      mod\n        /* \"sosh/FuzzMath.sol\":1162:1172  a % b == 0 */\n      0xff\n      and\n      sub\n        /* \"sosh/FuzzMath.sol\":1158:1193  if (a % b == 0) return x ** (a / b) */\n      tag_38\n      jumpi\n        /* \"sosh/FuzzMath.sol\":1191:1192  b */\n      dup2\n        /* \"sosh/FuzzMath.sol\":1187:1192  a / b */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1187:1188  a */\n      dup4\n        /* \"sosh/FuzzMath.sol\":1187:1192  a / b */\n      0xff\n      and\n      dup2\n      tag_39\n      jumpi\n      tag_40\n      tag_18\n      jump\t// in\n    tag_40:\n    tag_39:\n      div\n        /* \"sosh/FuzzMath.sol\":1181:1193  x ** (a / b) */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1181:1182  x */\n      dup5\n        /* \"sosh/FuzzMath.sol\":1181:1193  x ** (a / b) */\n      exp\n        /* \"sosh/FuzzMath.sol\":1174:1193  return x ** (a / b) */\n      swap1\n      pop\n      jump(tag_25)\n        /* \"sosh/FuzzMath.sol\":1158:1193  if (a % b == 0) return x ** (a / b) */\n    tag_38:\n        /* \"sosh/FuzzMath.sol\":1220:1221  0 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":1215:1216  a */\n      dup4\n        /* \"sosh/FuzzMath.sol\":1211:1216  b % a */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1211:1212  b */\n      dup4\n        /* \"sosh/FuzzMath.sol\":1211:1216  b % a */\n      0xff\n      and\n      dup2\n      tag_41\n      jumpi\n      tag_42\n      tag_18\n      jump\t// in\n    tag_42:\n    tag_41:\n      mod\n        /* \"sosh/FuzzMath.sol\":1211:1221  b % a == 0 */\n      0xff\n      and\n      sub\n        /* \"sosh/FuzzMath.sol\":1207:1289  if (b % a == 0) { ... */\n      tag_43\n      jumpi\n        /* \"sosh/FuzzMath.sol\":1250:1251  a */\n      dup3\n        /* \"sosh/FuzzMath.sol\":1246:1251  b / a */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1246:1247  b */\n      dup3\n        /* \"sosh/FuzzMath.sol\":1246:1251  b / a */\n      0xff\n      and\n      dup2\n      tag_44\n      jumpi\n      tag_45\n      tag_18\n      jump\t// in\n    tag_45:\n    tag_44:\n      div\n        /* \"sosh/FuzzMath.sol\":1242:1251  b = b / a */\n      swap2\n      pop\n        /* \"sosh/FuzzMath.sol\":1273:1274  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":1269:1274  a = 1 */\n      swap3\n      pop\n        /* \"sosh/FuzzMath.sol\":1207:1289  if (b % a == 0) { ... */\n    tag_43:\n        /* \"sosh/FuzzMath.sol\":1302:1315  uint subTotal */\n      0x00\n        /* \"sosh/FuzzMath.sol\":1323:1324  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":1319:1320  a */\n      dup5\n        /* \"sosh/FuzzMath.sol\":1319:1324  a > 1 */\n      0xff\n      and\n      gt\n        /* \"sosh/FuzzMath.sol\":1318:1336  (a > 1) ? x**a : x */\n      tag_46\n      jumpi\n        /* \"sosh/FuzzMath.sol\":1335:1336  x */\n      dup5\n        /* \"sosh/FuzzMath.sol\":1318:1336  (a > 1) ? x**a : x */\n      jump(tag_47)\n    tag_46:\n        /* \"sosh/FuzzMath.sol\":1331:1332  a */\n      dup4\n        /* \"sosh/FuzzMath.sol\":1328:1332  x**a */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1328:1329  x */\n      dup6\n        /* \"sosh/FuzzMath.sol\":1328:1332  x**a */\n      exp\n        /* \"sosh/FuzzMath.sol\":1318:1336  (a > 1) ? x**a : x */\n    tag_47:\n        /* \"sosh/FuzzMath.sol\":1302:1336  uint subTotal = (a > 1) ? x**a : x */\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":1414:1415  2 */\n      0x02\n        /* \"sosh/FuzzMath.sol\":1409:1410  b */\n      dup4\n        /* \"sosh/FuzzMath.sol\":1409:1415  b == 2 */\n      0xff\n      and\n      sub\n        /* \"sosh/FuzzMath.sol\":1405:1438  if (b == 2) return sqrt(subTotal) */\n      tag_48\n      jumpi\n        /* \"sosh/FuzzMath.sol\":1424:1438  sqrt(subTotal) */\n      tag_49\n        /* \"sosh/FuzzMath.sol\":1429:1437  subTotal */\n      dup2\n        /* \"sosh/FuzzMath.sol\":1424:1428  sqrt */\n      tag_7\n        /* \"sosh/FuzzMath.sol\":1424:1438  sqrt(subTotal) */\n      jump\t// in\n    tag_49:\n        /* \"sosh/FuzzMath.sol\":1417:1438  return sqrt(subTotal) */\n      swap2\n      pop\n      pop\n      jump(tag_25)\n        /* \"sosh/FuzzMath.sol\":1405:1438  if (b == 2) return sqrt(subTotal) */\n    tag_48:\n        /* \"sosh/FuzzMath.sol\":1632:1649  uint8 stepSizePow */\n      0x00\n        /* \"sosh/FuzzMath.sol\":1652:1653  7 */\n      0x07\n        /* \"sosh/FuzzMath.sol\":1632:1653  uint8 stepSizePow = 7 */\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":1667:1681  uint8 guessMSB */\n      0x00\n        /* \"sosh/FuzzMath.sol\":1684:1687  128 */\n      0x80\n        /* \"sosh/FuzzMath.sol\":1667:1687  uint8 guessMSB = 128 */\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":1701:1970  while (stepSizePow > 2) {... */\n    tag_50:\n        /* \"sosh/FuzzMath.sol\":1722:1723  2 */\n      0x02\n        /* \"sosh/FuzzMath.sol\":1708:1719  stepSizePow */\n      dup3\n        /* \"sosh/FuzzMath.sol\":1708:1723  stepSizePow > 2 */\n      0xff\n      and\n      gt\n        /* \"sosh/FuzzMath.sol\":1701:1970  while (stepSizePow > 2) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"sosh/FuzzMath.sol\":1743:1756  stepSizePow-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"sosh/FuzzMath.sol\":1792:1800  subTotal */\n      dup3\n        /* \"sosh/FuzzMath.sol\":1781:1789  guessMSB */\n      dup2\n        /* \"sosh/FuzzMath.sol\":1778:1789  1<<guessMSB */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1778:1779  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":1778:1789  1<<guessMSB */\n      swap1\n      shl\n        /* \"sosh/FuzzMath.sol\":1778:1800  1<<guessMSB > subTotal */\n      gt\n        /* \"sosh/FuzzMath.sol\":1774:1956  if (1<<guessMSB > subTotal) {... */\n      iszero\n      tag_52\n      jumpi\n        /* \"sosh/FuzzMath.sol\":1846:1857  stepSizePow */\n      dup2\n        /* \"sosh/FuzzMath.sol\":1836:1857  uint8(1)<<stepSizePow */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1842:1843  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":1836:1857  uint8(1)<<stepSizePow */\n      0xff\n      and\n      swap1\n      shl\n        /* \"sosh/FuzzMath.sol\":1824:1857  guessMSB -= uint8(1)<<stepSizePow */\n      dup2\n      sub\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":1774:1956  if (1<<guessMSB > subTotal) {... */\n      jump(tag_53)\n    tag_52:\n        /* \"sosh/FuzzMath.sol\":1926:1937  stepSizePow */\n      dup2\n        /* \"sosh/FuzzMath.sol\":1916:1937  uint8(1)<<stepSizePow */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":1922:1923  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":1916:1937  uint8(1)<<stepSizePow */\n      0xff\n      and\n      swap1\n      shl\n        /* \"sosh/FuzzMath.sol\":1904:1937  guessMSB += uint8(1)<<stepSizePow */\n      dup2\n      add\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":1774:1956  if (1<<guessMSB > subTotal) {... */\n    tag_53:\n        /* \"sosh/FuzzMath.sol\":1701:1970  while (stepSizePow > 2) {... */\n      jump(tag_50)\n    tag_51:\n        /* \"sosh/FuzzMath.sol\":2046:2047  0 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2035:2043  guessMSB */\n      dup2\n        /* \"sosh/FuzzMath.sol\":2025:2043  subTotal>>guessMSB */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":2025:2033  subTotal */\n      dup5\n        /* \"sosh/FuzzMath.sol\":2025:2043  subTotal>>guessMSB */\n      swap1\n      shr\n        /* \"sosh/FuzzMath.sol\":2025:2047  subTotal>>guessMSB > 0 */\n      gt\n        /* \"sosh/FuzzMath.sol\":2021:2230  if (subTotal>>guessMSB > 0) {... */\n      iszero\n      tag_54\n      jumpi\n        /* \"sosh/FuzzMath.sol\":2067:2107  while(subTotal>>guessMSB > 0) guessMSB++ */\n    tag_55:\n        /* \"sosh/FuzzMath.sol\":2094:2095  0 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2083:2091  guessMSB */\n      dup2\n        /* \"sosh/FuzzMath.sol\":2073:2091  subTotal>>guessMSB */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":2073:2081  subTotal */\n      dup5\n        /* \"sosh/FuzzMath.sol\":2073:2091  subTotal>>guessMSB */\n      swap1\n      shr\n        /* \"sosh/FuzzMath.sol\":2073:2095  subTotal>>guessMSB > 0 */\n      gt\n        /* \"sosh/FuzzMath.sol\":2067:2107  while(subTotal>>guessMSB > 0) guessMSB++ */\n      iszero\n      tag_56\n      jumpi\n        /* \"sosh/FuzzMath.sol\":2097:2107  guessMSB++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"sosh/FuzzMath.sol\":2067:2107  while(subTotal>>guessMSB > 0) guessMSB++ */\n      jump(tag_55)\n    tag_56:\n        /* \"sosh/FuzzMath.sol\":2021:2230  if (subTotal>>guessMSB > 0) {... */\n      jump(tag_57)\n    tag_54:\n        /* \"sosh/FuzzMath.sol\":2146:2187  while(subTotal>>guessMSB == 0) guessMSB-- */\n    tag_58:\n        /* \"sosh/FuzzMath.sol\":2174:2175  0 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2162:2170  guessMSB */\n      dup2\n        /* \"sosh/FuzzMath.sol\":2152:2170  subTotal>>guessMSB */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":2152:2160  subTotal */\n      dup5\n        /* \"sosh/FuzzMath.sol\":2152:2170  subTotal>>guessMSB */\n      swap1\n      shr\n        /* \"sosh/FuzzMath.sol\":2152:2175  subTotal>>guessMSB == 0 */\n      sub\n        /* \"sosh/FuzzMath.sol\":2146:2187  while(subTotal>>guessMSB == 0) guessMSB-- */\n      tag_59\n      jumpi\n        /* \"sosh/FuzzMath.sol\":2177:2187  guessMSB-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"sosh/FuzzMath.sol\":2146:2187  while(subTotal>>guessMSB == 0) guessMSB-- */\n      jump(tag_58)\n    tag_59:\n        /* \"sosh/FuzzMath.sol\":2205:2215  guessMSB++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"sosh/FuzzMath.sol\":2021:2230  if (subTotal>>guessMSB > 0) {... */\n    tag_57:\n        /* \"sosh/FuzzMath.sol\":2330:2348  uint expBoundGuess */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2362:2363  b */\n      dup6\n        /* \"sosh/FuzzMath.sol\":2351:2363  guessMSB / b */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":2351:2359  guessMSB */\n      dup3\n        /* \"sosh/FuzzMath.sol\":2351:2363  guessMSB / b */\n      0xff\n      and\n      dup2\n      tag_60\n      jumpi\n      tag_61\n      tag_18\n      jump\t// in\n    tag_61:\n    tag_60:\n      div\n        /* \"sosh/FuzzMath.sol\":2330:2363  uint expBoundGuess = guessMSB / b */\n      0xff\n      and\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":2411:2412  0 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2406:2407  b */\n      dup7\n        /* \"sosh/FuzzMath.sol\":2395:2407  guessMSB % b */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":2395:2403  guessMSB */\n      dup4\n        /* \"sosh/FuzzMath.sol\":2395:2407  guessMSB % b */\n      0xff\n      and\n      dup2\n      tag_62\n      jumpi\n      tag_63\n      tag_18\n      jump\t// in\n    tag_63:\n    tag_62:\n      mod\n        /* \"sosh/FuzzMath.sol\":2395:2412  guessMSB % b != 0 */\n      0xff\n      and\n      sub\n        /* \"sosh/FuzzMath.sol\":2394:2421  (guessMSB % b != 0) ? 1 : 0 */\n      tag_64\n      jumpi\n        /* \"sosh/FuzzMath.sol\":2420:2421  0 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2394:2421  (guessMSB % b != 0) ? 1 : 0 */\n      jump(tag_65)\n    tag_64:\n        /* \"sosh/FuzzMath.sol\":2416:2417  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":2394:2421  (guessMSB % b != 0) ? 1 : 0 */\n    tag_65:\n        /* \"sosh/FuzzMath.sol\":2377:2421  expBoundGuess += (guessMSB % b != 0) ? 1 : 0 */\n      0xff\n      and\n      dup2\n      add\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":2435:2441  uint z */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2465:2466  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":2448:2461  expBoundGuess */\n      dup3\n        /* \"sosh/FuzzMath.sol\":2445:2446  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":2445:2461  1<<expBoundGuess */\n      swap1\n      shl\n        /* \"sosh/FuzzMath.sol\":2444:2466  (1<<expBoundGuess) - 1 */\n      sub\n        /* \"sosh/FuzzMath.sol\":2435:2466  uint z = (1<<expBoundGuess) - 1 */\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":2486:2494  subTotal */\n      dup5\n        /* \"sosh/FuzzMath.sol\":2480:2494  ans = subTotal */\n      swap6\n      pop\n        /* \"sosh/FuzzMath.sol\":2509:2517  uint8 b2 */\n      0x00\n        /* \"sosh/FuzzMath.sol\":2524:2525  1 */\n      0x01\n        /* \"sosh/FuzzMath.sol\":2520:2521  b */\n      dup9\n        /* \"sosh/FuzzMath.sol\":2520:2525  b - 1 */\n      sub\n        /* \"sosh/FuzzMath.sol\":2509:2525  uint8 b2 = b - 1 */\n      swap1\n      pop\n        /* \"sosh/FuzzMath.sol\":2539:2648  while (z < ans) {... */\n    tag_66:\n        /* \"sosh/FuzzMath.sol\":2550:2553  ans */\n      dup7\n        /* \"sosh/FuzzMath.sol\":2546:2547  z */\n      dup3\n        /* \"sosh/FuzzMath.sol\":2546:2553  z < ans */\n      lt\n        /* \"sosh/FuzzMath.sol\":2539:2648  while (z < ans) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"sosh/FuzzMath.sol\":2579:2580  z */\n      dup2\n        /* \"sosh/FuzzMath.sol\":2573:2580  ans = z */\n      swap7\n      pop\n        /* \"sosh/FuzzMath.sol\":2632:2633  b */\n      dup8\n        /* \"sosh/FuzzMath.sol\":2602:2633  (subTotal / z**b2 + b2 * z) / b */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":2627:2628  z */\n      dup3\n        /* \"sosh/FuzzMath.sol\":2622:2624  b2 */\n      dup3\n        /* \"sosh/FuzzMath.sol\":2622:2628  b2 * z */\n      0xff\n      and\n      mul\n        /* \"sosh/FuzzMath.sol\":2617:2619  b2 */\n      dup3\n        /* \"sosh/FuzzMath.sol\":2614:2619  z**b2 */\n      0xff\n      and\n        /* \"sosh/FuzzMath.sol\":2614:2615  z */\n      dup5\n        /* \"sosh/FuzzMath.sol\":2614:2619  z**b2 */\n      exp\n        /* \"sosh/FuzzMath.sol\":2603:2611  subTotal */\n      dup9\n        /* \"sosh/FuzzMath.sol\":2603:2619  subTotal / z**b2 */\n      dup2\n      tag_68\n      jumpi\n      tag_69\n      tag_18\n      jump\t// in\n    tag_69:\n    tag_68:\n      div\n        /* \"sosh/FuzzMath.sol\":2603:2628  subTotal / z**b2 + b2 * z */\n      add\n        /* \"sosh/FuzzMath.sol\":2602:2633  (subTotal / z**b2 + b2 * z) / b */\n      dup2\n      tag_70\n      jumpi\n      tag_71\n      tag_18\n      jump\t// in\n    tag_71:\n    tag_70:\n      div\n        /* \"sosh/FuzzMath.sol\":2598:2633  z = (subTotal / z**b2 + b2 * z) / b */\n      swap2\n      pop\n        /* \"sosh/FuzzMath.sol\":2539:2648  while (z < ans) {... */\n      jump(tag_66)\n    tag_67:\n        /* \"sosh/FuzzMath.sol\":1027:2658  unchecked {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"sosh/FuzzMath.sol\":705:2664  function fraxExp(uint x, uint8 a, uint8 b) external pure returns (uint ans)  {... */\n    tag_25:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_73:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_75:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_76:\n        /* \"#utility.yul\":490:514   */\n      tag_95\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_75\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_96:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_77:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_98\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_76\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_6:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_101\n      tag_73\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":766:885   */\n    tag_100:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_102\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_77\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_78:\n        /* \"#utility.yul\":1120:1144   */\n      tag_104\n        /* \"#utility.yul\":1138:1143   */\n      dup2\n        /* \"#utility.yul\":1120:1144   */\n      tag_75\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1115:1118   */\n      dup3\n        /* \"#utility.yul\":1108:1145   */\n      mstore\n        /* \"#utility.yul\":1025:1151   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1395   */\n    tag_9:\n        /* \"#utility.yul\":1258:1262   */\n      0x00\n        /* \"#utility.yul\":1296:1298   */\n      0x20\n        /* \"#utility.yul\":1285:1294   */\n      dup3\n        /* \"#utility.yul\":1281:1299   */\n      add\n        /* \"#utility.yul\":1273:1299   */\n      swap1\n      pop\n        /* \"#utility.yul\":1309:1388   */\n      tag_106\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1374:1383   */\n      dup4\n        /* \"#utility.yul\":1370:1387   */\n      add\n        /* \"#utility.yul\":1361:1367   */\n      dup5\n        /* \"#utility.yul\":1309:1388   */\n      tag_78\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1157:1395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1487   */\n    tag_79:\n        /* \"#utility.yul\":1436:1443   */\n      0x00\n        /* \"#utility.yul\":1476:1480   */\n      0xff\n        /* \"#utility.yul\":1469:1474   */\n      dup3\n        /* \"#utility.yul\":1465:1481   */\n      and\n        /* \"#utility.yul\":1454:1481   */\n      swap1\n      pop\n        /* \"#utility.yul\":1401:1487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1493:1611   */\n    tag_80:\n        /* \"#utility.yul\":1564:1586   */\n      tag_109\n        /* \"#utility.yul\":1580:1585   */\n      dup2\n        /* \"#utility.yul\":1564:1586   */\n      tag_79\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1557:1562   */\n      dup2\n        /* \"#utility.yul\":1554:1587   */\n      eq\n        /* \"#utility.yul\":1544:1605   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1601:1602   */\n      0x00\n        /* \"#utility.yul\":1598:1599   */\n      dup1\n        /* \"#utility.yul\":1591:1603   */\n      revert\n        /* \"#utility.yul\":1544:1605   */\n    tag_110:\n        /* \"#utility.yul\":1493:1611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1617:1752   */\n    tag_81:\n        /* \"#utility.yul\":1661:1666   */\n      0x00\n        /* \"#utility.yul\":1699:1705   */\n      dup2\n        /* \"#utility.yul\":1686:1706   */\n      calldataload\n        /* \"#utility.yul\":1677:1706   */\n      swap1\n      pop\n        /* \"#utility.yul\":1715:1746   */\n      tag_112\n        /* \"#utility.yul\":1740:1745   */\n      dup2\n        /* \"#utility.yul\":1715:1746   */\n      tag_80\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1617:1752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:2369   */\n    tag_12:\n        /* \"#utility.yul\":1831:1837   */\n      0x00\n        /* \"#utility.yul\":1839:1845   */\n      dup1\n        /* \"#utility.yul\":1847:1853   */\n      0x00\n        /* \"#utility.yul\":1896:1898   */\n      0x60\n        /* \"#utility.yul\":1884:1893   */\n      dup5\n        /* \"#utility.yul\":1875:1882   */\n      dup7\n        /* \"#utility.yul\":1871:1894   */\n      sub\n        /* \"#utility.yul\":1867:1899   */\n      slt\n        /* \"#utility.yul\":1864:1983   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1902:1981   */\n      tag_115\n      tag_73\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1864:1983   */\n    tag_114:\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2047:2100   */\n      tag_116\n        /* \"#utility.yul\":2092:2099   */\n      dup7\n        /* \"#utility.yul\":2083:2089   */\n      dup3\n        /* \"#utility.yul\":2072:2081   */\n      dup8\n        /* \"#utility.yul\":2068:2090   */\n      add\n        /* \"#utility.yul\":2047:2100   */\n      tag_77\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2037:2100   */\n      swap4\n      pop\n        /* \"#utility.yul\":1993:2110   */\n      pop\n        /* \"#utility.yul\":2149:2151   */\n      0x20\n        /* \"#utility.yul\":2175:2226   */\n      tag_117\n        /* \"#utility.yul\":2218:2225   */\n      dup7\n        /* \"#utility.yul\":2209:2215   */\n      dup3\n        /* \"#utility.yul\":2198:2207   */\n      dup8\n        /* \"#utility.yul\":2194:2216   */\n      add\n        /* \"#utility.yul\":2175:2226   */\n      tag_81\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2165:2226   */\n      swap3\n      pop\n        /* \"#utility.yul\":2120:2236   */\n      pop\n        /* \"#utility.yul\":2275:2277   */\n      0x40\n        /* \"#utility.yul\":2301:2352   */\n      tag_118\n        /* \"#utility.yul\":2344:2351   */\n      dup7\n        /* \"#utility.yul\":2335:2341   */\n      dup3\n        /* \"#utility.yul\":2324:2333   */\n      dup8\n        /* \"#utility.yul\":2320:2342   */\n      add\n        /* \"#utility.yul\":2301:2352   */\n      tag_81\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2291:2352   */\n      swap2\n      pop\n        /* \"#utility.yul\":2246:2362   */\n      pop\n        /* \"#utility.yul\":1758:2369   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2375:2555   */\n    tag_18:\n        /* \"#utility.yul\":2423:2500   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2420:2421   */\n      0x00\n        /* \"#utility.yul\":2413:2501   */\n      mstore\n        /* \"#utility.yul\":2520:2524   */\n      0x12\n        /* \"#utility.yul\":2517:2518   */\n      0x04\n        /* \"#utility.yul\":2510:2525   */\n      mstore\n        /* \"#utility.yul\":2544:2548   */\n      0x24\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2534:2549   */\n      revert\n        /* \"#utility.yul\":2561:2730   */\n    tag_82:\n        /* \"#utility.yul\":2645:2656   */\n      0x00\n        /* \"#utility.yul\":2679:2685   */\n      dup3\n        /* \"#utility.yul\":2674:2677   */\n      dup3\n        /* \"#utility.yul\":2667:2686   */\n      mstore\n        /* \"#utility.yul\":2719:2723   */\n      0x20\n        /* \"#utility.yul\":2714:2717   */\n      dup3\n        /* \"#utility.yul\":2710:2724   */\n      add\n        /* \"#utility.yul\":2695:2724   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2736:2918   */\n    tag_83:\n        /* \"#utility.yul\":2876:2910   */\n      0x6e656564206578706f6e656e742064656e6f6d696e61746f722062203c203130\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2864:2870   */\n      dup3\n        /* \"#utility.yul\":2860:2874   */\n      add\n        /* \"#utility.yul\":2853:2911   */\n      mstore\n        /* \"#utility.yul\":2736:2918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2924:3290   */\n    tag_84:\n        /* \"#utility.yul\":3066:3069   */\n      0x00\n        /* \"#utility.yul\":3087:3154   */\n      tag_123\n        /* \"#utility.yul\":3151:3153   */\n      0x20\n        /* \"#utility.yul\":3146:3149   */\n      dup4\n        /* \"#utility.yul\":3087:3154   */\n      tag_82\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3080:3154   */\n      swap2\n      pop\n        /* \"#utility.yul\":3163:3256   */\n      tag_124\n        /* \"#utility.yul\":3252:3255   */\n      dup3\n        /* \"#utility.yul\":3163:3256   */\n      tag_83\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3281:3283   */\n      0x20\n        /* \"#utility.yul\":3276:3279   */\n      dup3\n        /* \"#utility.yul\":3272:3284   */\n      add\n        /* \"#utility.yul\":3265:3284   */\n      swap1\n      pop\n        /* \"#utility.yul\":2924:3290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3296:3715   */\n    tag_28:\n        /* \"#utility.yul\":3462:3466   */\n      0x00\n        /* \"#utility.yul\":3500:3502   */\n      0x20\n        /* \"#utility.yul\":3489:3498   */\n      dup3\n        /* \"#utility.yul\":3485:3503   */\n      add\n        /* \"#utility.yul\":3477:3503   */\n      swap1\n      pop\n        /* \"#utility.yul\":3549:3558   */\n      dup2\n        /* \"#utility.yul\":3543:3547   */\n      dup2\n        /* \"#utility.yul\":3539:3559   */\n      sub\n        /* \"#utility.yul\":3535:3536   */\n      0x00\n        /* \"#utility.yul\":3524:3533   */\n      dup4\n        /* \"#utility.yul\":3520:3537   */\n      add\n        /* \"#utility.yul\":3513:3560   */\n      mstore\n        /* \"#utility.yul\":3577:3708   */\n      tag_126\n        /* \"#utility.yul\":3703:3707   */\n      dup2\n        /* \"#utility.yul\":3577:3708   */\n      tag_84\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3569:3708   */\n      swap1\n      pop\n        /* \"#utility.yul\":3296:3715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3721:3901   */\n    tag_85:\n        /* \"#utility.yul\":3861:3893   */\n      0x6e656564206578706f6e656e74206e756d657261746f722061203c2031300000\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3849:3855   */\n      dup3\n        /* \"#utility.yul\":3845:3859   */\n      add\n        /* \"#utility.yul\":3838:3894   */\n      mstore\n        /* \"#utility.yul\":3721:3901   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3907:4273   */\n    tag_86:\n        /* \"#utility.yul\":4049:4052   */\n      0x00\n        /* \"#utility.yul\":4070:4137   */\n      tag_129\n        /* \"#utility.yul\":4134:4136   */\n      0x1e\n        /* \"#utility.yul\":4129:4132   */\n      dup4\n        /* \"#utility.yul\":4070:4137   */\n      tag_82\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4063:4137   */\n      swap2\n      pop\n        /* \"#utility.yul\":4146:4239   */\n      tag_130\n        /* \"#utility.yul\":4235:4238   */\n      dup3\n        /* \"#utility.yul\":4146:4239   */\n      tag_85\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4264:4266   */\n      0x20\n        /* \"#utility.yul\":4259:4262   */\n      dup3\n        /* \"#utility.yul\":4255:4267   */\n      add\n        /* \"#utility.yul\":4248:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":3907:4273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4279:4698   */\n    tag_31:\n        /* \"#utility.yul\":4445:4449   */\n      0x00\n        /* \"#utility.yul\":4483:4485   */\n      0x20\n        /* \"#utility.yul\":4472:4481   */\n      dup3\n        /* \"#utility.yul\":4468:4486   */\n      add\n        /* \"#utility.yul\":4460:4486   */\n      swap1\n      pop\n        /* \"#utility.yul\":4532:4541   */\n      dup2\n        /* \"#utility.yul\":4526:4530   */\n      dup2\n        /* \"#utility.yul\":4522:4542   */\n      sub\n        /* \"#utility.yul\":4518:4519   */\n      0x00\n        /* \"#utility.yul\":4507:4516   */\n      dup4\n        /* \"#utility.yul\":4503:4520   */\n      add\n        /* \"#utility.yul\":4496:4543   */\n      mstore\n        /* \"#utility.yul\":4560:4691   */\n      tag_132\n        /* \"#utility.yul\":4686:4690   */\n      dup2\n        /* \"#utility.yul\":4560:4691   */\n      tag_86\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4552:4691   */\n      swap1\n      pop\n        /* \"#utility.yul\":4279:4698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4704:4874   */\n    tag_87:\n        /* \"#utility.yul\":4844:4866   */\n      0x6d6178696d756d20696e70757420697320316539000000000000000000000000\n        /* \"#utility.yul\":4840:4841   */\n      0x00\n        /* \"#utility.yul\":4832:4838   */\n      dup3\n        /* \"#utility.yul\":4828:4842   */\n      add\n        /* \"#utility.yul\":4821:4867   */\n      mstore\n        /* \"#utility.yul\":4704:4874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4880:5246   */\n    tag_88:\n        /* \"#utility.yul\":5022:5025   */\n      0x00\n        /* \"#utility.yul\":5043:5110   */\n      tag_135\n        /* \"#utility.yul\":5107:5109   */\n      0x14\n        /* \"#utility.yul\":5102:5105   */\n      dup4\n        /* \"#utility.yul\":5043:5110   */\n      tag_82\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5036:5110   */\n      swap2\n      pop\n        /* \"#utility.yul\":5119:5212   */\n      tag_136\n        /* \"#utility.yul\":5208:5211   */\n      dup3\n        /* \"#utility.yul\":5119:5212   */\n      tag_87\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5237:5239   */\n      0x20\n        /* \"#utility.yul\":5232:5235   */\n      dup3\n        /* \"#utility.yul\":5228:5240   */\n      add\n        /* \"#utility.yul\":5221:5240   */\n      swap1\n      pop\n        /* \"#utility.yul\":4880:5246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5252:5671   */\n    tag_34:\n        /* \"#utility.yul\":5418:5422   */\n      0x00\n        /* \"#utility.yul\":5456:5458   */\n      0x20\n        /* \"#utility.yul\":5445:5454   */\n      dup3\n        /* \"#utility.yul\":5441:5459   */\n      add\n        /* \"#utility.yul\":5433:5459   */\n      swap1\n      pop\n        /* \"#utility.yul\":5505:5514   */\n      dup2\n        /* \"#utility.yul\":5499:5503   */\n      dup2\n        /* \"#utility.yul\":5495:5515   */\n      sub\n        /* \"#utility.yul\":5491:5492   */\n      0x00\n        /* \"#utility.yul\":5480:5489   */\n      dup4\n        /* \"#utility.yul\":5476:5493   */\n      add\n        /* \"#utility.yul\":5469:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5664   */\n      tag_138\n        /* \"#utility.yul\":5659:5663   */\n      dup2\n        /* \"#utility.yul\":5533:5664   */\n      tag_88\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5525:5664   */\n      swap1\n      pop\n        /* \"#utility.yul\":5252:5671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200a60a4546d56ee2a668ed780df922dafafd584b4d43fd08f484e4ed8be2fe34564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6106b561004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063677342ce14610043578063d2b5a37014610073575b5f80fd5b61005d60048036038101906100589190610431565b6100a3565b60405161006a919061046b565b60405180910390f35b61008d600480360381019061008891906104ba565b610100565b60405161009a919061046b565b60405180910390f35b5f8190505f600260018401816100bc576100bb61050a565b5b0490505b818110156100fa57806002828386816100dc576100db61050a565b5b0401816100ec576100eb61050a565b5b0480925081935050506100c0565b50919050565b5f600a8260ff1610610147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013e90610591565b60405180910390fd5b600a8360ff161061018d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610184906105f9565b60405180910390fd5b633b9aca0084106101d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ca90610661565b60405180910390fd5b600184116101e3578390506103f3565b5f8260ff168460ff16816101fa576101f961050a565b5b0660ff1603610226578160ff168360ff16816102195761021861050a565b5b0460ff16840a90506103f3565b5f8360ff168360ff168161023d5761023c61050a565b5b0660ff1603610264578260ff168260ff168161025c5761025b61050a565b5b049150600192505b5f60018460ff1611610276578461027d565b8360ff16850a5b905060028360ff160361029b57610293816100a3565b9150506103f3565b5f600790505f608090505b60028260ff1611156102f357818060019003925050828160ff166001901b11156102de578160ff16600160ff16901b810390506102ee565b8160ff16600160ff16901b810190505b6102a6565b5f8160ff1684901c1115610322575b5f8160ff1684901c111561031d578080600101915050610302565b610347565b5b5f8160ff1684901c0361033e57808060019003915050610323565b80806001019150505b5f8560ff168260ff168161035e5761035d61050a565b5b0460ff1690505f8660ff168360ff168161037b5761037a61050a565b5b0660ff160361038a575f61038d565b60015b60ff16810190505f6001826001901b0390508495505f6001880390505b868210156103ec578196508760ff16828260ff16028260ff16840a88816103d4576103d361050a565b5b0401816103e4576103e361050a565b5b0491506103aa565b5050505050505b9392505050565b5f80fd5b5f819050919050565b610410816103fe565b811461041a575f80fd5b50565b5f8135905061042b81610407565b92915050565b5f60208284031215610446576104456103fa565b5b5f6104538482850161041d565b91505092915050565b610465816103fe565b82525050565b5f60208201905061047e5f83018461045c565b92915050565b5f60ff82169050919050565b61049981610484565b81146104a3575f80fd5b50565b5f813590506104b481610490565b92915050565b5f805f606084860312156104d1576104d06103fa565b5b5f6104de8682870161041d565b93505060206104ef868287016104a6565b9250506040610500868287016104a6565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f82825260208201905092915050565b7f6e656564206578706f6e656e742064656e6f6d696e61746f722062203c2031305f82015250565b5f61057b602083610537565b915061058682610547565b602082019050919050565b5f6020820190508181035f8301526105a88161056f565b9050919050565b7f6e656564206578706f6e656e74206e756d657261746f722061203c20313000005f82015250565b5f6105e3601e83610537565b91506105ee826105af565b602082019050919050565b5f6020820190508181035f830152610610816105d7565b9050919050565b7f6d6178696d756d20696e707574206973203165390000000000000000000000005f82015250565b5f61064b601483610537565b915061065682610617565b602082019050919050565b5f6020820190508181035f8301526106788161063f565b905091905056fea26469706673582212200a60a4546d56ee2a668ed780df922dafafd584b4d43fd08f484e4ed8be2fe34564736f6c63430008180033",
							"opcodes": "PUSH2 0x6B5 PUSH2 0x4E PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH2 0x42 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x677342CE EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xD2B5A370 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 PUSH1 0x2 PUSH1 0x1 DUP5 ADD DUP2 PUSH2 0xBC JUMPI PUSH2 0xBB PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFA JUMPI DUP1 PUSH1 0x2 DUP3 DUP4 DUP7 DUP2 PUSH2 0xDC JUMPI PUSH2 0xDB PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV ADD DUP2 PUSH2 0xEC JUMPI PUSH2 0xEB PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0xC0 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 PUSH1 0xFF AND LT PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP4 PUSH1 0xFF AND LT PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP5 LT PUSH2 0x1D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 GT PUSH2 0x1E3 JUMPI DUP4 SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0xFF AND DUP5 PUSH1 0xFF AND DUP2 PUSH2 0x1FA JUMPI PUSH2 0x1F9 PUSH2 0x50A JUMP JUMPDEST JUMPDEST MOD PUSH1 0xFF AND SUB PUSH2 0x226 JUMPI DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP2 PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV PUSH1 0xFF AND DUP5 EXP SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP2 PUSH2 0x23D JUMPI PUSH2 0x23C PUSH2 0x50A JUMP JUMPDEST JUMPDEST MOD PUSH1 0xFF AND SUB PUSH2 0x264 JUMPI DUP3 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND DUP2 PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV SWAP2 POP PUSH1 0x1 SWAP3 POP JUMPDEST PUSH0 PUSH1 0x1 DUP5 PUSH1 0xFF AND GT PUSH2 0x276 JUMPI DUP5 PUSH2 0x27D JUMP JUMPDEST DUP4 PUSH1 0xFF AND DUP6 EXP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0xFF AND SUB PUSH2 0x29B JUMPI PUSH2 0x293 DUP2 PUSH2 0xA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3F3 JUMP JUMPDEST PUSH0 PUSH1 0x7 SWAP1 POP PUSH0 PUSH1 0x80 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x2F3 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP DUP3 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL GT ISZERO PUSH2 0x2DE JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0xFF AND SWAP1 SHL DUP2 SUB SWAP1 POP PUSH2 0x2EE JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0xFF AND SWAP1 SHL DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP5 SWAP1 SHR GT ISZERO PUSH2 0x322 JUMPI JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP5 SWAP1 SHR GT ISZERO PUSH2 0x31D JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x302 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP5 SWAP1 SHR SUB PUSH2 0x33E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH2 0x323 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP JUMPDEST PUSH0 DUP6 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND DUP2 PUSH2 0x35E JUMPI PUSH2 0x35D PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV PUSH1 0xFF AND SWAP1 POP PUSH0 DUP7 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP2 PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x50A JUMP JUMPDEST JUMPDEST MOD PUSH1 0xFF AND SUB PUSH2 0x38A JUMPI PUSH0 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 ADD SWAP1 POP PUSH0 PUSH1 0x1 DUP3 PUSH1 0x1 SWAP1 SHL SUB SWAP1 POP DUP5 SWAP6 POP PUSH0 PUSH1 0x1 DUP9 SUB SWAP1 POP JUMPDEST DUP7 DUP3 LT ISZERO PUSH2 0x3EC JUMPI DUP2 SWAP7 POP DUP8 PUSH1 0xFF AND DUP3 DUP3 PUSH1 0xFF AND MUL DUP3 PUSH1 0xFF AND DUP5 EXP DUP9 DUP2 PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV ADD DUP2 PUSH2 0x3E4 JUMPI PUSH2 0x3E3 PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV SWAP2 POP PUSH2 0x3AA JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP2 EQ PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42B DUP2 PUSH2 0x407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x3FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x453 DUP5 DUP3 DUP6 ADD PUSH2 0x41D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x465 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47E PUSH0 DUP4 ADD DUP5 PUSH2 0x45C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499 DUP2 PUSH2 0x484 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B4 DUP2 PUSH2 0x490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4DE DUP7 DUP3 DUP8 ADD PUSH2 0x41D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4EF DUP7 DUP3 DUP8 ADD PUSH2 0x4A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x500 DUP7 DUP3 DUP8 ADD PUSH2 0x4A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E656564206578706F6E656E742064656E6F6D696E61746F722062203C203130 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x57B PUSH1 0x20 DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP PUSH2 0x586 DUP3 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5A8 DUP2 PUSH2 0x56F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E656564206578706F6E656E74206E756D657261746F722061203C2031300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5E3 PUSH1 0x1E DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP PUSH2 0x5EE DUP3 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x610 DUP2 PUSH2 0x5D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6178696D756D20696E70757420697320316539000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x64B PUSH1 0x14 DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP PUSH2 0x656 DUP3 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x678 DUP2 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP PUSH1 0xA4 SLOAD PUSH14 0x56EE2A668ED780DF922DAFAFD584 0xB4 0xD4 EXTCODEHASH 0xD0 DUP16 BASEFEE 0x4E 0x4E 0xD8 0xBE 0x2F 0xE3 GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "180:3010:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@fraxExp_225": {
									"entryPoint": 256,
									"id": 225,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sqrt_268": {
									"entryPoint": 163,
									"id": 268,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint8t_uint8": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5674:1",
										"nodeType": "YulBlock",
										"src": "0:5674:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1098:53:1",
													"nodeType": "YulBlock",
													"src": "1098:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1115:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1115:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1138:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1138:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1120:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1120:17:1"
																		},
																		"nativeSrc": "1120:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1108:6:1"
																},
																"nativeSrc": "1108:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1108:37:1"
															},
															"nativeSrc": "1108:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1108:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nativeSrc": "1025:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1086:5:1",
														"nodeType": "YulTypedName",
														"src": "1086:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1093:3:1",
														"nodeType": "YulTypedName",
														"src": "1093:3:1",
														"type": ""
													}
												],
												"src": "1025:126:1"
											},
											{
												"body": {
													"nativeSrc": "1263:132:1",
													"nodeType": "YulBlock",
													"src": "1263:132:1",
													"statements": [
														{
															"nativeSrc": "1273:26:1",
															"nodeType": "YulAssignment",
															"src": "1273:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1285:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1296:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1281:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:1"
																},
																"nativeSrc": "1281:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1281:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1273:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1273:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1361:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1361:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1374:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1374:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1385:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1385:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1370:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:1"
																		},
																		"nativeSrc": "1370:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1370:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nativeSrc": "1309:51:1",
																	"nodeType": "YulIdentifier",
																	"src": "1309:51:1"
																},
																"nativeSrc": "1309:79:1",
																"nodeType": "YulFunctionCall",
																"src": "1309:79:1"
															},
															"nativeSrc": "1309:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "1309:79:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "1157:238:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1235:9:1",
														"nodeType": "YulTypedName",
														"src": "1235:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1247:6:1",
														"nodeType": "YulTypedName",
														"src": "1247:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1258:4:1",
														"nodeType": "YulTypedName",
														"src": "1258:4:1",
														"type": ""
													}
												],
												"src": "1157:238:1"
											},
											{
												"body": {
													"nativeSrc": "1444:43:1",
													"nodeType": "YulBlock",
													"src": "1444:43:1",
													"statements": [
														{
															"nativeSrc": "1454:27:1",
															"nodeType": "YulAssignment",
															"src": "1454:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1469:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1469:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1465:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1465:3:1"
																},
																"nativeSrc": "1465:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1465:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1454:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1454:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1401:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1426:5:1",
														"nodeType": "YulTypedName",
														"src": "1426:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1436:7:1",
														"nodeType": "YulTypedName",
														"src": "1436:7:1",
														"type": ""
													}
												],
												"src": "1401:86:1"
											},
											{
												"body": {
													"nativeSrc": "1534:77:1",
													"nodeType": "YulBlock",
													"src": "1534:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1589:16:1",
																"nodeType": "YulBlock",
																"src": "1589:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1598:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1601:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1601:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1591:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1591:6:1"
																			},
																			"nativeSrc": "1591:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1591:12:1"
																		},
																		"nativeSrc": "1591:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1591:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1557:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1557:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1580:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1580:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "1564:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "1564:15:1"
																				},
																				"nativeSrc": "1564:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1564:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1554:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1554:2:1"
																		},
																		"nativeSrc": "1554:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1554:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1547:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1547:6:1"
																},
																"nativeSrc": "1547:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1547:41:1"
															},
															"nativeSrc": "1544:61:1",
															"nodeType": "YulIf",
															"src": "1544:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "1493:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1527:5:1",
														"nodeType": "YulTypedName",
														"src": "1527:5:1",
														"type": ""
													}
												],
												"src": "1493:118:1"
											},
											{
												"body": {
													"nativeSrc": "1667:85:1",
													"nodeType": "YulBlock",
													"src": "1667:85:1",
													"statements": [
														{
															"nativeSrc": "1677:29:1",
															"nodeType": "YulAssignment",
															"src": "1677:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1699:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1686:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1686:12:1"
																},
																"nativeSrc": "1686:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1686:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1677:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1677:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "1715:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "1715:24:1"
																},
																"nativeSrc": "1715:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1715:31:1"
															},
															"nativeSrc": "1715:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1715:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "1617:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1645:6:1",
														"nodeType": "YulTypedName",
														"src": "1645:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1653:3:1",
														"nodeType": "YulTypedName",
														"src": "1653:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1661:5:1",
														"nodeType": "YulTypedName",
														"src": "1661:5:1",
														"type": ""
													}
												],
												"src": "1617:135:1"
											},
											{
												"body": {
													"nativeSrc": "1854:515:1",
													"nodeType": "YulBlock",
													"src": "1854:515:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1900:83:1",
																"nodeType": "YulBlock",
																"src": "1900:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1902:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1902:77:1"
																			},
																			"nativeSrc": "1902:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1902:79:1"
																		},
																		"nativeSrc": "1902:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1875:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1884:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1884:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1896:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1896:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1867:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:1"
																},
																"nativeSrc": "1867:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1867:32:1"
															},
															"nativeSrc": "1864:119:1",
															"nodeType": "YulIf",
															"src": "1864:119:1"
														},
														{
															"nativeSrc": "1993:117:1",
															"nodeType": "YulBlock",
															"src": "1993:117:1",
															"statements": [
																{
																	"nativeSrc": "2008:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2008:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2022:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2022:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2012:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2012:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2037:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2037:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2072:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2072:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2083:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2083:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2068:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2068:3:1"
																				},
																				"nativeSrc": "2068:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2068:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2092:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2092:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2047:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2047:20:1"
																		},
																		"nativeSrc": "2047:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2047:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2037:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2037:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2120:116:1",
															"nodeType": "YulBlock",
															"src": "2120:116:1",
															"statements": [
																{
																	"nativeSrc": "2135:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2135:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2149:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2149:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2139:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2139:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2165:61:1",
																	"nodeType": "YulAssignment",
																	"src": "2165:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2198:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2198:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2209:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2209:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2194:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2194:3:1"
																				},
																				"nativeSrc": "2194:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2194:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2218:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2218:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "2175:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "2175:18:1"
																		},
																		"nativeSrc": "2175:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2175:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2165:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2165:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2246:116:1",
															"nodeType": "YulBlock",
															"src": "2246:116:1",
															"statements": [
																{
																	"nativeSrc": "2261:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2261:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2275:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2265:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2265:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2291:61:1",
																	"nodeType": "YulAssignment",
																	"src": "2291:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2324:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2324:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2335:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2335:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2320:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:1"
																				},
																				"nativeSrc": "2320:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2320:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2344:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2344:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "2301:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "2301:18:1"
																		},
																		"nativeSrc": "2301:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2291:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint8t_uint8",
												"nativeSrc": "1758:611:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1808:9:1",
														"nodeType": "YulTypedName",
														"src": "1808:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1819:7:1",
														"nodeType": "YulTypedName",
														"src": "1819:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1831:6:1",
														"nodeType": "YulTypedName",
														"src": "1831:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1839:6:1",
														"nodeType": "YulTypedName",
														"src": "1839:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1847:6:1",
														"nodeType": "YulTypedName",
														"src": "1847:6:1",
														"type": ""
													}
												],
												"src": "1758:611:1"
											},
											{
												"body": {
													"nativeSrc": "2403:152:1",
													"nodeType": "YulBlock",
													"src": "2403:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2420:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2420:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2423:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2423:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2413:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:1"
																},
																"nativeSrc": "2413:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2413:88:1"
															},
															"nativeSrc": "2413:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2413:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2517:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2517:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2520:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2520:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2510:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2510:6:1"
																},
																"nativeSrc": "2510:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2510:15:1"
															},
															"nativeSrc": "2510:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2510:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2541:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2541:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2544:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2544:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2534:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2534:6:1"
																},
																"nativeSrc": "2534:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2534:15:1"
															},
															"nativeSrc": "2534:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2534:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2375:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2375:180:1"
											},
											{
												"body": {
													"nativeSrc": "2657:73:1",
													"nodeType": "YulBlock",
													"src": "2657:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2674:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2674:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2679:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2679:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:1"
																},
																"nativeSrc": "2667:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2667:19:1"
															},
															"nativeSrc": "2667:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "2667:19:1"
														},
														{
															"nativeSrc": "2695:29:1",
															"nodeType": "YulAssignment",
															"src": "2695:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2714:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2714:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2719:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2719:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2710:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2710:3:1"
																},
																"nativeSrc": "2710:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2710:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2695:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2695:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2561:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2629:3:1",
														"nodeType": "YulTypedName",
														"src": "2629:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2634:6:1",
														"nodeType": "YulTypedName",
														"src": "2634:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2645:11:1",
														"nodeType": "YulTypedName",
														"src": "2645:11:1",
														"type": ""
													}
												],
												"src": "2561:169:1"
											},
											{
												"body": {
													"nativeSrc": "2842:76:1",
													"nodeType": "YulBlock",
													"src": "2842:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2864:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2864:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2872:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2872:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2860:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2860:3:1"
																		},
																		"nativeSrc": "2860:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2860:14:1"
																	},
																	{
																		"hexValue": "6e656564206578706f6e656e742064656e6f6d696e61746f722062203c203130",
																		"kind": "string",
																		"nativeSrc": "2876:34:1",
																		"nodeType": "YulLiteral",
																		"src": "2876:34:1",
																		"type": "",
																		"value": "need exponent denominator b < 10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2853:6:1"
																},
																"nativeSrc": "2853:58:1",
																"nodeType": "YulFunctionCall",
																"src": "2853:58:1"
															},
															"nativeSrc": "2853:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "2853:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f",
												"nativeSrc": "2736:182:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2834:6:1",
														"nodeType": "YulTypedName",
														"src": "2834:6:1",
														"type": ""
													}
												],
												"src": "2736:182:1"
											},
											{
												"body": {
													"nativeSrc": "3070:220:1",
													"nodeType": "YulBlock",
													"src": "3070:220:1",
													"statements": [
														{
															"nativeSrc": "3080:74:1",
															"nodeType": "YulAssignment",
															"src": "3080:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3146:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3146:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3151:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3087:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "3087:58:1"
																},
																"nativeSrc": "3087:67:1",
																"nodeType": "YulFunctionCall",
																"src": "3087:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3080:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3252:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3252:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f",
																	"nativeSrc": "3163:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "3163:88:1"
																},
																"nativeSrc": "3163:93:1",
																"nodeType": "YulFunctionCall",
																"src": "3163:93:1"
															},
															"nativeSrc": "3163:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "3163:93:1"
														},
														{
															"nativeSrc": "3265:19:1",
															"nodeType": "YulAssignment",
															"src": "3265:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3276:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3276:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3281:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:1"
																},
																"nativeSrc": "3272:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3272:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3265:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2924:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3058:3:1",
														"nodeType": "YulTypedName",
														"src": "3058:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3066:3:1",
														"nodeType": "YulTypedName",
														"src": "3066:3:1",
														"type": ""
													}
												],
												"src": "2924:366:1"
											},
											{
												"body": {
													"nativeSrc": "3467:248:1",
													"nodeType": "YulBlock",
													"src": "3467:248:1",
													"statements": [
														{
															"nativeSrc": "3477:26:1",
															"nodeType": "YulAssignment",
															"src": "3477:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3489:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3489:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3500:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3485:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3485:3:1"
																},
																"nativeSrc": "3485:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3485:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3477:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3477:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3524:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3535:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3535:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:1"
																		},
																		"nativeSrc": "3520:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3520:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3543:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3543:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3549:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3539:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3539:3:1"
																		},
																		"nativeSrc": "3539:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3539:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3513:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3513:6:1"
																},
																"nativeSrc": "3513:47:1",
																"nodeType": "YulFunctionCall",
																"src": "3513:47:1"
															},
															"nativeSrc": "3513:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "3513:47:1"
														},
														{
															"nativeSrc": "3569:139:1",
															"nodeType": "YulAssignment",
															"src": "3569:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3703:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3703:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3577:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "3577:124:1"
																},
																"nativeSrc": "3577:131:1",
																"nodeType": "YulFunctionCall",
																"src": "3577:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3569:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3569:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3296:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3447:9:1",
														"nodeType": "YulTypedName",
														"src": "3447:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3462:4:1",
														"nodeType": "YulTypedName",
														"src": "3462:4:1",
														"type": ""
													}
												],
												"src": "3296:419:1"
											},
											{
												"body": {
													"nativeSrc": "3827:74:1",
													"nodeType": "YulBlock",
													"src": "3827:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3849:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3849:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3857:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3857:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3845:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3845:3:1"
																		},
																		"nativeSrc": "3845:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3845:14:1"
																	},
																	{
																		"hexValue": "6e656564206578706f6e656e74206e756d657261746f722061203c203130",
																		"kind": "string",
																		"nativeSrc": "3861:32:1",
																		"nodeType": "YulLiteral",
																		"src": "3861:32:1",
																		"type": "",
																		"value": "need exponent numerator a < 10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3838:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:1"
																},
																"nativeSrc": "3838:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3838:56:1"
															},
															"nativeSrc": "3838:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "3838:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a",
												"nativeSrc": "3721:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3819:6:1",
														"nodeType": "YulTypedName",
														"src": "3819:6:1",
														"type": ""
													}
												],
												"src": "3721:180:1"
											},
											{
												"body": {
													"nativeSrc": "4053:220:1",
													"nodeType": "YulBlock",
													"src": "4053:220:1",
													"statements": [
														{
															"nativeSrc": "4063:74:1",
															"nodeType": "YulAssignment",
															"src": "4063:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4129:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4129:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4134:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4070:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4070:58:1"
																},
																"nativeSrc": "4070:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4070:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4063:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4063:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4235:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4235:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a",
																	"nativeSrc": "4146:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "4146:88:1"
																},
																"nativeSrc": "4146:93:1",
																"nodeType": "YulFunctionCall",
																"src": "4146:93:1"
															},
															"nativeSrc": "4146:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "4146:93:1"
														},
														{
															"nativeSrc": "4248:19:1",
															"nodeType": "YulAssignment",
															"src": "4248:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4259:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4259:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4264:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4264:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4255:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4255:3:1"
																},
																"nativeSrc": "4255:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4255:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4248:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4248:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3907:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4041:3:1",
														"nodeType": "YulTypedName",
														"src": "4041:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4049:3:1",
														"nodeType": "YulTypedName",
														"src": "4049:3:1",
														"type": ""
													}
												],
												"src": "3907:366:1"
											},
											{
												"body": {
													"nativeSrc": "4450:248:1",
													"nodeType": "YulBlock",
													"src": "4450:248:1",
													"statements": [
														{
															"nativeSrc": "4460:26:1",
															"nodeType": "YulAssignment",
															"src": "4460:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4472:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4472:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4483:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4483:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:1"
																},
																"nativeSrc": "4468:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4468:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4460:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4460:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4507:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4507:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4518:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4518:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4503:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:1"
																		},
																		"nativeSrc": "4503:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4526:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4526:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4532:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4522:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:1"
																		},
																		"nativeSrc": "4522:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4522:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:1"
																},
																"nativeSrc": "4496:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4496:47:1"
															},
															"nativeSrc": "4496:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4496:47:1"
														},
														{
															"nativeSrc": "4552:139:1",
															"nodeType": "YulAssignment",
															"src": "4552:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4686:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4686:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4560:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "4560:124:1"
																},
																"nativeSrc": "4560:131:1",
																"nodeType": "YulFunctionCall",
																"src": "4560:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4552:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4552:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4279:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4430:9:1",
														"nodeType": "YulTypedName",
														"src": "4430:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4445:4:1",
														"nodeType": "YulTypedName",
														"src": "4445:4:1",
														"type": ""
													}
												],
												"src": "4279:419:1"
											},
											{
												"body": {
													"nativeSrc": "4810:64:1",
													"nodeType": "YulBlock",
													"src": "4810:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4832:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4832:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4840:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4840:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4828:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:1"
																		},
																		"nativeSrc": "4828:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:14:1"
																	},
																	{
																		"hexValue": "6d6178696d756d20696e70757420697320316539",
																		"kind": "string",
																		"nativeSrc": "4844:22:1",
																		"nodeType": "YulLiteral",
																		"src": "4844:22:1",
																		"type": "",
																		"value": "maximum input is 1e9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:1"
																},
																"nativeSrc": "4821:46:1",
																"nodeType": "YulFunctionCall",
																"src": "4821:46:1"
															},
															"nativeSrc": "4821:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "4821:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f",
												"nativeSrc": "4704:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4802:6:1",
														"nodeType": "YulTypedName",
														"src": "4802:6:1",
														"type": ""
													}
												],
												"src": "4704:170:1"
											},
											{
												"body": {
													"nativeSrc": "5026:220:1",
													"nodeType": "YulBlock",
													"src": "5026:220:1",
													"statements": [
														{
															"nativeSrc": "5036:74:1",
															"nodeType": "YulAssignment",
															"src": "5036:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5102:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5102:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5107:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5043:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "5043:58:1"
																},
																"nativeSrc": "5043:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5043:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5036:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5208:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5208:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f",
																	"nativeSrc": "5119:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "5119:88:1"
																},
																"nativeSrc": "5119:93:1",
																"nodeType": "YulFunctionCall",
																"src": "5119:93:1"
															},
															"nativeSrc": "5119:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "5119:93:1"
														},
														{
															"nativeSrc": "5221:19:1",
															"nodeType": "YulAssignment",
															"src": "5221:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5232:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5232:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5237:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5237:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5228:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5228:3:1"
																},
																"nativeSrc": "5228:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5228:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4880:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5014:3:1",
														"nodeType": "YulTypedName",
														"src": "5014:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5022:3:1",
														"nodeType": "YulTypedName",
														"src": "5022:3:1",
														"type": ""
													}
												],
												"src": "4880:366:1"
											},
											{
												"body": {
													"nativeSrc": "5423:248:1",
													"nodeType": "YulBlock",
													"src": "5423:248:1",
													"statements": [
														{
															"nativeSrc": "5433:26:1",
															"nodeType": "YulAssignment",
															"src": "5433:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5445:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5445:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5456:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5456:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5441:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5441:3:1"
																},
																"nativeSrc": "5441:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5441:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5433:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5433:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5480:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5480:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5491:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5491:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5476:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5476:3:1"
																		},
																		"nativeSrc": "5476:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5476:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5499:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5499:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5505:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5505:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5495:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5495:3:1"
																		},
																		"nativeSrc": "5495:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5469:6:1"
																},
																"nativeSrc": "5469:47:1",
																"nodeType": "YulFunctionCall",
																"src": "5469:47:1"
															},
															"nativeSrc": "5469:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "5469:47:1"
														},
														{
															"nativeSrc": "5525:139:1",
															"nodeType": "YulAssignment",
															"src": "5525:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5659:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5659:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5533:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "5533:124:1"
																},
																"nativeSrc": "5533:131:1",
																"nodeType": "YulFunctionCall",
																"src": "5533:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5525:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5252:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5403:9:1",
														"nodeType": "YulTypedName",
														"src": "5403:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5418:4:1",
														"nodeType": "YulTypedName",
														"src": "5418:4:1",
														"type": ""
													}
												],
												"src": "5252:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f(memPtr) {\n\n        mstore(add(memPtr, 0), \"need exponent denominator b < 10\")\n\n    }\n\n    function abi_encode_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a(memPtr) {\n\n        mstore(add(memPtr, 0), \"need exponent numerator a < 10\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"maximum input is 1e9\")\n\n    }\n\n    function abi_encode_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063677342ce14610043578063d2b5a37014610073575b5f80fd5b61005d60048036038101906100589190610431565b6100a3565b60405161006a919061046b565b60405180910390f35b61008d600480360381019061008891906104ba565b610100565b60405161009a919061046b565b60405180910390f35b5f8190505f600260018401816100bc576100bb61050a565b5b0490505b818110156100fa57806002828386816100dc576100db61050a565b5b0401816100ec576100eb61050a565b5b0480925081935050506100c0565b50919050565b5f600a8260ff1610610147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013e90610591565b60405180910390fd5b600a8360ff161061018d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610184906105f9565b60405180910390fd5b633b9aca0084106101d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ca90610661565b60405180910390fd5b600184116101e3578390506103f3565b5f8260ff168460ff16816101fa576101f961050a565b5b0660ff1603610226578160ff168360ff16816102195761021861050a565b5b0460ff16840a90506103f3565b5f8360ff168360ff168161023d5761023c61050a565b5b0660ff1603610264578260ff168260ff168161025c5761025b61050a565b5b049150600192505b5f60018460ff1611610276578461027d565b8360ff16850a5b905060028360ff160361029b57610293816100a3565b9150506103f3565b5f600790505f608090505b60028260ff1611156102f357818060019003925050828160ff166001901b11156102de578160ff16600160ff16901b810390506102ee565b8160ff16600160ff16901b810190505b6102a6565b5f8160ff1684901c1115610322575b5f8160ff1684901c111561031d578080600101915050610302565b610347565b5b5f8160ff1684901c0361033e57808060019003915050610323565b80806001019150505b5f8560ff168260ff168161035e5761035d61050a565b5b0460ff1690505f8660ff168360ff168161037b5761037a61050a565b5b0660ff160361038a575f61038d565b60015b60ff16810190505f6001826001901b0390508495505f6001880390505b868210156103ec578196508760ff16828260ff16028260ff16840a88816103d4576103d361050a565b5b0401816103e4576103e361050a565b5b0491506103aa565b5050505050505b9392505050565b5f80fd5b5f819050919050565b610410816103fe565b811461041a575f80fd5b50565b5f8135905061042b81610407565b92915050565b5f60208284031215610446576104456103fa565b5b5f6104538482850161041d565b91505092915050565b610465816103fe565b82525050565b5f60208201905061047e5f83018461045c565b92915050565b5f60ff82169050919050565b61049981610484565b81146104a3575f80fd5b50565b5f813590506104b481610490565b92915050565b5f805f606084860312156104d1576104d06103fa565b5b5f6104de8682870161041d565b93505060206104ef868287016104a6565b9250506040610500868287016104a6565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f82825260208201905092915050565b7f6e656564206578706f6e656e742064656e6f6d696e61746f722062203c2031305f82015250565b5f61057b602083610537565b915061058682610547565b602082019050919050565b5f6020820190508181035f8301526105a88161056f565b9050919050565b7f6e656564206578706f6e656e74206e756d657261746f722061203c20313000005f82015250565b5f6105e3601e83610537565b91506105ee826105af565b602082019050919050565b5f6020820190508181035f830152610610816105d7565b9050919050565b7f6d6178696d756d20696e707574206973203165390000000000000000000000005f82015250565b5f61064b601483610537565b915061065682610617565b602082019050919050565b5f6020820190508181035f8301526106788161063f565b905091905056fea26469706673582212200a60a4546d56ee2a668ed780df922dafafd584b4d43fd08f484e4ed8be2fe34564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x677342CE EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xD2B5A370 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 PUSH1 0x2 PUSH1 0x1 DUP5 ADD DUP2 PUSH2 0xBC JUMPI PUSH2 0xBB PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFA JUMPI DUP1 PUSH1 0x2 DUP3 DUP4 DUP7 DUP2 PUSH2 0xDC JUMPI PUSH2 0xDB PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV ADD DUP2 PUSH2 0xEC JUMPI PUSH2 0xEB PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0xC0 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 PUSH1 0xFF AND LT PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP4 PUSH1 0xFF AND LT PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184 SWAP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP5 LT PUSH2 0x1D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 GT PUSH2 0x1E3 JUMPI DUP4 SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0xFF AND DUP5 PUSH1 0xFF AND DUP2 PUSH2 0x1FA JUMPI PUSH2 0x1F9 PUSH2 0x50A JUMP JUMPDEST JUMPDEST MOD PUSH1 0xFF AND SUB PUSH2 0x226 JUMPI DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP2 PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV PUSH1 0xFF AND DUP5 EXP SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP2 PUSH2 0x23D JUMPI PUSH2 0x23C PUSH2 0x50A JUMP JUMPDEST JUMPDEST MOD PUSH1 0xFF AND SUB PUSH2 0x264 JUMPI DUP3 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND DUP2 PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV SWAP2 POP PUSH1 0x1 SWAP3 POP JUMPDEST PUSH0 PUSH1 0x1 DUP5 PUSH1 0xFF AND GT PUSH2 0x276 JUMPI DUP5 PUSH2 0x27D JUMP JUMPDEST DUP4 PUSH1 0xFF AND DUP6 EXP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0xFF AND SUB PUSH2 0x29B JUMPI PUSH2 0x293 DUP2 PUSH2 0xA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3F3 JUMP JUMPDEST PUSH0 PUSH1 0x7 SWAP1 POP PUSH0 PUSH1 0x80 SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x2F3 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP DUP3 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL GT ISZERO PUSH2 0x2DE JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0xFF AND SWAP1 SHL DUP2 SUB SWAP1 POP PUSH2 0x2EE JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1 PUSH1 0xFF AND SWAP1 SHL DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP5 SWAP1 SHR GT ISZERO PUSH2 0x322 JUMPI JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP5 SWAP1 SHR GT ISZERO PUSH2 0x31D JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x302 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP5 SWAP1 SHR SUB PUSH2 0x33E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH2 0x323 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP JUMPDEST PUSH0 DUP6 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND DUP2 PUSH2 0x35E JUMPI PUSH2 0x35D PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV PUSH1 0xFF AND SWAP1 POP PUSH0 DUP7 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND DUP2 PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x50A JUMP JUMPDEST JUMPDEST MOD PUSH1 0xFF AND SUB PUSH2 0x38A JUMPI PUSH0 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 ADD SWAP1 POP PUSH0 PUSH1 0x1 DUP3 PUSH1 0x1 SWAP1 SHL SUB SWAP1 POP DUP5 SWAP6 POP PUSH0 PUSH1 0x1 DUP9 SUB SWAP1 POP JUMPDEST DUP7 DUP3 LT ISZERO PUSH2 0x3EC JUMPI DUP2 SWAP7 POP DUP8 PUSH1 0xFF AND DUP3 DUP3 PUSH1 0xFF AND MUL DUP3 PUSH1 0xFF AND DUP5 EXP DUP9 DUP2 PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV ADD DUP2 PUSH2 0x3E4 JUMPI PUSH2 0x3E3 PUSH2 0x50A JUMP JUMPDEST JUMPDEST DIV SWAP2 POP PUSH2 0x3AA JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP2 EQ PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42B DUP2 PUSH2 0x407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x3FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x453 DUP5 DUP3 DUP6 ADD PUSH2 0x41D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x465 DUP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47E PUSH0 DUP4 ADD DUP5 PUSH2 0x45C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499 DUP2 PUSH2 0x484 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B4 DUP2 PUSH2 0x490 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4DE DUP7 DUP3 DUP8 ADD PUSH2 0x41D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4EF DUP7 DUP3 DUP8 ADD PUSH2 0x4A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x500 DUP7 DUP3 DUP8 ADD PUSH2 0x4A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E656564206578706F6E656E742064656E6F6D696E61746F722062203C203130 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x57B PUSH1 0x20 DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP PUSH2 0x586 DUP3 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5A8 DUP2 PUSH2 0x56F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E656564206578706F6E656E74206E756D657261746F722061203C2031300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5E3 PUSH1 0x1E DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP PUSH2 0x5EE DUP3 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x610 DUP2 PUSH2 0x5D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6178696D756D20696E70757420697320316539000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x64B PUSH1 0x14 DUP4 PUSH2 0x537 JUMP JUMPDEST SWAP2 POP PUSH2 0x656 DUP3 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x678 DUP2 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP PUSH1 0xA4 SLOAD PUSH14 0x56EE2A668ED780DF922DAFAFD584 0xB4 0xD4 EXTCODEHASH 0xD0 DUP16 BASEFEE 0x4E 0x4E 0xD8 0xBE 0x2F 0xE3 GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "180:3010:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2903:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;705:1959;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2903:285;2946:8;2996:1;2990:7;;3011:8;3032:1;3027;3023;:5;3022:11;;;;;:::i;:::-;;;3011:22;;3082:90;3095:3;3089;:9;3082:90;;;3132:3;3155:1;3148:3;3142;3138:1;:7;;;;;:::i;:::-;;;:13;3137:19;;;;;:::i;:::-;;;3118:39;;;;;;;;3082:90;;;2966:216;2903:285;;;:::o;705:1959::-;771:8;861:2;857:1;:6;;;849:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;922:2;918:1;:6;;;910:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;981:10;977:1;:14;969:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1133:1;1128;:6;1124:20;;1143:1;1136:8;;;;1124:20;1171:1;1166;1162:5;;:1;:5;;;;;;;:::i;:::-;;;:10;;;1158:35;;1191:1;1187:5;;:1;:5;;;;;;;:::i;:::-;;;1181:12;;:1;:12;1174:19;;;;1158:35;1220:1;1215;1211:5;;:1;:5;;;;;;;:::i;:::-;;;:10;;;1207:82;;1250:1;1246:5;;:1;:5;;;;;;;:::i;:::-;;;1242:9;;1273:1;1269:5;;1207:82;1302:13;1323:1;1319;:5;;;1318:18;;1335:1;1318:18;;;1331:1;1328:4;;:1;:4;1318:18;1302:34;;1414:1;1409;:6;;;1405:33;;1424:14;1429:8;1424:4;:14::i;:::-;1417:21;;;;;1405:33;1632:17;1652:1;1632:21;;1667:14;1684:3;1667:20;;1701:269;1722:1;1708:11;:15;;;1701:269;;;1743:13;;;;;;;;1792:8;1781;1778:11;;:1;:11;;:22;1774:182;;;1846:11;1836:21;;1842:1;1836:21;;;;1824:33;;;;1774:182;;;1926:11;1916:21;;1922:1;1916:21;;;;1904:33;;;;1774:182;1701:269;;;2046:1;2035:8;2025:18;;:8;:18;;:22;2021:209;;;2067:40;2094:1;2083:8;2073:18;;:8;:18;;:22;2067:40;;;2097:10;;;;;;;2067:40;;;2021:209;;;2146:41;2174:1;2162:8;2152:18;;:8;:18;;:23;2146:41;;2177:10;;;;;;;;2146:41;;;2205:10;;;;;;;2021:209;2330:18;2362:1;2351:12;;:8;:12;;;;;;;:::i;:::-;;;2330:33;;;;2411:1;2406;2395:12;;:8;:12;;;;;;;:::i;:::-;;;:17;;;2394:27;;2420:1;2394:27;;;2416:1;2394:27;2377:44;;;;;;2435:6;2465:1;2448:13;2445:1;:16;;2444:22;2435:31;;2486:8;2480:14;;2509:8;2524:1;2520;:5;2509:16;;2539:109;2550:3;2546:1;:7;2539:109;;;2579:1;2573:7;;2632:1;2602:31;;2627:1;2622:2;:6;;;2617:2;2614:5;;:1;:5;2603:8;:16;;;;;:::i;:::-;;;:25;2602:31;;;;;:::i;:::-;;;2598:35;;2539:109;;;1027:1631;;;;;;705:1959;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1120:24;1138:5;1120:24;:::i;:::-;1115:3;1108:37;1025:126;;:::o;1157:238::-;1258:4;1296:2;1285:9;1281:18;1273:26;;1309:79;1385:1;1374:9;1370:17;1361:6;1309:79;:::i;:::-;1157:238;;;;:::o;1401:86::-;1436:7;1476:4;1469:5;1465:16;1454:27;;1401:86;;;:::o;1493:118::-;1564:22;1580:5;1564:22;:::i;:::-;1557:5;1554:33;1544:61;;1601:1;1598;1591:12;1544:61;1493:118;:::o;1617:135::-;1661:5;1699:6;1686:20;1677:29;;1715:31;1740:5;1715:31;:::i;:::-;1617:135;;;;:::o;1758:611::-;1831:6;1839;1847;1896:2;1884:9;1875:7;1871:23;1867:32;1864:119;;;1902:79;;:::i;:::-;1864:119;2022:1;2047:53;2092:7;2083:6;2072:9;2068:22;2047:53;:::i;:::-;2037:63;;1993:117;2149:2;2175:51;2218:7;2209:6;2198:9;2194:22;2175:51;:::i;:::-;2165:61;;2120:116;2275:2;2301:51;2344:7;2335:6;2324:9;2320:22;2301:51;:::i;:::-;2291:61;;2246:116;1758:611;;;;;:::o;2375:180::-;2423:77;2420:1;2413:88;2520:4;2517:1;2510:15;2544:4;2541:1;2534:15;2561:169;2645:11;2679:6;2674:3;2667:19;2719:4;2714:3;2710:14;2695:29;;2561:169;;;;:::o;2736:182::-;2876:34;2872:1;2864:6;2860:14;2853:58;2736:182;:::o;2924:366::-;3066:3;3087:67;3151:2;3146:3;3087:67;:::i;:::-;3080:74;;3163:93;3252:3;3163:93;:::i;:::-;3281:2;3276:3;3272:12;3265:19;;2924:366;;;:::o;3296:419::-;3462:4;3500:2;3489:9;3485:18;3477:26;;3549:9;3543:4;3539:20;3535:1;3524:9;3520:17;3513:47;3577:131;3703:4;3577:131;:::i;:::-;3569:139;;3296:419;;;:::o;3721:180::-;3861:32;3857:1;3849:6;3845:14;3838:56;3721:180;:::o;3907:366::-;4049:3;4070:67;4134:2;4129:3;4070:67;:::i;:::-;4063:74;;4146:93;4235:3;4146:93;:::i;:::-;4264:2;4259:3;4255:12;4248:19;;3907:366;;;:::o;4279:419::-;4445:4;4483:2;4472:9;4468:18;4460:26;;4532:9;4526:4;4522:20;4518:1;4507:9;4503:17;4496:47;4560:131;4686:4;4560:131;:::i;:::-;4552:139;;4279:419;;;:::o;4704:170::-;4844:22;4840:1;4832:6;4828:14;4821:46;4704:170;:::o;4880:366::-;5022:3;5043:67;5107:2;5102:3;5043:67;:::i;:::-;5036:74;;5119:93;5208:3;5119:93;:::i;:::-;5237:2;5232:3;5228:12;5221:19;;4880:366;;;:::o;5252:419::-;5418:4;5456:2;5445:9;5441:18;5433:26;;5505:9;5499:4;5495:20;5491:1;5480:9;5476:17;5469:47;5533:131;5659:4;5533:131;:::i;:::-;5525:139;;5252:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "343400",
								"executionCost": "403",
								"totalCost": "343803"
							},
							"external": {
								"fraxExp(uint256,uint8,uint8)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 180,
									"end": 3190,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a60a4546d56ee2a668ed780df922dafafd584b4d43fd08f484e4ed8be2fe34564736f6c63430008180033",
									".code": [
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "677342CE"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "D2B5A370"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 3190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2903,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2903,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2903,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 705,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 705,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 705,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3022,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3138,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3137,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 3182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 771,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 857,
											"end": 858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 857,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 857,
											"end": 863,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 849,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 849,
											"end": 900,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 849,
											"end": 900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 918,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 918,
											"end": 924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 924,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 910,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 910,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 910,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 991,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 977,
											"end": 978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 977,
											"end": 991,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 969,
											"end": 1016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 969,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1124,
											"end": 1144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1136,
											"end": 1144,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1124,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1162,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1187,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1182,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1174,
											"end": 1193,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1158,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1211,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1211,
											"end": 1221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1207,
											"end": 1289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1246,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1289,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1207,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1405,
											"end": 1438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1429,
											"end": 1437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1424,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1438,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1424,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1417,
											"end": 1438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1438,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1405,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1632,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1667,
											"end": 1687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1667,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1708,
											"end": 1719,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1708,
											"end": 1723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1723,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1778,
											"end": 1789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1778,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1789,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1800,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1857,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1836,
											"end": 1857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1836,
											"end": 1857,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1836,
											"end": 1857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1857,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 1937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 1937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 1937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1904,
											"end": 1937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1774,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1701,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2047,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2091,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2095,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2067,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2146,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2021,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2351,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2330,
											"end": 2363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2395,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2395,
											"end": 2412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2394,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2421,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2377,
											"end": 2421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2448,
											"end": 2461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2445,
											"end": 2461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2461,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2494,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2553,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2553,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2580,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2603,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2602,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2633,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 2658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 2658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 2658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 2658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 2658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 2658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 2664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1138,
											"end": 1143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1120,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1309,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1487,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1401,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1469,
											"end": 1474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1487,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1611,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1493,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1580,
											"end": 1585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1564,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1587,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1544,
											"end": 1605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1544,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1617,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1715,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1758,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1882,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1899,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1864,
											"end": 1983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1902,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1902,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1981,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1902,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1983,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1864,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2047,
											"end": 2100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2100,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2149,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2175,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2175,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2344,
											"end": 2351,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2301,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2301,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 2369,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 2369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 2369,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 2369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 2369,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2555,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2375,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2500,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2561,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2918,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2736,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "6E656564206578706F6E656E742064656E6F6D696E61746F722062203C203130"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3146,
											"end": 3149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3087,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3252,
											"end": 3255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3163,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 3290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3559,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3577,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3901,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3721,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "6E656564206578706F6E656E74206E756D657261746F722061203C2031300000"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 4273,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3907,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 4129,
											"end": 4132,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4070,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4070,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4235,
											"end": 4238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4146,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4239,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4146,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 4273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 4273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 4273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 4273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4698,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4279,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4522,
											"end": 4542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4560,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4686,
											"end": 4690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4560,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4560,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4560,
											"end": 4691,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4560,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4874,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4704,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "6D6178696D756D20696E70757420697320316539000000000000000000000000"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 5246,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4880,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5107,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5102,
											"end": 5105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5043,
											"end": 5110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5110,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5043,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5036,
											"end": 5110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5036,
											"end": 5110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5208,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5119,
											"end": 5212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5212,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5119,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 5246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 5246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 5246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 5246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5671,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5252,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5515,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5659,
											"end": 5663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5533,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5664,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5533,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"sosh/FuzzMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"fraxExp(uint256,uint8,uint8)": "d2b5a370",
							"sqrt(uint256)": "677342ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"a\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"b\",\"type\":\"uint8\"}],\"name\":\"fraxExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ans\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"sqrt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ans\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"provides some functions for maths that are illegal under solidity rules\",\"kind\":\"dev\",\"methods\":{\"fraxExp(uint256,uint8,uint8)\":{\"details\":\"estimates the equation f(x) = x^(a/b)^ does so by calculating subtotal x^a^ and iterating to the b-root of that subtotal using a generalized form of the Babylonian Method (rounded down to nearest whole #) https://www.researchgate.net/publication/237415858_EXTENDING_THE_BABYLONIAN_ALGORITHM e NOTE: greater inputs could be considered if this function were used to estimate exponential mappings with a limited number of sig-figs\"},\"sqrt(uint256)\":{\"details\":\"estimates the square root of an input using Babylonian Method (not much more performant on large numbers, due to lack of tight est bounding) https://www.cs.utep.edu/vladik/2009/olg09-05a.pdf\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sosh/FuzzMath.sol\":\"FuzzyMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sosh/FuzzMath.sol\":{\"keccak256\":\"0x2fae14d80f16865daece3616a17235e0ea86be2a6b19f0bb05e4d7060b1a71de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c57682bd999d8846b065321619b01e7bc5f3cde7d1691477cc3d4fdb4d81d69\",\"dweb:/ipfs/QmUEEZQY9FhDmsCbHT54rXQYzvFAATbPcRF3P9izsJZBHm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"sosh/FuzzMath.sol": {
				"ast": {
					"absolutePath": "sosh/FuzzMath.sol",
					"exportedSymbols": {
						"FuzzyMath": [
							269
						]
					},
					"id": 270,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FuzzyMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "92:87:0",
								"text": " @dev provides some functions for maths that are illegal under solidity rules"
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "FuzzyMath",
							"nameLocation": "188:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "782:1882:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 15,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "857:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "861:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "857:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e656564206578706f6e656e742064656e6f6d696e61746f722062203c203130",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "865:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f",
																"typeString": "literal_string \"need exponent denominator b < 10\""
															},
															"value": "need exponent denominator b < 10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93a3f9cfe7454756a3ccc849083d8118872b34028ec1bec74d1f9e3c29bde60f",
																"typeString": "literal_string \"need exponent denominator b < 10\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "849:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "849:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "918:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "922:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "918:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e656564206578706f6e656e74206e756d657261746f722061203c203130",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "926:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a",
																"typeString": "literal_string \"need exponent numerator a < 10\""
															},
															"value": "need exponent numerator a < 10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d5f6cacf147afd815e3839674ce675602cedecc030b6ab8bf956831bccab23a",
																"typeString": "literal_string \"need exponent numerator a < 10\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "910:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "910:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 29,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "977:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030303030303030",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															},
															"src": "977:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6178696d756d20696e70757420697320316539",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "993:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f",
																"typeString": "literal_string \"maximum input is 1e9\""
															},
															"value": "maximum input is 1e9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7070e20ecf9a27ce3c2f6fb445f97916cc110d8a44b1f33a877b086cbe227f9f",
																"typeString": "literal_string \"maximum input is 1e9\""
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "969:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "969:47:0"
											},
											{
												"id": 223,
												"nodeType": "UncheckedBlock",
												"src": "1027:1631:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 35,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1128:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 40,
														"nodeType": "IfStatement",
														"src": "1124:20:0",
														"trueBody": {
															"expression": {
																"id": 38,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1143:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 13,
															"id": 39,
															"nodeType": "Return",
															"src": "1136:8:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 41,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 42,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1166:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1162:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1171:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1162:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1158:35:0",
														"trueBody": {
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 46,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1181:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 49,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 47,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "1187:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 48,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "1191:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1187:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 50,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1186:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1181:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 13,
															"id": 52,
															"nodeType": "Return",
															"src": "1174:19:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 54,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1211:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 55,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1211:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1220:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1211:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 70,
														"nodeType": "IfStatement",
														"src": "1207:82:0",
														"trueBody": {
															"id": 69,
															"nodeType": "Block",
															"src": "1223:66:0",
															"statements": [
																{
																	"expression": {
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 59,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "1242:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 62,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 60,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "1246:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 61,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "1250:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1246:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "1242:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 64,
																	"nodeType": "ExpressionStatement",
																	"src": "1242:9:0"
																},
																{
																	"expression": {
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 65,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "1269:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1273:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1269:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 68,
																	"nodeType": "ExpressionStatement",
																	"src": "1269:5:0"
																}
															]
														}
													},
													{
														"assignments": [
															72
														],
														"declarations": [
															{
																"constant": false,
																"id": 72,
																"mutability": "mutable",
																"name": "subTotal",
																"nameLocation": "1307:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 223,
																"src": "1302:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 71,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "1302:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 82,
														"initialValue": {
															"condition": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 75,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 73,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "1319:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 74,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1323:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1319:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 76,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 80,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1318:18:0",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 77,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 78,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1331:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1328:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1302:34:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1409:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1414:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1409:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 90,
														"nodeType": "IfStatement",
														"src": "1405:33:0",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"id": 87,
																		"name": "subTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "1429:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 86,
																	"name": "sqrt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "1424:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1424:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 13,
															"id": 89,
															"nodeType": "Return",
															"src": "1417:21:0"
														}
													},
													{
														"assignments": [
															92
														],
														"declarations": [
															{
																"constant": false,
																"id": 92,
																"mutability": "mutable",
																"name": "stepSizePow",
																"nameLocation": "1638:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 223,
																"src": "1632:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 91,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1632:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 94,
														"initialValue": {
															"hexValue": "37",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1632:21:0"
													},
													{
														"assignments": [
															96
														],
														"declarations": [
															{
																"constant": false,
																"id": 96,
																"mutability": "mutable",
																"name": "guessMSB",
																"nameLocation": "1673:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 223,
																"src": "1667:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 95,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "1667:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 98,
														"initialValue": {
															"hexValue": "313238",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1684:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1667:20:0"
													},
													{
														"body": {
															"id": 131,
															"nodeType": "Block",
															"src": "1725:245:0",
															"statements": [
																{
																	"expression": {
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1743:13:0",
																		"subExpression": {
																			"id": 102,
																			"name": "stepSizePow",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 92,
																			"src": "1743:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 104,
																	"nodeType": "ExpressionStatement",
																	"src": "1743:13:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1778:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 106,
																				"name": "guessMSB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "1781:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1778:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 108,
																			"name": "subTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 72,
																			"src": "1792:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1778:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 129,
																		"nodeType": "Block",
																		"src": "1882:74:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 120,
																						"name": "guessMSB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "1904:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"hexValue": "31",
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1922:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									}
																								],
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "1916:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint8_$",
																									"typeString": "type(uint8)"
																								},
																								"typeName": {
																									"id": 121,
																									"name": "uint8",
																									"nodeType": "ElementaryTypeName",
																									"src": "1916:5:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 124,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1916:8:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 125,
																							"name": "stepSizePow",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 92,
																							"src": "1926:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "1916:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "1904:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 128,
																				"nodeType": "ExpressionStatement",
																				"src": "1904:33:0"
																			}
																		]
																	},
																	"id": 130,
																	"nodeType": "IfStatement",
																	"src": "1774:182:0",
																	"trueBody": {
																		"id": 119,
																		"nodeType": "Block",
																		"src": "1802:74:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 110,
																						"name": "guessMSB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "1824:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"hexValue": "31",
																									"id": 113,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1842:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									}
																								],
																								"id": 112,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "1836:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint8_$",
																									"typeString": "type(uint8)"
																								},
																								"typeName": {
																									"id": 111,
																									"name": "uint8",
																									"nodeType": "ElementaryTypeName",
																									"src": "1836:5:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 114,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1836:8:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 115,
																							"name": "stepSizePow",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 92,
																							"src": "1846:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "1836:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "1824:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 118,
																				"nodeType": "ExpressionStatement",
																				"src": "1824:33:0"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "stepSizePow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "1708:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "32",
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1708:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 132,
														"nodeType": "WhileStatement",
														"src": "1701:269:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 133,
																	"name": "subTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2025:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 134,
																	"name": "guessMSB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2035:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2025:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2046:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 160,
															"nodeType": "Block",
															"src": "2128:102:0",
															"statements": [
																{
																	"body": {
																		"expression": {
																			"id": 154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "2177:10:0",
																			"subExpression": {
																				"id": 153,
																				"name": "guessMSB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2177:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 155,
																		"nodeType": "ExpressionStatement",
																		"src": "2177:10:0"
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 148,
																				"name": "subTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "2152:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 149,
																				"name": "guessMSB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2162:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2152:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2174:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2152:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 156,
																	"nodeType": "WhileStatement",
																	"src": "2146:41:0"
																},
																{
																	"expression": {
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "2205:10:0",
																		"subExpression": {
																			"id": 157,
																			"name": "guessMSB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "2205:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 159,
																	"nodeType": "ExpressionStatement",
																	"src": "2205:10:0"
																}
															]
														},
														"id": 161,
														"nodeType": "IfStatement",
														"src": "2021:209:0",
														"trueBody": {
															"id": 147,
															"nodeType": "Block",
															"src": "2049:73:0",
															"statements": [
																{
																	"body": {
																		"expression": {
																			"id": 144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2097:10:0",
																			"subExpression": {
																				"id": 143,
																				"name": "guessMSB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 145,
																		"nodeType": "ExpressionStatement",
																		"src": "2097:10:0"
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 138,
																				"name": "subTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "2073:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 139,
																				"name": "guessMSB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2083:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2073:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2094:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2073:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 146,
																	"nodeType": "WhileStatement",
																	"src": "2067:40:0"
																}
															]
														}
													},
													{
														"assignments": [
															163
														],
														"declarations": [
															{
																"constant": false,
																"id": 163,
																"mutability": "mutable",
																"name": "expBoundGuess",
																"nameLocation": "2335:13:0",
																"nodeType": "VariableDeclaration",
																"scope": 223,
																"src": "2330:18:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 162,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "2330:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 167,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 164,
																"name": "guessMSB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2351:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "2362:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2351:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2330:33:0"
													},
													{
														"expression": {
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 168,
																"name": "expBoundGuess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "2377:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"condition": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 169,
																					"name": "guessMSB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "2395:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"id": 170,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 9,
																					"src": "2406:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2395:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2411:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2395:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 174,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2394:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "30",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2420:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "2394:27:0",
																"trueExpression": {
																	"hexValue": "31",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2416:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2377:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 179,
														"nodeType": "ExpressionStatement",
														"src": "2377:44:0"
													},
													{
														"assignments": [
															181
														],
														"declarations": [
															{
																"constant": false,
																"id": 181,
																"mutability": "mutable",
																"name": "z",
																"nameLocation": "2440:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 223,
																"src": "2435:6:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 180,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "2435:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 188,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2445:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 183,
																			"name": "expBoundGuess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "2448:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2445:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2444:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2465:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2444:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2435:31:0"
													},
													{
														"expression": {
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 189,
																"name": "ans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "2480:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 190,
																"name": "subTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "2486:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2480:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 192,
														"nodeType": "ExpressionStatement",
														"src": "2480:14:0"
													},
													{
														"assignments": [
															194
														],
														"declarations": [
															{
																"constant": false,
																"id": 194,
																"mutability": "mutable",
																"name": "b2",
																"nameLocation": "2515:2:0",
																"nodeType": "VariableDeclaration",
																"scope": 223,
																"src": "2509:8:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 193,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 198,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "2520:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2524:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2520:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2509:16:0"
													},
													{
														"body": {
															"id": 221,
															"nodeType": "Block",
															"src": "2555:93:0",
															"statements": [
																{
																	"expression": {
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 202,
																			"name": "ans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "2573:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 203,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2579:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2573:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 205,
																	"nodeType": "ExpressionStatement",
																	"src": "2573:7:0"
																},
																{
																	"expression": {
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 206,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2598:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 211,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 207,
																								"name": "subTotal",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 72,
																								"src": "2603:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 210,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 208,
																									"name": "z",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 181,
																									"src": "2614:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"id": 209,
																									"name": "b2",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 194,
																									"src": "2617:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "2614:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2603:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 214,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 212,
																								"name": "b2",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 194,
																								"src": "2622:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 213,
																								"name": "z",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 181,
																								"src": "2627:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2622:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2603:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 216,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2602:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 217,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "2632:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2602:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2598:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 220,
																	"nodeType": "ExpressionStatement",
																	"src": "2598:35:0"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 199,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2546:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 200,
																"name": "ans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "2550:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 222,
														"nodeType": "WhileStatement",
														"src": "2539:109:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "205:494:0",
										"text": " @dev estimates the equation f(x) = x^(a/b)^\n does so by calculating subtotal x^a^ and iterating to the b-root of that subtotal\n using a generalized form of the Babylonian Method (rounded down to nearest whole #)\n https://www.researchgate.net/publication/237415858_EXTENDING_THE_BABYLONIAN_ALGORITHM\n e\n NOTE: greater inputs could be considered if this function were used to\n estimate exponential mappings with a limited number of sig-figs"
									},
									"functionSelector": "d2b5a370",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fraxExp",
									"nameLocation": "714:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "727:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "722:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "736:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 6,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "730:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "745:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "739:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:26:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "ans",
												"nameLocation": "776:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "771:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:10:0"
									},
									"scope": 269,
									"src": "705:1959:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2956:232:0",
										"statements": [
											{
												"id": 266,
												"nodeType": "UncheckedBlock",
												"src": "2966:216:0",
												"statements": [
													{
														"expression": {
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 233,
																"name": "ans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "2990:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 234,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "2996:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 236,
														"nodeType": "ExpressionStatement",
														"src": "2990:7:0"
													},
													{
														"assignments": [
															238
														],
														"declarations": [
															{
																"constant": false,
																"id": 238,
																"mutability": "mutable",
																"name": "est",
																"nameLocation": "3016:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 266,
																"src": "3011:8:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 237,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "3011:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 245,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 239,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "3023:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3027:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3023:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 242,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3032:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3022:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3011:22:0"
													},
													{
														"body": {
															"id": 264,
															"nodeType": "Block",
															"src": "3100:72:0",
															"statements": [
																{
																	"expression": {
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 249,
																					"name": "ans",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 231,
																					"src": "3119:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 250,
																					"name": "est",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 238,
																					"src": "3124:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 251,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "3118:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 252,
																					"name": "est",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 238,
																					"src": "3132:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 257,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 255,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 253,
																										"name": "x",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 228,
																										"src": "3138:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "/",
																									"rightExpression": {
																										"id": 254,
																										"name": "est",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 238,
																										"src": "3142:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "3138:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 256,
																									"name": "est",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 238,
																									"src": "3148:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3138:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 258,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3137:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 259,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3155:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "3137:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 261,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3131:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "3118:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 263,
																	"nodeType": "ExpressionStatement",
																	"src": "3118:39:0"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "est",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "3089:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 247,
																"name": "ans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "3095:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3089:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 265,
														"nodeType": "WhileStatement",
														"src": "3082:90:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2670:228:0",
										"text": " @dev estimates the square root of an input using Babylonian Method\n (not much more performant on large numbers, due to lack of tight est bounding)\n https://www.cs.utep.edu/vladik/2009/olg09-05a.pdf"
									},
									"functionSelector": "677342ce",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "2912:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2922:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2917:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2917:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2916:8:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "ans",
												"nameLocation": "2951:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2946:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2946:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2945:10:0"
									},
									"scope": 269,
									"src": "2903:285:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 270,
							"src": "180:3010:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3157:0"
				},
				"id": 0
			}
		}
	}
}