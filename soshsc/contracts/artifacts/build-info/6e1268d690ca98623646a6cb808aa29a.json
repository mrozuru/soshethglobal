{
	"id": "6e1268d690ca98623646a6cb808aa29a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"sosh/SST.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\";\n\ncontract SST is ERC20, Ownable {\n    uint256 public constant MINT_PRICE_PER_TOKEN = 675000000000000; // 0.000675 ETH in wei\n    uint256 public constant GAS_FEE_TAP = 0.02 ether; // 2%\n\n    constructor() ERC20(\"SoSH SST\", \"SST\") {}\n\n    // Function to mint new tokens\n    function mint(uint256 tokenAmount, address aAWallet) public payable {\n        require(msg.value >= MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether, \"Insufficient ETH sent\");\n\n        _mint(aAWallet, tokenAmount);\n        \n        // Optionally refund excess ETH sent\n        if (msg.value > MINT_PRICE_PER_TOKEN * tokenAmount) {\n            payable(msg.sender).transfer(msg.value - MINT_PRICE_PER_TOKEN * tokenAmount);\n        }\n    }\n\n        //TODO: The gas transfer happens in another wrapper function instead\n    function mintWithGasTap(uint256 tokenAmount, address aAWallet) public payable {\n        uint256 totalMintCost = MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether;\n        uint256 gasFee = totalMintCost * GAS_FEE_TAP / 1 ether; // Assuming GAS_FEE_TAP is 0.02 ether for 2%\n        require(msg.value >= totalMintCost + gasFee, \"Insufficient ETH sent\");\n\n\n        _mint(aAWallet, tokenAmount);\n        \n        (bool success1, ) = payable(aAWallet).call{value: (gasFee)}(\"\");\n        require(success1, \"Unable to send gas\");\n\n        // Optionally refund excess ETH sent\n        if (msg.value > totalMintCost + gasFee) {\n            (bool successBack, ) = payable(msg.sender).call{value:msg.value - totalMintCost + gasFee}(\"\");\n            require(successBack, \"Unable to send back fund\");\n        }\n    }\n\n    // Function to burn SST tokens and receive ETH back\n    function burn(uint256 amount, address destinationAddress) public {\n        require(balanceOf(msg.sender) >= amount, \"Insufficient SST tokens to burn\");\n        _burn(msg.sender, amount);\n\n        uint256 ethAmount = amount * MINT_PRICE_PER_TOKEN;\n        require(address(this).balance >= ethAmount, \"Contract does not have enough ETH\");\n\n        (bool sent, ) = destinationAddress.call{value: ethAmount}(\"\");\n        require(sent, \"Failed to send ETH\");\n    }\n\n    // // Withdraw function for contract owner to withdraw ETH collected from mints\n    // function withdraw() external onlyOwner {\n    //     uint256 balance = address(this).balance;\n    //     require(balance > 0, \"No ETH to withdraw\");\n    //     payable(owner()).transfer(balance);\n    // }\n\n}\n"
			},
			"@openzeppelin/contracts@4.7.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts@4.7.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup4\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2044:2049  _name */\n  dup3\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2077:2084  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_24:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_25:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_29:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_30:\n    /* \"#utility.yul\":1313:1374   */\n  tag_31\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_33\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1942   */\ntag_12:\n    /* \"#utility.yul\":1641:1642   */\n  0x01\n    /* \"#utility.yul\":1637:1649   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1684:1696   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1705:1766   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1759:1763   */\n  0x7f\n    /* \"#utility.yul\":1751:1757   */\n  dup3\n    /* \"#utility.yul\":1747:1764   */\n  and\n    /* \"#utility.yul\":1737:1764   */\n  swap2\n  pop\n    /* \"#utility.yul\":1705:1766   */\ntag_35:\n    /* \"#utility.yul\":1812:1814   */\n  0x20\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1801:1815   */\n  lt\n    /* \"#utility.yul\":1781:1799   */\n  dup2\n    /* \"#utility.yul\":1778:1816   */\n  sub\n    /* \"#utility.yul\":1775:1936   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1858:1868   */\n  0x4e487b71\n    /* \"#utility.yul\":1853:1856   */\n  0xe0\n    /* \"#utility.yul\":1849:1869   */\n  shl\n    /* \"#utility.yul\":1846:1847   */\n  0x00\n    /* \"#utility.yul\":1839:1870   */\n  mstore\n    /* \"#utility.yul\":1893:1897   */\n  0x22\n    /* \"#utility.yul\":1890:1891   */\n  0x04\n    /* \"#utility.yul\":1883:1898   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x24\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1911:1926   */\n  revert\n    /* \"#utility.yul\":1775:1936   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1562:1942   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2591   */\ntag_14:\n    /* \"#utility.yul\":2175:2177   */\n  0x1f\n    /* \"#utility.yul\":2170:2173   */\n  dup3\n    /* \"#utility.yul\":2167:2178   */\n  gt\n    /* \"#utility.yul\":2164:2585   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2211:2216   */\n  dup1\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2217   */\n  mstore\n    /* \"#utility.yul\":2255:2259   */\n  0x20\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2242:2260   */\n  keccak256\n    /* \"#utility.yul\":2325:2327   */\n  0x1f\n    /* \"#utility.yul\":2313:2323   */\n  dup5\n    /* \"#utility.yul\":2309:2328   */\n  add\n    /* \"#utility.yul\":2306:2307   */\n  0x05\n    /* \"#utility.yul\":2302:2329   */\n  shr\n    /* \"#utility.yul\":2296:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2330   */\n  add\n    /* \"#utility.yul\":2361:2365   */\n  0x20\n    /* \"#utility.yul\":2349:2359   */\n  dup6\n    /* \"#utility.yul\":2346:2366   */\n  lt\n    /* \"#utility.yul\":2343:2390   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2384:2388   */\n  dup1\n    /* \"#utility.yul\":2343:2390   */\ntag_40:\n    /* \"#utility.yul\":2439:2441   */\n  0x1f\n    /* \"#utility.yul\":2434:2437   */\n  dup5\n    /* \"#utility.yul\":2430:2442   */\n  add\n    /* \"#utility.yul\":2427:2428   */\n  0x05\n    /* \"#utility.yul\":2423:2443   */\n  shr\n    /* \"#utility.yul\":2417:2421   */\n  dup3\n    /* \"#utility.yul\":2413:2444   */\n  add\n    /* \"#utility.yul\":2403:2444   */\n  swap2\n  pop\n    /* \"#utility.yul\":2494:2575   */\ntag_41:\n    /* \"#utility.yul\":2512:2514   */\n  dup2\n    /* \"#utility.yul\":2505:2510   */\n  dup2\n    /* \"#utility.yul\":2502:2515   */\n  lt\n    /* \"#utility.yul\":2494:2575   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2571:2572   */\n  0x00\n    /* \"#utility.yul\":2557:2573   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2538:2539   */\n  0x01\n    /* \"#utility.yul\":2527:2540   */\n  add\n    /* \"#utility.yul\":2494:2575   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2498:2501   */\n  pop\n  pop\n    /* \"#utility.yul\":2164:2585   */\ntag_39:\n    /* \"#utility.yul\":2073:2591   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:4112   */\ntag_7:\n    /* \"#utility.yul\":2887:2897   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2909:2939   */\n  dup2\n  gt\n    /* \"#utility.yul\":2906:2962   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2942:2960   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2971:3068   */\n  tag_48\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3021:3059   */\n  tag_49\n    /* \"#utility.yul\":3053:3057   */\n  dup5\n    /* \"#utility.yul\":3047:3058   */\n  sload\n    /* \"#utility.yul\":3021:3059   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3015:3019   */\n  dup5\n    /* \"#utility.yul\":2971:3068   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3123:3127   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3180:3182   */\n  0x1f\n    /* \"#utility.yul\":3169:3183   */\n  dup4\n  gt\n    /* \"#utility.yul\":3197:3198   */\n  0x01\n    /* \"#utility.yul\":3192:3855   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup5\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2724:2725   */\n  0x03\n    /* \"#utility.yul\":2720:2731   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2716:2740   */\n  shr\n    /* \"#utility.yul\":2712:2741   */\n  not\n    /* \"#utility.yul\":2702:2742   */\n  and\n    /* \"#utility.yul\":2748:2749   */\n  0x01\n    /* \"#utility.yul\":2744:2755   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2699:2756   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3162:4106   */\n  jump(tag_50)\n    /* \"#utility.yul\":3192:3855   */\ntag_51:\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2027   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x20\n    /* \"#utility.yul\":2044:2062   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3228:3248   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3346:3582   */\ntag_55:\n    /* \"#utility.yul\":3360:3367   */\n  dup3\n    /* \"#utility.yul\":3357:3358   */\n  dup2\n    /* \"#utility.yul\":3354:3368   */\n  lt\n    /* \"#utility.yul\":3346:3582   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3449:3468   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3443:3469   */\n  mload\n    /* \"#utility.yul\":3428:3470   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3541:3568   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3509:3510   */\n  0x01\n    /* \"#utility.yul\":3497:3511   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3376:3395   */\n  dup5\n  add\n    /* \"#utility.yul\":3346:3582   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3350:3353   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup6\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_58:\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3839   */\n  dup5\n    /* \"#utility.yul\":3830:3831   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3816:3820   */\n  dup6\n    /* \"#utility.yul\":3809:3845   */\n  sstore\n    /* \"#utility.yul\":3162:4106   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2767:4112   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4612:4623  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_141:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_148:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_150:\n        /* \"#utility.yul\":913:942   */\n      tag_151\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_141\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_155:\n        /* \"#utility.yul\":1563:1592   */\n      tag_156\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_141\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_157\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_160:\n        /* \"#utility.yul\":2051:2080   */\n      tag_161\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_141\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_163:\n        /* \"#utility.yul\":2259:2288   */\n      tag_164\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_141\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_165\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_167:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220bfc31879d63b51b01cbe985c5871854005bb9b62f8e09d7b81cfdf32985ce38664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4114:6",
										"nodeType": "YulBlock",
										"src": "0:4114:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "210:780:6",
													"nodeType": "YulBlock",
													"src": "210:780:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:6",
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nativeSrc": "261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nativeSrc": "261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:6",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nativeSrc": "234:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nativeSrc": "230:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nativeSrc": "223:35:6",
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nativeSrc": "220:55:6",
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nativeSrc": "284:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:6"
																},
																"nativeSrc": "294:13:6",
																"nodeType": "YulFunctionCall",
																"src": "294:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:6",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:6",
																				"nodeType": "YulLiteral",
																				"src": "334:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:6",
																				"nodeType": "YulLiteral",
																				"src": "338:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nativeSrc": "330:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:6",
																		"nodeType": "YulLiteral",
																		"src": "342:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nativeSrc": "326:18:6",
																"nodeType": "YulFunctionCall",
																"src": "326:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:6",
																	"nodeType": "YulTypedName",
																	"src": "320:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:6",
																"nodeType": "YulBlock",
																"src": "367:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:6"
																			},
																			"nativeSrc": "369:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:6"
																		},
																		"nativeSrc": "369:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:6"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:6"
																},
																"nativeSrc": "356:10:6",
																"nodeType": "YulFunctionCall",
																"src": "356:10:6"
															},
															"nativeSrc": "353:36:6",
															"nodeType": "YulIf",
															"src": "353:36:6"
														},
														{
															"nativeSrc": "398:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:6",
																		"nodeType": "YulLiteral",
																		"src": "412:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:6"
																},
																"nativeSrc": "408:7:6",
																"nodeType": "YulFunctionCall",
																"src": "408:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:6",
																	"nodeType": "YulTypedName",
																	"src": "402:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:6",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:6"
																},
																"nativeSrc": "438:9:6",
																"nodeType": "YulFunctionCall",
																"src": "438:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:6",
																	"nodeType": "YulTypedName",
																	"src": "428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:6",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:6",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:6",
																										"nodeType": "YulLiteral",
																										"src": "506:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:6"
																								},
																								"nativeSrc": "498:13:6",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:6"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:6",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:6"
																						},
																						"nativeSrc": "494:22:6",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:6",
																						"nodeType": "YulLiteral",
																						"src": "518:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:6"
																				},
																				"nativeSrc": "490:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:6"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:6"
																		},
																		"nativeSrc": "486:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nativeSrc": "474:53:6",
																"nodeType": "YulFunctionCall",
																"src": "474:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:6",
																	"nodeType": "YulTypedName",
																	"src": "460:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:6",
																"nodeType": "YulBlock",
																"src": "586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:6"
																			},
																			"nativeSrc": "588:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:6"
																		},
																		"nativeSrc": "588:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:6"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:6"
																		},
																		"nativeSrc": "542:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:6"
																		},
																		"nativeSrc": "562:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:6"
																},
																"nativeSrc": "539:46:6",
																"nodeType": "YulFunctionCall",
																"src": "539:46:6"
															},
															"nativeSrc": "536:72:6",
															"nodeType": "YulIf",
															"src": "536:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:6",
																		"nodeType": "YulLiteral",
																		"src": "624:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nativeSrc": "617:22:6",
																"nodeType": "YulFunctionCall",
																"src": "617:22:6"
															},
															"nativeSrc": "617:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:6"
																},
																"nativeSrc": "648:18:6",
																"nodeType": "YulFunctionCall",
																"src": "648:18:6"
															},
															"nativeSrc": "648:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:6"
														},
														{
															"nativeSrc": "675:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:6",
																"nodeType": "YulLiteral",
																"src": "685:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:6",
																	"nodeType": "YulTypedName",
																	"src": "679:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:6",
																"nodeType": "YulBlock",
																"src": "737:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:6",
																					"nodeType": "YulLiteral",
																					"src": "746:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:6",
																					"nodeType": "YulLiteral",
																					"src": "749:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:6"
																			},
																			"nativeSrc": "739:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:6"
																		},
																		"nativeSrc": "739:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:6"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:6"
																				},
																				"nativeSrc": "708:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:6",
																				"nodeType": "YulLiteral",
																				"src": "725:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:6"
																		},
																		"nativeSrc": "704:26:6",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:6"
																},
																"nativeSrc": "701:35:6",
																"nodeType": "YulFunctionCall",
																"src": "701:35:6"
															},
															"nativeSrc": "698:55:6",
															"nodeType": "YulIf",
															"src": "698:55:6"
														},
														{
															"nativeSrc": "762:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:6",
																"nodeType": "YulLiteral",
																"src": "771:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:6",
																	"nodeType": "YulTypedName",
																	"src": "766:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:6",
																"nodeType": "YulBlock",
																"src": "827:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:6"
																							},
																							"nativeSrc": "852:14:6",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:6"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:6",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:6"
																					},
																					"nativeSrc": "848:23:6",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:6"
																									},
																									"nativeSrc": "883:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:6"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:6"
																							},
																							"nativeSrc": "879:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:6"
																					},
																					"nativeSrc": "873:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:6"
																			},
																			"nativeSrc": "841:63:6",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:6"
																		},
																		"nativeSrc": "841:63:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:6"
																},
																"nativeSrc": "789:9:6",
																"nodeType": "YulFunctionCall",
																"src": "789:9:6"
															},
															"nativeSrc": "781:133:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:6",
																"nodeType": "YulBlock",
																"src": "799:19:6",
																"statements": [
																	{
																		"nativeSrc": "801:15:6",
																		"nodeType": "YulAssignment",
																		"src": "801:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:6"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:6"
																			},
																			"nativeSrc": "806:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:6",
																"nodeType": "YulBlock",
																"src": "785:3:6",
																"statements": []
															},
															"src": "781:133:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:6"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:6"
																				},
																				"nativeSrc": "934:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:6",
																				"nodeType": "YulLiteral",
																				"src": "951:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:6"
																		},
																		"nativeSrc": "930:26:6",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "958:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:6"
																},
																"nativeSrc": "923:37:6",
																"nodeType": "YulFunctionCall",
																"src": "923:37:6"
															},
															"nativeSrc": "923:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:6"
														},
														{
															"nativeSrc": "969:15:6",
															"nodeType": "YulAssignment",
															"src": "969:15:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:6",
																"nodeType": "YulIdentifier",
																"src": "978:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:6",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:6",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:6",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:844:6"
											},
											{
												"body": {
													"nativeSrc": "1113:444:6",
													"nodeType": "YulBlock",
													"src": "1113:444:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:6",
																"nodeType": "YulBlock",
																"src": "1159:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:6"
																			},
																			"nativeSrc": "1161:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:6"
																		},
																		"nativeSrc": "1161:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:6"
																		},
																		"nativeSrc": "1130:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:6"
																},
																"nativeSrc": "1126:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:6"
															},
															"nativeSrc": "1123:52:6",
															"nodeType": "YulIf",
															"src": "1123:52:6"
														},
														{
															"nativeSrc": "1184:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:6"
																},
																"nativeSrc": "1198:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:6"
																		},
																		"nativeSrc": "1237:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:6"
																},
																"nativeSrc": "1233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:6",
																"nodeType": "YulBlock",
																"src": "1278:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:6"
																			},
																			"nativeSrc": "1280:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:6"
																		},
																		"nativeSrc": "1280:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:6"
																},
																"nativeSrc": "1263:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:6"
															},
															"nativeSrc": "1260:34:6",
															"nodeType": "YulIf",
															"src": "1260:34:6"
														},
														{
															"nativeSrc": "1303:71:6",
															"nodeType": "YulAssignment",
															"src": "1303:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:6"
																		},
																		"nativeSrc": "1342:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:6"
																},
																"nativeSrc": "1313:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:6"
																}
															]
														},
														{
															"nativeSrc": "1383:41:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:6"
																		},
																		"nativeSrc": "1405:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:6"
																},
																"nativeSrc": "1399:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:6",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:6",
																"nodeType": "YulBlock",
																"src": "1453:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:6"
																			},
																			"nativeSrc": "1455:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:6"
																		},
																		"nativeSrc": "1455:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:6"
																},
																"nativeSrc": "1436:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:6"
															},
															"nativeSrc": "1433:36:6",
															"nodeType": "YulIf",
															"src": "1433:36:6"
														},
														{
															"nativeSrc": "1478:73:6",
															"nodeType": "YulAssignment",
															"src": "1478:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:6"
																		},
																		"nativeSrc": "1517:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:6",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:6"
																},
																"nativeSrc": "1488:63:6",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:6",
														"nodeType": "YulTypedName",
														"src": "1071:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:6",
														"nodeType": "YulTypedName",
														"src": "1082:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:6",
														"nodeType": "YulTypedName",
														"src": "1094:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:6",
														"nodeType": "YulTypedName",
														"src": "1102:6:6",
														"type": ""
													}
												],
												"src": "995:562:6"
											},
											{
												"body": {
													"nativeSrc": "1617:325:6",
													"nodeType": "YulBlock",
													"src": "1617:325:6",
													"statements": [
														{
															"nativeSrc": "1627:22:6",
															"nodeType": "YulAssignment",
															"src": "1627:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1644:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1644:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1637:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:6"
																},
																"nativeSrc": "1637:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1637:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1627:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:6"
																}
															]
														},
														{
															"nativeSrc": "1658:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1658:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1688:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1688:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1684:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:6"
																},
																"nativeSrc": "1684:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1662:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1662:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1735:31:6",
																"nodeType": "YulBlock",
																"src": "1735:31:6",
																"statements": [
																	{
																		"nativeSrc": "1737:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1737:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1751:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1751:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1759:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1747:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1747:3:6"
																			},
																			"nativeSrc": "1747:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1747:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1715:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1715:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:6"
																},
																"nativeSrc": "1708:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1708:26:6"
															},
															"nativeSrc": "1705:61:6",
															"nodeType": "YulIf",
															"src": "1705:61:6"
														},
														{
															"body": {
																"nativeSrc": "1825:111:6",
																"nodeType": "YulBlock",
																"src": "1825:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1853:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1853:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1858:10:6",
																							"nodeType": "YulLiteral",
																							"src": "1858:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1849:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:6"
																					},
																					"nativeSrc": "1849:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1849:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1839:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:6"
																			},
																			"nativeSrc": "1839:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:31:6"
																		},
																		"nativeSrc": "1839:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1893:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1883:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:6"
																			},
																			"nativeSrc": "1883:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:15:6"
																		},
																		"nativeSrc": "1883:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1918:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1921:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1921:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1911:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:6"
																			},
																			"nativeSrc": "1911:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1911:15:6"
																		},
																		"nativeSrc": "1911:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1781:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1781:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1804:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1801:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:6"
																		},
																		"nativeSrc": "1801:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1778:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:6"
																},
																"nativeSrc": "1778:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1778:38:6"
															},
															"nativeSrc": "1775:161:6",
															"nodeType": "YulIf",
															"src": "1775:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1562:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1597:4:6",
														"nodeType": "YulTypedName",
														"src": "1597:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:6",
														"nodeType": "YulTypedName",
														"src": "1606:6:6",
														"type": ""
													}
												],
												"src": "1562:380:6"
											},
											{
												"body": {
													"nativeSrc": "2003:65:6",
													"nodeType": "YulBlock",
													"src": "2003:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2023:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:6"
																},
																"nativeSrc": "2013:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:14:6"
															},
															"nativeSrc": "2013:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2013:14:6"
														},
														{
															"nativeSrc": "2036:26:6",
															"nodeType": "YulAssignment",
															"src": "2036:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2057:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2044:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2044:9:6"
																},
																"nativeSrc": "2044:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2044:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2036:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1947:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1986:3:6",
														"nodeType": "YulTypedName",
														"src": "1986:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1994:4:6",
														"nodeType": "YulTypedName",
														"src": "1994:4:6",
														"type": ""
													}
												],
												"src": "1947:121:6"
											},
											{
												"body": {
													"nativeSrc": "2154:437:6",
													"nodeType": "YulBlock",
													"src": "2154:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:398:6",
																"nodeType": "YulBlock",
																"src": "2187:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2211:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2211:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2201:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:6"
																			},
																			"nativeSrc": "2201:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:16:6"
																		},
																		"nativeSrc": "2201:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:16:6"
																	},
																	{
																		"nativeSrc": "2230:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2230:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2252:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2255:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2255:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2242:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:6"
																			},
																			"nativeSrc": "2242:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2234:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2234:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2273:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2273:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2296:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2296:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2306:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2306:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2313:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2313:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2325:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2325:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2309:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2309:3:6"
																							},
																							"nativeSrc": "2309:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2309:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2302:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:6"
																					},
																					"nativeSrc": "2302:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2302:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2292:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2292:3:6"
																			},
																			"nativeSrc": "2292:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2277:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2277:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2367:23:6",
																			"nodeType": "YulBlock",
																			"src": "2367:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2369:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2369:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2384:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2384:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2369:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2369:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2349:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2349:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2361:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2361:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2346:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2346:2:6"
																			},
																			"nativeSrc": "2346:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:20:6"
																		},
																		"nativeSrc": "2343:47:6",
																		"nodeType": "YulIf",
																		"src": "2343:47:6"
																	},
																	{
																		"nativeSrc": "2403:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2403:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2417:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2417:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2427:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2427:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2434:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2434:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2439:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2439:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2430:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2430:3:6"
																							},
																							"nativeSrc": "2430:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2430:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2423:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2423:3:6"
																					},
																					"nativeSrc": "2423:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2423:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2413:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2413:3:6"
																			},
																			"nativeSrc": "2413:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2413:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2407:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2407:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2457:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2470:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2470:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2461:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2461:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2555:20:6",
																			"nodeType": "YulBlock",
																			"src": "2555:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2564:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2564:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2571:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2571:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2557:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2557:6:6"
																						},
																						"nativeSrc": "2557:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2557:16:6"
																					},
																					"nativeSrc": "2557:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2557:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2505:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2505:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2512:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2512:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2502:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2502:2:6"
																			},
																			"nativeSrc": "2502:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:13:6"
																		},
																		"nativeSrc": "2494:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2516:26:6",
																			"nodeType": "YulBlock",
																			"src": "2516:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2518:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2518:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2531:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2531:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2538:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2538:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2527:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2527:3:6"
																						},
																						"nativeSrc": "2527:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2527:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2518:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2518:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2498:3:6",
																			"nodeType": "YulBlock",
																			"src": "2498:3:6",
																			"statements": []
																		},
																		"src": "2494:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2170:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2167:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2167:2:6"
																},
																"nativeSrc": "2167:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2167:11:6"
															},
															"nativeSrc": "2164:421:6",
															"nodeType": "YulIf",
															"src": "2164:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2073:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2126:5:6",
														"nodeType": "YulTypedName",
														"src": "2126:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2133:3:6",
														"nodeType": "YulTypedName",
														"src": "2133:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2138:10:6",
														"nodeType": "YulTypedName",
														"src": "2138:10:6",
														"type": ""
													}
												],
												"src": "2073:518:6"
											},
											{
												"body": {
													"nativeSrc": "2681:81:6",
													"nodeType": "YulBlock",
													"src": "2681:81:6",
													"statements": [
														{
															"nativeSrc": "2691:65:6",
															"nodeType": "YulAssignment",
															"src": "2691:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2706:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2706:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2724:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2724:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2727:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2727:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2720:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2720:3:6"
																								},
																								"nativeSrc": "2720:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2720:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2737:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2737:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2733:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2733:3:6"
																								},
																								"nativeSrc": "2733:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2733:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2716:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:6"
																						},
																						"nativeSrc": "2716:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2716:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2712:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2712:3:6"
																				},
																				"nativeSrc": "2712:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2702:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:6"
																		},
																		"nativeSrc": "2702:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2748:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2748:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2751:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2744:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:6"
																		},
																		"nativeSrc": "2744:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2699:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2699:2:6"
																},
																"nativeSrc": "2699:57:6",
																"nodeType": "YulFunctionCall",
																"src": "2699:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2691:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2596:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2658:4:6",
														"nodeType": "YulTypedName",
														"src": "2658:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2664:3:6",
														"nodeType": "YulTypedName",
														"src": "2664:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2672:4:6",
														"nodeType": "YulTypedName",
														"src": "2672:4:6",
														"type": ""
													}
												],
												"src": "2596:166:6"
											},
											{
												"body": {
													"nativeSrc": "2863:1249:6",
													"nodeType": "YulBlock",
													"src": "2863:1249:6",
													"statements": [
														{
															"nativeSrc": "2873:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2873:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2893:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2887:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:6"
																},
																"nativeSrc": "2887:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2887:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2877:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2877:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2940:22:6",
																"nodeType": "YulBlock",
																"src": "2940:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2942:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2942:16:6"
																			},
																			"nativeSrc": "2942:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:18:6"
																		},
																		"nativeSrc": "2942:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2912:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2928:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2928:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2932:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2932:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2924:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:6"
																				},
																				"nativeSrc": "2924:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2920:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:6"
																		},
																		"nativeSrc": "2920:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2909:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:6"
																},
																"nativeSrc": "2909:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2909:30:6"
															},
															"nativeSrc": "2906:56:6",
															"nodeType": "YulIf",
															"src": "2906:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3015:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3015:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3053:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3047:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3047:5:6"
																				},
																				"nativeSrc": "3047:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3047:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3021:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "3021:25:6"
																		},
																		"nativeSrc": "3021:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3061:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2971:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2971:43:6"
																},
																"nativeSrc": "2971:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2971:97:6"
															},
															"nativeSrc": "2971:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "2971:97:6"
														},
														{
															"nativeSrc": "3077:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3077:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3094:1:6",
																"nodeType": "YulLiteral",
																"src": "3094:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3081:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3081:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3104:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3104:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3123:4:6",
																"nodeType": "YulLiteral",
																"src": "3123:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3108:11:6",
																	"nodeType": "YulTypedName",
																	"src": "3108:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3136:17:6",
															"nodeType": "YulAssignment",
															"src": "3136:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3149:4:6",
																"nodeType": "YulLiteral",
																"src": "3149:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3136:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3136:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3199:656:6",
																		"nodeType": "YulBlock",
																		"src": "3199:656:6",
																		"statements": [
																			{
																				"nativeSrc": "3213:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3213:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3232:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3232:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3244:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3244:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3240:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3240:3:6"
																							},
																							"nativeSrc": "3240:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3240:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3228:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3228:3:6"
																					},
																					"nativeSrc": "3228:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3217:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3217:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3261:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3261:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3305:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3305:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3275:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3275:29:6"
																					},
																					"nativeSrc": "3275:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3265:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3265:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3323:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3332:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3327:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3327:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3410:172:6",
																					"nodeType": "YulBlock",
																					"src": "3410:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3435:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3435:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3453:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3453:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3458:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3458:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3449:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3449:3:6"
																												},
																												"nativeSrc": "3449:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3449:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3443:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3443:5:6"
																										},
																										"nativeSrc": "3443:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3443:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3428:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3428:6:6"
																								},
																								"nativeSrc": "3428:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3428:42:6"
																							},
																							"nativeSrc": "3428:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3428:42:6"
																						},
																						{
																							"nativeSrc": "3487:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3487:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3501:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3501:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3509:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3509:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3497:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3497:3:6"
																								},
																								"nativeSrc": "3497:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3497:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3487:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3487:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3528:40:6",
																							"nodeType": "YulAssignment",
																							"src": "3528:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3545:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3545:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3556:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "3556:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3541:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3541:3:6"
																								},
																								"nativeSrc": "3541:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3541:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3528:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3357:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3357:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3360:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3360:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3354:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3354:2:6"
																					},
																					"nativeSrc": "3354:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3354:14:6"
																				},
																				"nativeSrc": "3346:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3369:28:6",
																					"nodeType": "YulBlock",
																					"src": "3369:28:6",
																					"statements": [
																						{
																							"nativeSrc": "3371:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3371:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3380:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3380:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3383:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "3383:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:6"
																								},
																								"nativeSrc": "3376:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3371:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3371:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3350:3:6",
																					"nodeType": "YulBlock",
																					"src": "3350:3:6",
																					"statements": []
																				},
																				"src": "3346:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:6",
																					"nodeType": "YulBlock",
																					"src": "3630:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:6"
																										},
																										"nativeSrc": "3671:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:6"
																								},
																								"nativeSrc": "3665:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:6"
																																		},
																																		"nativeSrc": "3750:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:6"
																																},
																																"nativeSrc": "3746:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:6"
																																},
																																"nativeSrc": "3772:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:6"
																														},
																														"nativeSrc": "3742:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:6"
																												},
																												"nativeSrc": "3738:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:6"
																										},
																										"nativeSrc": "3723:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:6"
																								},
																								"nativeSrc": "3708:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:6"
																							},
																							"nativeSrc": "3708:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:6"
																					},
																					"nativeSrc": "3598:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:6"
																				},
																				"nativeSrc": "3595:201:6",
																				"nodeType": "YulIf",
																				"src": "3595:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:6",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:6"
																									},
																									"nativeSrc": "3826:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:6",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:6"
																							},
																							"nativeSrc": "3822:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:6"
																					},
																					"nativeSrc": "3809:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:6"
																				},
																				"nativeSrc": "3809:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3192:663:6",
																	"nodeType": "YulCase",
																	"src": "3192:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:6",
																		"nodeType": "YulBlock",
																		"src": "3872:234:6",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:6",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:6",
																					"nodeType": "YulBlock",
																					"src": "3935:67:6",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:6",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:6"
																										},
																										"nativeSrc": "3968:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:6"
																								},
																								"nativeSrc": "3962:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:6"
																				},
																				"nativeSrc": "3913:89:6",
																				"nodeType": "YulIf",
																				"src": "3913:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:6"
																							},
																							"nativeSrc": "4028:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:6"
																					},
																					"nativeSrc": "4015:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:6"
																				},
																				"nativeSrc": "4015:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:6"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:6",
																	"nodeType": "YulCase",
																	"src": "3864:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3172:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3169:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:6"
																},
																"nativeSrc": "3169:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3169:14:6"
															},
															"nativeSrc": "3162:944:6",
															"nodeType": "YulSwitch",
															"src": "3162:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2767:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2848:4:6",
														"nodeType": "YulTypedName",
														"src": "2848:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2854:3:6",
														"nodeType": "YulTypedName",
														"src": "2854:3:6",
														"type": ""
													}
												],
												"src": "2767:1345:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000b3e38038062000b3e83398101604081905262000033916200011a565b60036200004183826200020a565b5060046200005082826200020a565b505050620002d6565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b8160405283815260209250866020858801011115620000e2575f80fd5b5f91505b83821015620001055785820183015181830184015290820190620000e6565b5f602085830101528094505050505092915050565b5f80604083850312156200012c575f80fd5b82516001600160401b038082111562000143575f80fd5b62000151868387016200006d565b9350602085015191508082111562000167575f80fd5b5062000176858286016200006d565b9150509250929050565b600181811c908216806200019557607f821691505b602082108103620001b457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200020557805f5260205f20601f840160051c81016020851015620001e15750805b601f840160051c820191505b8181101562000202575f8155600101620001ed565b50505b505050565b81516001600160401b0381111562000226576200022662000059565b6200023e8162000237845462000180565b84620001ba565b602080601f83116001811462000274575f84156200025c5750858301515b5f19600386901b1c1916600185901b178555620002ce565b5f85815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61085a80620002e45f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d636600461071b565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610743565b610244565b604051601281526020016100bf565b6100db61012d36600461071b565b610267565b6100ef61014036600461077c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db61017036600461071b565b610297565b6100db61018336600461071b565b610316565b6100ef61019636600461079c565b610323565b6060600380546101aa906107cd565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107cd565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b6102839190610805565b61034d565b6060600480546101aa906107cd565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b908490610805565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b5f602080835283518060208501525f5b818110156106e0578581018301518582016040015282016106c4565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610716575f80fd5b919050565b5f806040838503121561072c575f80fd5b61073583610700565b946020939093013593505050565b5f805f60608486031215610755575f80fd5b61075e84610700565b925061076c60208501610700565b9150604084013590509250925092565b5f6020828403121561078c575f80fd5b61079582610700565b9392505050565b5f80604083850312156107ad575f80fd5b6107b683610700565b91506107c460208401610700565b90509250929050565b600181811c908216806107e157607f821691505b6020821081036107ff57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220bfc31879d63b51b01cbe985c5871854005bb9b62f8e09d7b81cfdf32985ce38664736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB3E CODESIZE SUB DUP1 PUSH3 0xB3E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x11A JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x20A JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x20A JUMP JUMPDEST POP POP POP PUSH3 0x2D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x105 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x151 DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x176 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x195 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x205 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1E1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x202 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x226 JUMPI PUSH3 0x226 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23E DUP2 PUSH3 0x237 DUP5 SLOAD PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH3 0x1BA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x274 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CE JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x283 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C2 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85A DUP1 PUSH3 0x2E4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x805 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6C4 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x716 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x735 DUP4 PUSH2 0x700 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75E DUP5 PUSH2 0x700 JUMP JUMPDEST SWAP3 POP PUSH2 0x76C PUSH1 0x20 DUP6 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x795 DUP3 PUSH2 0x700 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP4 PUSH2 0x700 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 PUSH1 0x20 DUP5 ADD PUSH2 0x700 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xC3 XOR PUSH26 0xD63B51B01CBE985C5871854005BB9B62F8E09D7B81CFDF32985C 0xE3 DUP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1403:11214:1:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:5;:13;2052:5;2044;:13;:::i;:::-;-1:-1:-1;2067:7:1;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;1403:11214;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:6;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:518::-;2175:2;2170:3;2167:11;2164:421;;;2211:5;2208:1;2201:16;2255:4;2252:1;2242:18;2325:2;2313:10;2309:19;2306:1;2302:27;2296:4;2292:38;2361:4;2349:10;2346:20;2343:47;;;-1:-1:-1;2384:4:6;2343:47;2439:2;2434:3;2430:12;2427:1;2423:20;2417:4;2413:31;2403:41;;2494:81;2512:2;2505:5;2502:13;2494:81;;;2571:1;2557:16;;2538:1;2527:13;2494:81;;;2498:3;;2164:421;2073:518;;;:::o;2767:1345::-;2887:10;;-1:-1:-1;;;;;2909:30:6;;2906:56;;;2942:18;;:::i;:::-;2971:97;3061:6;3021:38;3053:4;3047:11;3021:38;:::i;:::-;3015:4;2971:97;:::i;:::-;3123:4;;3180:2;3169:14;;3197:1;3192:663;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:6;;;3962:26;3913:89;-1:-1:-1;;2724:1:6;2720:11;;;2716:24;2712:29;2702:40;2748:1;2744:11;;;2699:57;4015:81;;3162:944;;3192:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3228:20:6;;;3346:236;3360:7;3357:1;3354:14;3346:236;;;3449:19;;;3443:26;3428:42;;3541:27;;;;3509:1;3497:14;;;;3376:19;;3346:236;;;3350:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:6;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;;;3842:1;3833:6;3830:1;3826:14;3822:22;3816:4;3809:36;3162:944;;;;;2767:1345;;:::o;:::-;1403:11214:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_697": {
									"entryPoint": null,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_632": {
									"entryPoint": 845,
									"id": 632,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_686": {
									"entryPoint": null,
									"id": 686,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_675": {
									"entryPoint": 1136,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 1256,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 803,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 555,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 663,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 615,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_167": {
									"entryPoint": 411,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_177": {
									"entryPoint": 648,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 580,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_236": {
									"entryPoint": 790,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5754:6",
										"nodeType": "YulBlock",
										"src": "0:5754:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:6",
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nativeSrc": "145:12:6",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:6",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:6",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:6",
																		"nodeType": "YulLiteral",
																		"src": "184:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nativeSrc": "166:21:6",
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nativeSrc": "166:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nativeSrc": "196:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nativeSrc": "210:13:6",
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:6",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:6",
																				"nodeType": "YulLiteral",
																				"src": "254:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nativeSrc": "239:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nativeSrc": "232:34:6",
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nativeSrc": "232:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nativeSrc": "275:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:6",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:6",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:6",
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nativeSrc": "369:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:6",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nativeSrc": "365:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nativeSrc": "403:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nativeSrc": "399:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nativeSrc": "393:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nativeSrc": "358:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nativeSrc": "358:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nativeSrc": "302:13:6",
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nativeSrc": "294:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:6",
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nativeSrc": "318:15:6",
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nativeSrc": "323:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:6",
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nativeSrc": "454:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:6",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nativeSrc": "450:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:6",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nativeSrc": "443:42:6",
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nativeSrc": "443:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nativeSrc": "494:62:6",
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:6",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nativeSrc": "525:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:6",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nativeSrc": "542:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nativeSrc": "521:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nativeSrc": "506:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:6",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nativeSrc": "502:54:6",
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nativeSrc": "616:124:6",
													"nodeType": "YulBlock",
													"src": "616:124:6",
													"statements": [
														{
															"nativeSrc": "626:29:6",
															"nodeType": "YulAssignment",
															"src": "626:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:6"
																},
																"nativeSrc": "635:20:6",
																"nodeType": "YulFunctionCall",
																"src": "635:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:6",
																"nodeType": "YulBlock",
																"src": "718:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:6",
																					"nodeType": "YulLiteral",
																					"src": "727:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:6",
																					"nodeType": "YulLiteral",
																					"src": "730:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:6"
																			},
																			"nativeSrc": "720:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:6"
																		},
																		"nativeSrc": "720:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:6",
																										"nodeType": "YulLiteral",
																										"src": "703:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:6",
																										"nodeType": "YulLiteral",
																										"src": "708:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:6"
																								},
																								"nativeSrc": "699:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:6",
																								"nodeType": "YulLiteral",
																								"src": "712:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:6"
																						},
																						"nativeSrc": "695:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:6"
																				},
																				"nativeSrc": "684:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:6"
																		},
																		"nativeSrc": "674:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nativeSrc": "667:50:6",
																"nodeType": "YulFunctionCall",
																"src": "667:50:6"
															},
															"nativeSrc": "664:70:6",
															"nodeType": "YulIf",
															"src": "664:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:6",
														"nodeType": "YulTypedName",
														"src": "595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:6",
														"nodeType": "YulTypedName",
														"src": "606:5:6",
														"type": ""
													}
												],
												"src": "567:173:6"
											},
											{
												"body": {
													"nativeSrc": "832:167:6",
													"nodeType": "YulBlock",
													"src": "832:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:6",
																"nodeType": "YulBlock",
																"src": "878:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:6",
																					"nodeType": "YulLiteral",
																					"src": "887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:6",
																					"nodeType": "YulLiteral",
																					"src": "890:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:6"
																			},
																			"nativeSrc": "880:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:6"
																		},
																		"nativeSrc": "880:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:6"
																		},
																		"nativeSrc": "849:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:6",
																		"nodeType": "YulLiteral",
																		"src": "874:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:6"
																},
																"nativeSrc": "845:32:6",
																"nodeType": "YulFunctionCall",
																"src": "845:32:6"
															},
															"nativeSrc": "842:52:6",
															"nodeType": "YulIf",
															"src": "842:52:6"
														},
														{
															"nativeSrc": "903:39:6",
															"nodeType": "YulAssignment",
															"src": "903:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:6"
																},
																"nativeSrc": "913:29:6",
																"nodeType": "YulFunctionCall",
																"src": "913:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:6"
																}
															]
														},
														{
															"nativeSrc": "951:42:6",
															"nodeType": "YulAssignment",
															"src": "951:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:6",
																				"nodeType": "YulLiteral",
																				"src": "989:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:6"
																		},
																		"nativeSrc": "974:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:6"
																},
																"nativeSrc": "961:32:6",
																"nodeType": "YulFunctionCall",
																"src": "961:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:6",
														"nodeType": "YulTypedName",
														"src": "790:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:6",
														"nodeType": "YulTypedName",
														"src": "801:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:6",
														"nodeType": "YulTypedName",
														"src": "813:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:6",
														"nodeType": "YulTypedName",
														"src": "821:6:6",
														"type": ""
													}
												],
												"src": "745:254:6"
											},
											{
												"body": {
													"nativeSrc": "1099:92:6",
													"nodeType": "YulBlock",
													"src": "1099:92:6",
													"statements": [
														{
															"nativeSrc": "1109:26:6",
															"nodeType": "YulAssignment",
															"src": "1109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:6"
																},
																"nativeSrc": "1117:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:6"
																				},
																				"nativeSrc": "1169:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:6"
																		},
																		"nativeSrc": "1162:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:6"
																},
																"nativeSrc": "1144:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:6"
															},
															"nativeSrc": "1144:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:6",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:6",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:6",
														"nodeType": "YulTypedName",
														"src": "1090:4:6",
														"type": ""
													}
												],
												"src": "1004:187:6"
											},
											{
												"body": {
													"nativeSrc": "1297:76:6",
													"nodeType": "YulBlock",
													"src": "1297:76:6",
													"statements": [
														{
															"nativeSrc": "1307:26:6",
															"nodeType": "YulAssignment",
															"src": "1307:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:6"
																},
																"nativeSrc": "1315:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:6"
																},
																"nativeSrc": "1342:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:6"
															},
															"nativeSrc": "1342:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:6",
														"nodeType": "YulTypedName",
														"src": "1266:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:6",
														"nodeType": "YulTypedName",
														"src": "1277:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:6",
														"nodeType": "YulTypedName",
														"src": "1288:4:6",
														"type": ""
													}
												],
												"src": "1196:177:6"
											},
											{
												"body": {
													"nativeSrc": "1482:224:6",
													"nodeType": "YulBlock",
													"src": "1482:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:6",
																"nodeType": "YulBlock",
																"src": "1528:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:6"
																			},
																			"nativeSrc": "1530:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:6"
																		},
																		"nativeSrc": "1530:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nativeSrc": "1499:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:6"
																},
																"nativeSrc": "1495:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:6"
															},
															"nativeSrc": "1492:52:6",
															"nodeType": "YulIf",
															"src": "1492:52:6"
														},
														{
															"nativeSrc": "1553:39:6",
															"nodeType": "YulAssignment",
															"src": "1553:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:6"
																},
																"nativeSrc": "1563:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:6"
																}
															]
														},
														{
															"nativeSrc": "1601:48:6",
															"nodeType": "YulAssignment",
															"src": "1601:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:6"
																		},
																		"nativeSrc": "1630:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:6"
																},
																"nativeSrc": "1611:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:6"
																}
															]
														},
														{
															"nativeSrc": "1658:42:6",
															"nodeType": "YulAssignment",
															"src": "1658:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:6"
																		},
																		"nativeSrc": "1681:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:6"
																},
																"nativeSrc": "1668:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:6",
														"nodeType": "YulTypedName",
														"src": "1432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:6",
														"nodeType": "YulTypedName",
														"src": "1443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:6",
														"nodeType": "YulTypedName",
														"src": "1455:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:6",
														"nodeType": "YulTypedName",
														"src": "1463:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:6",
														"nodeType": "YulTypedName",
														"src": "1471:6:6",
														"type": ""
													}
												],
												"src": "1378:328:6"
											},
											{
												"body": {
													"nativeSrc": "1808:87:6",
													"nodeType": "YulBlock",
													"src": "1808:87:6",
													"statements": [
														{
															"nativeSrc": "1818:26:6",
															"nodeType": "YulAssignment",
															"src": "1818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:6"
																},
																"nativeSrc": "1826:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nativeSrc": "1871:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:6"
																},
																"nativeSrc": "1853:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:6"
															},
															"nativeSrc": "1853:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:6",
														"nodeType": "YulTypedName",
														"src": "1777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:6",
														"nodeType": "YulTypedName",
														"src": "1788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:6",
														"nodeType": "YulTypedName",
														"src": "1799:4:6",
														"type": ""
													}
												],
												"src": "1711:184:6"
											},
											{
												"body": {
													"nativeSrc": "1970:116:6",
													"nodeType": "YulBlock",
													"src": "1970:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:6",
																"nodeType": "YulBlock",
																"src": "2016:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:6"
																			},
																			"nativeSrc": "2018:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:6"
																		},
																		"nativeSrc": "2018:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:6"
																		},
																		"nativeSrc": "1987:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nativeSrc": "1983:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:6"
															},
															"nativeSrc": "1980:52:6",
															"nodeType": "YulIf",
															"src": "1980:52:6"
														},
														{
															"nativeSrc": "2041:39:6",
															"nodeType": "YulAssignment",
															"src": "2041:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:6"
																},
																"nativeSrc": "2051:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:6",
														"nodeType": "YulTypedName",
														"src": "1936:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:6",
														"nodeType": "YulTypedName",
														"src": "1947:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:6",
														"nodeType": "YulTypedName",
														"src": "1959:6:6",
														"type": ""
													}
												],
												"src": "1900:186:6"
											},
											{
												"body": {
													"nativeSrc": "2178:173:6",
													"nodeType": "YulBlock",
													"src": "2178:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:6",
																"nodeType": "YulBlock",
																"src": "2224:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:6"
																			},
																			"nativeSrc": "2226:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:6"
																		},
																		"nativeSrc": "2226:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:6"
																		},
																		"nativeSrc": "2195:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:6"
																},
																"nativeSrc": "2191:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:6"
															},
															"nativeSrc": "2188:52:6",
															"nodeType": "YulIf",
															"src": "2188:52:6"
														},
														{
															"nativeSrc": "2249:39:6",
															"nodeType": "YulAssignment",
															"src": "2249:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:6"
																},
																"nativeSrc": "2259:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:6"
																}
															]
														},
														{
															"nativeSrc": "2297:48:6",
															"nodeType": "YulAssignment",
															"src": "2297:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:6"
																		},
																		"nativeSrc": "2326:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:6"
																},
																"nativeSrc": "2307:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:6",
														"nodeType": "YulTypedName",
														"src": "2136:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:6",
														"nodeType": "YulTypedName",
														"src": "2147:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:6",
														"nodeType": "YulTypedName",
														"src": "2159:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:6",
														"nodeType": "YulTypedName",
														"src": "2167:6:6",
														"type": ""
													}
												],
												"src": "2091:260:6"
											},
											{
												"body": {
													"nativeSrc": "2411:325:6",
													"nodeType": "YulBlock",
													"src": "2411:325:6",
													"statements": [
														{
															"nativeSrc": "2421:22:6",
															"nodeType": "YulAssignment",
															"src": "2421:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:6"
																},
																"nativeSrc": "2431:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:6"
																}
															]
														},
														{
															"nativeSrc": "2452:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:6"
																},
																"nativeSrc": "2478:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:6",
																"nodeType": "YulBlock",
																"src": "2529:31:6",
																"statements": [
																	{
																		"nativeSrc": "2531:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:6"
																			},
																			"nativeSrc": "2541:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:6"
																},
																"nativeSrc": "2502:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:6"
															},
															"nativeSrc": "2499:61:6",
															"nodeType": "YulIf",
															"src": "2499:61:6"
														},
														{
															"body": {
																"nativeSrc": "2619:111:6",
																"nodeType": "YulBlock",
																"src": "2619:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:6"
																					},
																					"nativeSrc": "2643:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:6"
																			},
																			"nativeSrc": "2633:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:6"
																		},
																		"nativeSrc": "2633:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:6"
																			},
																			"nativeSrc": "2677:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:6"
																		},
																		"nativeSrc": "2677:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:6"
																			},
																			"nativeSrc": "2705:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:6"
																		},
																		"nativeSrc": "2705:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:6"
																		},
																		"nativeSrc": "2595:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:6"
																},
																"nativeSrc": "2572:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:6"
															},
															"nativeSrc": "2569:161:6",
															"nodeType": "YulIf",
															"src": "2569:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:6",
														"nodeType": "YulTypedName",
														"src": "2391:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:6",
														"nodeType": "YulTypedName",
														"src": "2400:6:6",
														"type": ""
													}
												],
												"src": "2356:380:6"
											},
											{
												"body": {
													"nativeSrc": "2789:174:6",
													"nodeType": "YulBlock",
													"src": "2789:174:6",
													"statements": [
														{
															"nativeSrc": "2799:16:6",
															"nodeType": "YulAssignment",
															"src": "2799:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2810:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2813:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:6"
																},
																"nativeSrc": "2806:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2806:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2799:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2846:111:6",
																"nodeType": "YulBlock",
																"src": "2846:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2867:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2874:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2879:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2870:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:6"
																					},
																					"nativeSrc": "2870:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2860:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:6"
																			},
																			"nativeSrc": "2860:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:6"
																		},
																		"nativeSrc": "2860:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2911:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2914:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2904:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:6"
																			},
																			"nativeSrc": "2904:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:6"
																		},
																		"nativeSrc": "2904:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2939:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2942:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2932:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:6"
																			},
																			"nativeSrc": "2932:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:6"
																		},
																		"nativeSrc": "2932:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2830:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2833:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2827:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:6"
																},
																"nativeSrc": "2827:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2827:10:6"
															},
															"nativeSrc": "2824:133:6",
															"nodeType": "YulIf",
															"src": "2824:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2741:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2772:1:6",
														"nodeType": "YulTypedName",
														"src": "2772:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2775:1:6",
														"nodeType": "YulTypedName",
														"src": "2775:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2781:3:6",
														"nodeType": "YulTypedName",
														"src": "2781:3:6",
														"type": ""
													}
												],
												"src": "2741:222:6"
											},
											{
												"body": {
													"nativeSrc": "3142:227:6",
													"nodeType": "YulBlock",
													"src": "3142:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3159:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3170:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3152:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:6"
																},
																"nativeSrc": "3152:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3152:21:6"
															},
															"nativeSrc": "3152:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3193:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3204:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3189:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:6"
																		},
																		"nativeSrc": "3189:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3182:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:6"
																},
																"nativeSrc": "3182:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3182:30:6"
															},
															"nativeSrc": "3182:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3243:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3228:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:6"
																		},
																		"nativeSrc": "3228:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3248:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:6"
																},
																"nativeSrc": "3221:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3221:62:6"
															},
															"nativeSrc": "3221:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3303:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3314:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3299:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:6"
																		},
																		"nativeSrc": "3299:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3319:7:6",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:6"
																},
																"nativeSrc": "3292:35:6",
																"nodeType": "YulFunctionCall",
																"src": "3292:35:6"
															},
															"nativeSrc": "3292:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:6"
														},
														{
															"nativeSrc": "3336:27:6",
															"nodeType": "YulAssignment",
															"src": "3336:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3344:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:6"
																},
																"nativeSrc": "3344:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3344:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3336:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2968:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3119:9:6",
														"nodeType": "YulTypedName",
														"src": "3119:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3133:4:6",
														"nodeType": "YulTypedName",
														"src": "3133:4:6",
														"type": ""
													}
												],
												"src": "2968:401:6"
											},
											{
												"body": {
													"nativeSrc": "3548:226:6",
													"nodeType": "YulBlock",
													"src": "3548:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3565:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3576:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3558:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:6"
																},
																"nativeSrc": "3558:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3558:21:6"
															},
															"nativeSrc": "3558:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3599:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3610:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3595:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:6"
																		},
																		"nativeSrc": "3595:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3588:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:6"
																},
																"nativeSrc": "3588:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3588:30:6"
															},
															"nativeSrc": "3588:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3638:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3649:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3634:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:6"
																		},
																		"nativeSrc": "3634:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3654:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3627:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:6"
																},
																"nativeSrc": "3627:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3627:62:6"
															},
															"nativeSrc": "3627:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3709:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3720:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3705:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:6"
																		},
																		"nativeSrc": "3705:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3725:6:6",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3698:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:6"
																},
																"nativeSrc": "3698:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3698:34:6"
															},
															"nativeSrc": "3698:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:6"
														},
														{
															"nativeSrc": "3741:27:6",
															"nodeType": "YulAssignment",
															"src": "3741:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3753:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3764:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3749:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:6"
																},
																"nativeSrc": "3749:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3749:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3741:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3374:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3525:9:6",
														"nodeType": "YulTypedName",
														"src": "3525:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3539:4:6",
														"nodeType": "YulTypedName",
														"src": "3539:4:6",
														"type": ""
													}
												],
												"src": "3374:400:6"
											},
											{
												"body": {
													"nativeSrc": "3953:224:6",
													"nodeType": "YulBlock",
													"src": "3953:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3970:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3963:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:6"
																},
																"nativeSrc": "3963:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3963:21:6"
															},
															"nativeSrc": "3963:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4004:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4015:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4000:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:6"
																		},
																		"nativeSrc": "4000:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4020:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:6"
																},
																"nativeSrc": "3993:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3993:30:6"
															},
															"nativeSrc": "3993:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4043:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4054:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4039:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:6"
																		},
																		"nativeSrc": "4039:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4059:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4032:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:6"
																},
																"nativeSrc": "4032:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4032:62:6"
															},
															"nativeSrc": "4032:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4125:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4110:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:6"
																		},
																		"nativeSrc": "4110:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4103:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:6"
																},
																"nativeSrc": "4103:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4103:32:6"
															},
															"nativeSrc": "4103:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:6"
														},
														{
															"nativeSrc": "4144:27:6",
															"nodeType": "YulAssignment",
															"src": "4144:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4156:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4167:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4152:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:6"
																},
																"nativeSrc": "4152:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4152:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4144:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3779:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3930:9:6",
														"nodeType": "YulTypedName",
														"src": "3930:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3944:4:6",
														"nodeType": "YulTypedName",
														"src": "3944:4:6",
														"type": ""
													}
												],
												"src": "3779:398:6"
											},
											{
												"body": {
													"nativeSrc": "4356:179:6",
													"nodeType": "YulBlock",
													"src": "4356:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4373:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4366:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:6"
																},
																"nativeSrc": "4366:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4366:21:6"
															},
															"nativeSrc": "4366:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4407:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4418:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4403:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:6"
																		},
																		"nativeSrc": "4403:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:6"
																},
																"nativeSrc": "4396:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4396:30:6"
															},
															"nativeSrc": "4396:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4442:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:6"
																		},
																		"nativeSrc": "4442:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4462:31:6",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4435:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:6"
																},
																"nativeSrc": "4435:59:6",
																"nodeType": "YulFunctionCall",
																"src": "4435:59:6"
															},
															"nativeSrc": "4435:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:6"
														},
														{
															"nativeSrc": "4503:26:6",
															"nodeType": "YulAssignment",
															"src": "4503:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4515:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4511:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:6"
																},
																"nativeSrc": "4511:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4511:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4503:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4182:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4333:9:6",
														"nodeType": "YulTypedName",
														"src": "4333:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4347:4:6",
														"nodeType": "YulTypedName",
														"src": "4347:4:6",
														"type": ""
													}
												],
												"src": "4182:353:6"
											},
											{
												"body": {
													"nativeSrc": "4714:227:6",
													"nodeType": "YulBlock",
													"src": "4714:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4731:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4742:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4724:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:6"
																},
																"nativeSrc": "4724:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4724:21:6"
															},
															"nativeSrc": "4724:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4765:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4776:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4761:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:6"
																		},
																		"nativeSrc": "4761:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4781:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:6"
																},
																"nativeSrc": "4754:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4754:30:6"
															},
															"nativeSrc": "4754:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4804:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4815:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4800:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:6"
																		},
																		"nativeSrc": "4800:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4820:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4793:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:6"
																},
																"nativeSrc": "4793:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4793:62:6"
															},
															"nativeSrc": "4793:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4875:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4886:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:6"
																		},
																		"nativeSrc": "4871:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4891:7:6",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:6"
																},
																"nativeSrc": "4864:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4864:35:6"
															},
															"nativeSrc": "4864:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:6"
														},
														{
															"nativeSrc": "4908:27:6",
															"nodeType": "YulAssignment",
															"src": "4908:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4920:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4931:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4916:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:6"
																},
																"nativeSrc": "4916:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4916:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4908:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4540:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4691:9:6",
														"nodeType": "YulTypedName",
														"src": "4691:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4705:4:6",
														"nodeType": "YulTypedName",
														"src": "4705:4:6",
														"type": ""
													}
												],
												"src": "4540:401:6"
											},
											{
												"body": {
													"nativeSrc": "5120:225:6",
													"nodeType": "YulBlock",
													"src": "5120:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5130:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:6"
																},
																"nativeSrc": "5130:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5130:21:6"
															},
															"nativeSrc": "5130:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5171:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5182:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:6"
																		},
																		"nativeSrc": "5167:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:6"
																},
																"nativeSrc": "5160:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5160:30:6"
															},
															"nativeSrc": "5160:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5210:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5221:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5206:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:6"
																		},
																		"nativeSrc": "5206:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5226:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5199:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:6"
																},
																"nativeSrc": "5199:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5199:62:6"
															},
															"nativeSrc": "5199:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5292:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5277:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:6"
																		},
																		"nativeSrc": "5277:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5297:5:6",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:6"
																},
																"nativeSrc": "5270:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5270:33:6"
															},
															"nativeSrc": "5270:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:6"
														},
														{
															"nativeSrc": "5312:27:6",
															"nodeType": "YulAssignment",
															"src": "5312:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5324:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5320:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:6"
																},
																"nativeSrc": "5320:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5320:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5312:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4946:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5097:9:6",
														"nodeType": "YulTypedName",
														"src": "5097:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5111:4:6",
														"nodeType": "YulTypedName",
														"src": "5111:4:6",
														"type": ""
													}
												],
												"src": "4946:399:6"
											},
											{
												"body": {
													"nativeSrc": "5524:228:6",
													"nodeType": "YulBlock",
													"src": "5524:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5534:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:6"
																},
																"nativeSrc": "5534:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5534:21:6"
															},
															"nativeSrc": "5534:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5575:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5586:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5571:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:6"
																		},
																		"nativeSrc": "5571:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:6"
																},
																"nativeSrc": "5564:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5564:30:6"
															},
															"nativeSrc": "5564:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5614:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5625:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5610:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:6"
																		},
																		"nativeSrc": "5610:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5630:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5603:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:6"
																},
																"nativeSrc": "5603:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5603:62:6"
															},
															"nativeSrc": "5603:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5685:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5696:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5681:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:6"
																		},
																		"nativeSrc": "5681:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5701:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5674:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:6"
																},
																"nativeSrc": "5674:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5674:36:6"
															},
															"nativeSrc": "5674:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:6"
														},
														{
															"nativeSrc": "5719:27:6",
															"nodeType": "YulAssignment",
															"src": "5719:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5731:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5742:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5727:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:6"
																},
																"nativeSrc": "5727:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5727:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5719:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5350:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5501:9:6",
														"nodeType": "YulTypedName",
														"src": "5501:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5515:4:6",
														"nodeType": "YulTypedName",
														"src": "5515:4:6",
														"type": ""
													}
												],
												"src": "5350:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d636600461071b565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610743565b610244565b604051601281526020016100bf565b6100db61012d36600461071b565b610267565b6100ef61014036600461077c565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db61017036600461071b565b610297565b6100db61018336600461071b565b610316565b6100ef61019636600461079c565b610323565b6060600380546101aa906107cd565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107cd565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b6102839190610805565b61034d565b6060600480546101aa906107cd565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b908490610805565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b5f602080835283518060208501525f5b818110156106e0578581018301518582016040015282016106c4565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610716575f80fd5b919050565b5f806040838503121561072c575f80fd5b61073583610700565b946020939093013593505050565b5f805f60608486031215610755575f80fd5b61075e84610700565b925061076c60208501610700565b9150604084013590509250925092565b5f6020828403121561078c575f80fd5b61079582610700565b9392505050565b5f80604083850312156107ad575f80fd5b6107b683610700565b91506107c460208401610700565b90509250929050565b600181811c908216806107e157607f821691505b6020821081036107ff57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220bfc31879d63b51b01cbe985c5871854005bb9b62f8e09d7b81cfdf32985ce38664736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7CD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x805 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6C4 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x716 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x735 DUP4 PUSH2 0x700 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75E DUP5 PUSH2 0x700 JUMP JUMPDEST SWAP3 POP PUSH2 0x76C PUSH1 0x20 DUP6 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x795 DUP3 PUSH2 0x700 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP4 PUSH2 0x700 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 PUSH1 0x20 DUP5 ADD PUSH2 0x700 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xC3 XOR PUSH26 0xD63B51B01CBE985C5871854005BB9B62F8E09D7B81CFDF32985C 0xE3 DUP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1403:11214:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;4433:197:1;1004:187:6;3244:106:1;3331:12;;3244:106;;;1342:25:6;;;1330:2;1315:18;3244:106:1;1196:177:6;5192:286:1;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1853:36:6;;1841:2;1826:18;3093:91:1;1711:184:6;5873:234:1;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:1;719:10:4;4586:7:1;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:4;5375:38:1;5391:4;719:10:4;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:234::-;5961:4;719:10:4;6015:64:1;719:10:4;6031:7:1;6068:10;6040:25;719:10:4;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:1;6768:25;719:10:4;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;3170:2:6;6803:85:1;;;3152:21:6;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:6;;;3292:35;3344:19;;6803:85:1;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:1;719:10:4;3879:2:1;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:1;;10233:68;;;;-1:-1:-1;;;10233:68:1;;3576:2:6;10233:68:1;;;3558:21:6;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:6;;;3698:34;3749:19;;10233:68:1;3374:400:6;10233:68:1;-1:-1:-1;;;;;10319:21:1;;10311:68;;;;-1:-1:-1;;;10311:68:1;;3981:2:6;10311:68:1;;;3963:21:6;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:6;;;4103:32;4152:19;;10311:68:1;3779:398:6;10311:68:1;-1:-1:-1;;;;;10390:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1342:25:6;;;10441:32:1;;1315:18:6;10441:32:1;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:1;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:1;;4384:2:6;11010:68:1;;;4366:21:6;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11010:68:1;4182:353:6;11010:68:1;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:1;;7593:68;;;;-1:-1:-1;;;7593:68:1;;4742:2:6;7593:68:1;;;4724:21:6;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:6;;;4864:35;4916:19;;7593:68:1;4540:401:6;7593:68:1;-1:-1:-1;;;;;7679:16:1;;7671:64;;;;-1:-1:-1;;;7671:64:1;;5148:2:6;7671:64:1;;;5130:21:6;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:6;;;5270:33;5320:19;;7671:64:1;4946:399:6;7671:64:1;-1:-1:-1;;;;;7817:15:1;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:1;;5552:2:6;7842:72:1;;;5534:21:6;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:6;;;5674:36;5727:19;;7842:72:1;5350:402:6;7842:72:1;-1:-1:-1;;;;;7948:15:1;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:1;8054:4;-1:-1:-1;;;;;8045:26:1;;8064:6;8045:26;;;;1342:25:6;;1330:2;1315:18;;1196:177;8045:26:1;;;;;;;;8082:37;11786:121;14:548:6;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:6:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "427600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2077,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1799,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1816,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1853,
									"end": 1856,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1849,
									"end": 1869,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1870,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1893,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1883,
									"end": 1898,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2170,
									"end": 2173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2217,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2260,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2325,
									"end": 2327,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2330,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2443,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2417,
									"end": 2421,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2444,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2505,
									"end": 2510,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2502,
									"end": 2515,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2538,
									"end": 2539,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2527,
									"end": 2540,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2942,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3058,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3021,
									"end": 3059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3015,
									"end": 3019,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2971,
									"end": 3068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3182,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2725,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2740,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2712,
									"end": 2741,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2742,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2749,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2699,
									"end": 2756,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3354,
									"end": 3368,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3443,
									"end": 3469,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3509,
									"end": 3510,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3816,
									"end": 3820,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfc31879d63b51b01cbe985c5871854005bb9b62f8e09d7b81cfdf32985ce38664736f6c63430008180033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10918,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11120,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8006,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.0/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.7.0/utils/Context.sol",
								"sosh/SST.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sosh/SST.sol": {
				"SST": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "GAS_FEE_TAP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINT_PRICE_PER_TOKEN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "destinationAddress",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "aAWallet",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "aAWallet",
									"type": "address"
								}
							],
							"name": "mintWithGasTap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sosh/SST.sol\":180:2582  contract SST is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"sosh/SST.sol\":369:410  constructor() ERC20(\"SoSH SST\", \"SST\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc2, 0x14dbd4d20814d4d5)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x14d4d5)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2077:2084  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":955:967  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"sosh/SST.sol\":180:2582  contract SST is ERC20, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_31:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_32:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_30:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_7:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1555:1652   */\n  tag_39\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_41)\n    /* \"#utility.yul\":1776:2439   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_46:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_49:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\ntag_23:\n    /* \"sosh/SST.sol\":180:2582  contract SST is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sosh/SST.sol\":180:2582  contract SST is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfcd3533c\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x94bf804d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4fa1d436\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x695d2f13\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0802c2cd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sosh/SST.sol\":217:279  uint256 public constant MINT_PRICE_PER_TOKEN = 675000000000000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n        /* \"sosh/SST.sol\":264:279  675000000000000 */\n      0x0265e8af393000\n        /* \"sosh/SST.sol\":217:279  uint256 public constant MINT_PRICE_PER_TOKEN = 675000000000000 */\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":713:738   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":686:704   */\n      add\n        /* \"sosh/SST.sol\":217:279  uint256 public constant MINT_PRICE_PER_TOKEN = 675000000000000 */\n      tag_27\n        /* \"#utility.yul\":567:744   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1351:1365   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1344:1366   */\n      iszero\n        /* \"#utility.yul\":1326:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1314:1316   */\n      0x20\n        /* \"#utility.yul\":1299:1317   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":1186:1373   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_35\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_27\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_35\n      tag_58\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"sosh/SST.sol\":965:1762  function mintWithGasTap(uint256 tokenAmount, address aAWallet) public payable {... */\n    tag_9:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"sosh/SST.sol\":308:356  uint256 public constant GAS_FEE_TAP = 0.02 ether */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_30\n        /* \"sosh/SST.sol\":346:356  0.02 ether */\n      0x470de4df820000\n        /* \"sosh/SST.sol\":308:356  uint256 public constant GAS_FEE_TAP = 0.02 ether */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_30\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_61\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2496:2547   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2484:2486   */\n      0x20\n        /* \"#utility.yul\":2469:2487   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":2350:2553   */\n      jump\n        /* \"sosh/SST.sol\":451:882  function mint(uint256 tokenAmount, address aAWallet) public payable {... */\n    tag_14:\n      tag_61\n      tag_84\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_25\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_35\n      tag_92\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_35\n      tag_97\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_30\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_61\n      tag_108\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"sosh/SST.sol\":1824:2283  function burn(uint256 amount, address destinationAddress) public {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_61\n      tag_112\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_124\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4612:4623  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_121:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_49:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_129\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_131\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_132\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_131:\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_124\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_137\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_104\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"sosh/SST.sol\":965:1762  function mintWithGasTap(uint256 tokenAmount, address aAWallet) public payable {... */\n    tag_64:\n        /* \"sosh/SST.sol\":1053:1074  uint256 totalMintCost */\n      0x00\n        /* \"sosh/SST.sol\":1114:1121  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/SST.sol\":1077:1111  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_141\n        /* \"sosh/SST.sol\":1100:1111  tokenAmount */\n      dup5\n        /* \"sosh/SST.sol\":264:279  675000000000000 */\n      0x0265e8af393000\n        /* \"sosh/SST.sol\":1077:1111  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"sosh/SST.sol\":1077:1121  MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"sosh/SST.sol\":1053:1121  uint256 totalMintCost = MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether */\n      swap1\n      pop\n        /* \"sosh/SST.sol\":1131:1145  uint256 gasFee */\n      0x00\n        /* \"sosh/SST.sol\":1178:1185  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/SST.sol\":1148:1175  totalMintCost * GAS_FEE_TAP */\n      tag_145\n        /* \"sosh/SST.sol\":346:356  0.02 ether */\n      0x470de4df820000\n        /* \"sosh/SST.sol\":1053:1121  uint256 totalMintCost = MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether */\n      dup5\n        /* \"sosh/SST.sol\":1148:1175  totalMintCost * GAS_FEE_TAP */\n      tag_142\n      jump\t// in\n    tag_145:\n        /* \"sosh/SST.sol\":1148:1185  totalMintCost * GAS_FEE_TAP / 1 ether */\n      tag_146\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_146:\n        /* \"sosh/SST.sol\":1131:1185  uint256 gasFee = totalMintCost * GAS_FEE_TAP / 1 ether */\n      swap1\n      pop\n        /* \"sosh/SST.sol\":1261:1283  totalMintCost + gasFee */\n      tag_147\n        /* \"sosh/SST.sol\":1131:1185  uint256 gasFee = totalMintCost * GAS_FEE_TAP / 1 ether */\n      dup2\n        /* \"sosh/SST.sol\":1261:1274  totalMintCost */\n      dup4\n        /* \"sosh/SST.sol\":1261:1283  totalMintCost + gasFee */\n      tag_139\n      jump\t// in\n    tag_147:\n        /* \"sosh/SST.sol\":1248:1257  msg.value */\n      callvalue\n        /* \"sosh/SST.sol\":1248:1283  msg.value >= totalMintCost + gasFee */\n      lt\n      iszero\n        /* \"sosh/SST.sol\":1240:1309  require(msg.value >= totalMintCost + gasFee, \"Insufficient ETH sent\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4067:4069   */\n      0x20\n        /* \"sosh/SST.sol\":1240:1309  require(msg.value >= totalMintCost + gasFee, \"Insufficient ETH sent\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4049:4070   */\n      mstore\n        /* \"#utility.yul\":4106:4108   */\n      0x15\n        /* \"#utility.yul\":4086:4104   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4079:4109   */\n      mstore\n      shl(0x5a, 0x125b9cdd59999a58da595b9d08115512081cd95b9d)\n        /* \"#utility.yul\":4125:4143   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4118:4169   */\n      mstore\n        /* \"#utility.yul\":4186:4204   */\n      0x64\n      add\n        /* \"sosh/SST.sol\":1240:1309  require(msg.value >= totalMintCost + gasFee, \"Insufficient ETH sent\") */\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"sosh/SST.sol\":1321:1349  _mint(aAWallet, tokenAmount) */\n      tag_151\n        /* \"sosh/SST.sol\":1327:1335  aAWallet */\n      dup4\n        /* \"sosh/SST.sol\":1337:1348  tokenAmount */\n      dup6\n        /* \"sosh/SST.sol\":1321:1326  _mint */\n      tag_152\n        /* \"sosh/SST.sol\":1321:1349  _mint(aAWallet, tokenAmount) */\n      jump\t// in\n    tag_151:\n        /* \"sosh/SST.sol\":1369:1382  bool success1 */\n      0x00\n        /* \"sosh/SST.sol\":1396:1404  aAWallet */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/SST.sol\":1388:1410  payable(aAWallet).call */\n      and\n        /* \"sosh/SST.sol\":1419:1425  gasFee */\n      dup3\n        /* \"sosh/SST.sol\":1388:1431  payable(aAWallet).call{value: (gasFee)}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_157\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_156)\n    tag_157:\n      0x60\n      swap2\n      pop\n    tag_156:\n      pop\n        /* \"sosh/SST.sol\":1368:1431  (bool success1, ) = payable(aAWallet).call{value: (gasFee)}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sosh/SST.sol\":1449:1457  success1 */\n      dup1\n        /* \"sosh/SST.sol\":1441:1480  require(success1, \"Unable to send gas\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4627:4629   */\n      0x20\n        /* \"sosh/SST.sol\":1441:1480  require(success1, \"Unable to send gas\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4609:4630   */\n      mstore\n        /* \"#utility.yul\":4666:4668   */\n      0x12\n        /* \"#utility.yul\":4646:4664   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4639:4669   */\n      mstore\n      shl(0x70, 0x556e61626c6520746f2073656e6420676173)\n        /* \"#utility.yul\":4685:4703   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4678:4726   */\n      mstore\n        /* \"#utility.yul\":4743:4761   */\n      0x64\n      add\n        /* \"sosh/SST.sol\":1441:1480  require(success1, \"Unable to send gas\") */\n      tag_149\n        /* \"#utility.yul\":4425:4767   */\n      jump\n        /* \"sosh/SST.sol\":1441:1480  require(success1, \"Unable to send gas\") */\n    tag_158:\n        /* \"sosh/SST.sol\":1552:1574  totalMintCost + gasFee */\n      tag_161\n        /* \"sosh/SST.sol\":1568:1574  gasFee */\n      dup3\n        /* \"sosh/SST.sol\":1552:1565  totalMintCost */\n      dup5\n        /* \"sosh/SST.sol\":1552:1574  totalMintCost + gasFee */\n      tag_139\n      jump\t// in\n    tag_161:\n        /* \"sosh/SST.sol\":1540:1549  msg.value */\n      callvalue\n        /* \"sosh/SST.sol\":1540:1574  msg.value > totalMintCost + gasFee */\n      gt\n        /* \"sosh/SST.sol\":1536:1756  if (msg.value > totalMintCost + gasFee) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"sosh/SST.sol\":1591:1607  bool successBack */\n      0x00\n        /* \"sosh/SST.sol\":1621:1631  msg.sender */\n      caller\n        /* \"sosh/SST.sol\":1672:1678  gasFee */\n      dup4\n        /* \"sosh/SST.sol\":1644:1669  msg.value - totalMintCost */\n      tag_163\n        /* \"sosh/SST.sol\":1656:1669  totalMintCost */\n      dup7\n        /* \"sosh/SST.sol\":1644:1653  msg.value */\n      callvalue\n        /* \"sosh/SST.sol\":1644:1669  msg.value - totalMintCost */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"sosh/SST.sol\":1644:1678  msg.value - totalMintCost + gasFee */\n      tag_165\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_165:\n        /* \"sosh/SST.sol\":1613:1683  payable(msg.sender).call{value:msg.value - totalMintCost + gasFee}(\"\") */\n      mload(0x40)\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_169\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_168)\n    tag_169:\n      0x60\n      swap2\n      pop\n    tag_168:\n      pop\n        /* \"sosh/SST.sol\":1590:1683  (bool successBack, ) = payable(msg.sender).call{value:msg.value - totalMintCost + gasFee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sosh/SST.sol\":1705:1716  successBack */\n      dup1\n        /* \"sosh/SST.sol\":1697:1745  require(successBack, \"Unable to send back fund\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5107:5109   */\n      0x20\n        /* \"sosh/SST.sol\":1697:1745  require(successBack, \"Unable to send back fund\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5089:5110   */\n      mstore\n        /* \"#utility.yul\":5146:5148   */\n      0x18\n        /* \"#utility.yul\":5126:5144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5119:5149   */\n      mstore\n        /* \"#utility.yul\":5185:5211   */\n      0x556e61626c6520746f2073656e64206261636b2066756e640000000000000000\n        /* \"#utility.yul\":5165:5183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5158:5212   */\n      mstore\n        /* \"#utility.yul\":5229:5247   */\n      0x64\n      add\n        /* \"sosh/SST.sol\":1697:1745  require(successBack, \"Unable to send back fund\") */\n      tag_149\n        /* \"#utility.yul\":4905:5253   */\n      jump\n        /* \"sosh/SST.sol\":1697:1745  require(successBack, \"Unable to send back fund\") */\n    tag_170:\n        /* \"sosh/SST.sol\":1576:1756  {... */\n      pop\n        /* \"sosh/SST.sol\":1536:1756  if (msg.value > totalMintCost + gasFee) {... */\n    tag_162:\n        /* \"sosh/SST.sol\":1043:1762  {... */\n      pop\n      pop\n      pop\n        /* \"sosh/SST.sol\":965:1762  function mintWithGasTap(uint256 tokenAmount, address aAWallet) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_178\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"sosh/SST.sol\":451:882  function mint(uint256 tokenAmount, address aAWallet) public payable {... */\n    tag_85:\n        /* \"sosh/SST.sol\":587:594  1 ether */\n      0x0de0b6b3a7640000\n        /* \"sosh/SST.sol\":550:584  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_182\n        /* \"sosh/SST.sol\":573:584  tokenAmount */\n      dup4\n        /* \"sosh/SST.sol\":264:279  675000000000000 */\n      0x0265e8af393000\n        /* \"sosh/SST.sol\":550:584  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_142\n      jump\t// in\n    tag_182:\n        /* \"sosh/SST.sol\":550:594  MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether */\n      tag_183\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_183:\n        /* \"sosh/SST.sol\":537:546  msg.value */\n      callvalue\n        /* \"sosh/SST.sol\":537:594  msg.value >= MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether */\n      lt\n      iszero\n        /* \"sosh/SST.sol\":529:620  require(msg.value >= MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether, \"Insufficient ETH sent\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4067:4069   */\n      0x20\n        /* \"sosh/SST.sol\":529:620  require(msg.value >= MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether, \"Insufficient ETH sent\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4049:4070   */\n      mstore\n        /* \"#utility.yul\":4106:4108   */\n      0x15\n        /* \"#utility.yul\":4086:4104   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4079:4109   */\n      mstore\n      shl(0x5a, 0x125b9cdd59999a58da595b9d08115512081cd95b9d)\n        /* \"#utility.yul\":4125:4143   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4118:4169   */\n      mstore\n        /* \"#utility.yul\":4186:4204   */\n      0x64\n      add\n        /* \"sosh/SST.sol\":529:620  require(msg.value >= MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether, \"Insufficient ETH sent\") */\n      tag_149\n        /* \"#utility.yul\":3865:4210   */\n      jump\n        /* \"sosh/SST.sol\":529:620  require(msg.value >= MINT_PRICE_PER_TOKEN * tokenAmount / 1 ether, \"Insufficient ETH sent\") */\n    tag_184:\n        /* \"sosh/SST.sol\":631:659  _mint(aAWallet, tokenAmount) */\n      tag_186\n        /* \"sosh/SST.sol\":637:645  aAWallet */\n      dup2\n        /* \"sosh/SST.sol\":647:658  tokenAmount */\n      dup4\n        /* \"sosh/SST.sol\":631:636  _mint */\n      tag_152\n        /* \"sosh/SST.sol\":631:659  _mint(aAWallet, tokenAmount) */\n      jump\t// in\n    tag_186:\n        /* \"sosh/SST.sol\":739:773  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_187\n        /* \"sosh/SST.sol\":762:773  tokenAmount */\n      dup3\n        /* \"sosh/SST.sol\":264:279  675000000000000 */\n      0x0265e8af393000\n        /* \"sosh/SST.sol\":739:773  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"sosh/SST.sol\":727:736  msg.value */\n      callvalue\n        /* \"sosh/SST.sol\":727:773  msg.value > MINT_PRICE_PER_TOKEN * tokenAmount */\n      gt\n        /* \"sosh/SST.sol\":723:876  if (msg.value > MINT_PRICE_PER_TOKEN * tokenAmount) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"sosh/SST.sol\":797:807  msg.sender */\n      caller\n        /* \"sosh/SST.sol\":789:865  payable(msg.sender).transfer(msg.value - MINT_PRICE_PER_TOKEN * tokenAmount) */\n      0x08fc\n        /* \"sosh/SST.sol\":830:864  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_189\n        /* \"sosh/SST.sol\":853:864  tokenAmount */\n      dup5\n        /* \"sosh/SST.sol\":264:279  675000000000000 */\n      0x0265e8af393000\n        /* \"sosh/SST.sol\":830:864  MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"sosh/SST.sol\":818:864  msg.value - MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_190\n      swap1\n        /* \"sosh/SST.sol\":818:827  msg.value */\n      callvalue\n        /* \"sosh/SST.sol\":818:864  msg.value - MINT_PRICE_PER_TOKEN * tokenAmount */\n      tag_164\n      jump\t// in\n    tag_190:\n        /* \"sosh/SST.sol\":789:865  payable(msg.sender).transfer(msg.value - MINT_PRICE_PER_TOKEN * tokenAmount) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n        /* \"sosh/SST.sol\":723:876  if (msg.value > MINT_PRICE_PER_TOKEN * tokenAmount) {... */\n    tag_188:\n        /* \"sosh/SST.sol\":451:882  function mint(uint256 tokenAmount, address aAWallet) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_201\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_104\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5460:5462   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5442:5463   */\n      mstore\n        /* \"#utility.yul\":5499:5501   */\n      0x25\n        /* \"#utility.yul\":5479:5497   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5472:5502   */\n      mstore\n        /* \"#utility.yul\":5538:5572   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5518:5536   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5511:5573   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5589:5607   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5582:5617   */\n      mstore\n        /* \"#utility.yul\":5634:5653   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_149\n        /* \"#utility.yul\":5258:5659   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_202:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_131\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_124\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_132\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5866:5868   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5848:5869   */\n      mstore\n        /* \"#utility.yul\":5905:5907   */\n      0x26\n        /* \"#utility.yul\":5885:5903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5878:5908   */\n      mstore\n        /* \"#utility.yul\":5944:5978   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5924:5942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5917:5979   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5995:6013   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5988:6024   */\n      mstore\n        /* \"#utility.yul\":6041:6060   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_149\n        /* \"#utility.yul\":5664:6066   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_213:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_216\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"sosh/SST.sol\":1824:2283  function burn(uint256 amount, address destinationAddress) public {... */\n    tag_113:\n        /* \"sosh/SST.sol\":1917:1927  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"sosh/SST.sol\":1932:1938  amount */\n      dup3\n      gt\n        /* \"sosh/SST.sol\":1907:1938  balanceOf(msg.sender) >= amount */\n      iszero\n        /* \"sosh/SST.sol\":1899:1974  require(balanceOf(msg.sender) >= amount, \"Insufficient SST tokens to burn\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6273:6275   */\n      0x20\n        /* \"sosh/SST.sol\":1899:1974  require(balanceOf(msg.sender) >= amount, \"Insufficient SST tokens to burn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6255:6276   */\n      mstore\n        /* \"#utility.yul\":6312:6314   */\n      0x1f\n        /* \"#utility.yul\":6292:6310   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6285:6315   */\n      mstore\n        /* \"#utility.yul\":6351:6384   */\n      0x496e73756666696369656e742053535420746f6b656e7320746f206275726e00\n        /* \"#utility.yul\":6331:6349   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6324:6385   */\n      mstore\n        /* \"#utility.yul\":6402:6420   */\n      0x64\n      add\n        /* \"sosh/SST.sol\":1899:1974  require(balanceOf(msg.sender) >= amount, \"Insufficient SST tokens to burn\") */\n      tag_149\n        /* \"#utility.yul\":6071:6426   */\n      jump\n        /* \"sosh/SST.sol\":1899:1974  require(balanceOf(msg.sender) >= amount, \"Insufficient SST tokens to burn\") */\n    tag_219:\n        /* \"sosh/SST.sol\":1984:2009  _burn(msg.sender, amount) */\n      tag_222\n        /* \"sosh/SST.sol\":1990:2000  msg.sender */\n      caller\n        /* \"sosh/SST.sol\":2002:2008  amount */\n      dup4\n        /* \"sosh/SST.sol\":1984:1989  _burn */\n      tag_223\n        /* \"sosh/SST.sol\":1984:2009  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_222:\n        /* \"sosh/SST.sol\":2020:2037  uint256 ethAmount */\n      0x00\n        /* \"sosh/SST.sol\":2040:2069  amount * MINT_PRICE_PER_TOKEN */\n      tag_224\n        /* \"sosh/SST.sol\":264:279  675000000000000 */\n      0x0265e8af393000\n        /* \"sosh/SST.sol\":2040:2046  amount */\n      dup5\n        /* \"sosh/SST.sol\":2040:2069  amount * MINT_PRICE_PER_TOKEN */\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"sosh/SST.sol\":2020:2069  uint256 ethAmount = amount * MINT_PRICE_PER_TOKEN */\n      swap1\n      pop\n        /* \"sosh/SST.sol\":2112:2121  ethAmount */\n      dup1\n        /* \"sosh/SST.sol\":2087:2108  address(this).balance */\n      selfbalance\n        /* \"sosh/SST.sol\":2087:2121  address(this).balance >= ethAmount */\n      lt\n      iszero\n        /* \"sosh/SST.sol\":2079:2159  require(address(this).balance >= ethAmount, \"Contract does not have enough ETH\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6633:6635   */\n      0x20\n        /* \"sosh/SST.sol\":2079:2159  require(address(this).balance >= ethAmount, \"Contract does not have enough ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6615:6636   */\n      mstore\n        /* \"#utility.yul\":6672:6674   */\n      0x21\n        /* \"#utility.yul\":6652:6670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6645:6675   */\n      mstore\n        /* \"#utility.yul\":6711:6745   */\n      0x436f6e747261637420646f6573206e6f74206861766520656e6f756768204554\n        /* \"#utility.yul\":6691:6709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6684:6746   */\n      mstore\n      shl(0xfb, 0x09)\n        /* \"#utility.yul\":6762:6780   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6755:6786   */\n      mstore\n        /* \"#utility.yul\":6803:6822   */\n      0x84\n      add\n        /* \"sosh/SST.sol\":2079:2159  require(address(this).balance >= ethAmount, \"Contract does not have enough ETH\") */\n      tag_149\n        /* \"#utility.yul\":6431:6828   */\n      jump\n        /* \"sosh/SST.sol\":2079:2159  require(address(this).balance >= ethAmount, \"Contract does not have enough ETH\") */\n    tag_225:\n        /* \"sosh/SST.sol\":2171:2180  bool sent */\n      0x00\n        /* \"sosh/SST.sol\":2186:2204  destinationAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"sosh/SST.sol\":2186:2209  destinationAddress.call */\n      and\n        /* \"sosh/SST.sol\":2217:2226  ethAmount */\n      dup3\n        /* \"sosh/SST.sol\":2186:2231  destinationAddress.call{value: ethAmount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_231\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_230)\n    tag_231:\n      0x60\n      swap2\n      pop\n    tag_230:\n      pop\n        /* \"sosh/SST.sol\":2170:2231  (bool sent, ) = destinationAddress.call{value: ethAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sosh/SST.sol\":2249:2253  sent */\n      dup1\n        /* \"sosh/SST.sol\":2241:2276  require(sent, \"Failed to send ETH\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7035:7037   */\n      0x20\n        /* \"sosh/SST.sol\":2241:2276  require(sent, \"Failed to send ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7017:7038   */\n      mstore\n        /* \"#utility.yul\":7074:7076   */\n      0x12\n        /* \"#utility.yul\":7054:7072   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7047:7077   */\n      mstore\n      shl(0x73, 0x08cc2d2d8cac840e8de40e6cadcc8408aa89)\n        /* \"#utility.yul\":7093:7111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7086:7134   */\n      mstore\n        /* \"#utility.yul\":7151:7169   */\n      0x64\n      add\n        /* \"sosh/SST.sol\":2241:2276  require(sent, \"Failed to send ETH\") */\n      tag_149\n        /* \"#utility.yul\":6833:7175   */\n      jump\n        /* \"sosh/SST.sol\":2241:2276  require(sent, \"Failed to send ETH\") */\n    tag_232:\n        /* \"sosh/SST.sol\":1889:2283  {... */\n      pop\n      pop\n        /* \"sosh/SST.sol\":1824:2283  function burn(uint256 amount, address destinationAddress) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7382:7384   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7364:7385   */\n      mstore\n        /* \"#utility.yul\":7421:7423   */\n      0x24\n        /* \"#utility.yul\":7401:7419   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7394:7424   */\n      mstore\n        /* \"#utility.yul\":7460:7494   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7440:7458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7433:7495   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7511:7529   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7504:7538   */\n      mstore\n        /* \"#utility.yul\":7555:7574   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_149\n        /* \"#utility.yul\":7180:7580   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7787:7789   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7769:7790   */\n      mstore\n        /* \"#utility.yul\":7826:7828   */\n      0x22\n        /* \"#utility.yul\":7806:7824   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7799:7829   */\n      mstore\n        /* \"#utility.yul\":7865:7899   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":7845:7863   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7838:7900   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":7916:7934   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7909:7941   */\n      mstore\n        /* \"#utility.yul\":7958:7977   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_149\n        /* \"#utility.yul\":7585:7983   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":713:738   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":686:704   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_130:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_245\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_104\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8190:8192   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8172:8193   */\n      mstore\n        /* \"#utility.yul\":8229:8231   */\n      0x1d\n        /* \"#utility.yul\":8209:8227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8202:8232   */\n      mstore\n        /* \"#utility.yul\":8268:8299   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":8248:8266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8241:8300   */\n      mstore\n        /* \"#utility.yul\":8317:8335   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_149\n        /* \"#utility.yul\":7988:8341   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_247:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_232\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8548:8550   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8530:8551   */\n      mstore\n        /* \"#utility.yul\":8587:8589   */\n      0x25\n        /* \"#utility.yul\":8567:8585   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8560:8590   */\n      mstore\n        /* \"#utility.yul\":8626:8660   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":8606:8624   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8599:8661   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":8677:8695   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8670:8705   */\n      mstore\n        /* \"#utility.yul\":8722:8741   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_149\n        /* \"#utility.yul\":8346:8747   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8954:8956   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8936:8957   */\n      mstore\n        /* \"#utility.yul\":8993:8995   */\n      0x23\n        /* \"#utility.yul\":8973:8991   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8966:8996   */\n      mstore\n        /* \"#utility.yul\":9032:9066   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":9012:9030   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9005:9067   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9083:9101   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9076:9109   */\n      mstore\n        /* \"#utility.yul\":9126:9145   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_149\n        /* \"#utility.yul\":8752:9151   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_255:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7746:7784  _beforeTokenTransfer(from, to, amount) */\n      tag_258\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7767:7771  from */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7773:7775  to */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7777:7783  amount */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7746:7766  _beforeTokenTransfer */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7746:7784  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9358:9360   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9340:9361   */\n      mstore\n        /* \"#utility.yul\":9397:9399   */\n      0x26\n        /* \"#utility.yul\":9377:9395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9370:9400   */\n      mstore\n        /* \"#utility.yul\":9436:9470   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":9416:9434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9409:9471   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":9487:9505   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9480:9516   */\n      mstore\n        /* \"#utility.yul\":9533:9552   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_149\n        /* \"#utility.yul\":9156:9558   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_263\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_139\n      jump\t// in\n    tag_263:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_264\n      swap2\n        /* \"#utility.yul\":713:738   */\n      dup2\n      mstore\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":686:704   */\n      add\n      swap1\n        /* \"#utility.yul\":567:744   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_232\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8102:8106  from */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8108:8110  to */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8112:8118  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8082:8101  _afterTokenTransfer */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8485:8506  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9765:9767   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9747:9768   */\n      mstore\n        /* \"#utility.yul\":9804:9806   */\n      0x1f\n        /* \"#utility.yul\":9784:9802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9777:9807   */\n      mstore\n        /* \"#utility.yul\":9843:9876   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":9823:9841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9816:9877   */\n      mstore\n        /* \"#utility.yul\":9894:9912   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_149\n        /* \"#utility.yul\":9563:9918   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_268:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8553:8602  _beforeTokenTransfer(address(0), account, amount) */\n      tag_271\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8582:8583  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8586:8593  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8595:8601  amount */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8553:8573  _beforeTokenTransfer */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8553:8602  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8629:8635  amount */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8613:8625  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8613:8635  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_272:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_273\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_139\n      jump\t// in\n    tag_273:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":713:738   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8705:8706  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":686:704   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8736:8784  _afterTokenTransfer(address(0), account, amount) */\n      tag_188\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8764:8765  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8768:8775  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8777:8783  amount */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8736:8755  _afterTokenTransfer */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":8736:8784  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.7.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10125:10127   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10107:10128   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10144:10162   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10137:10167   */\n      mstore\n        /* \"#utility.yul\":10203:10237   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10183:10201   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10176:10238   */\n      mstore\n        /* \"#utility.yul\":10255:10273   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_149\n        /* \"#utility.yul\":9923:10279   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9111:9687  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9194:9215  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10486:10488   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10468:10489   */\n      mstore\n        /* \"#utility.yul\":10525:10527   */\n      0x21\n        /* \"#utility.yul\":10505:10523   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10498:10528   */\n      mstore\n        /* \"#utility.yul\":10564:10598   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":10544:10562   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10537:10599   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":10615:10633   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10608:10639   */\n      mstore\n        /* \"#utility.yul\":10656:10675   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_149\n        /* \"#utility.yul\":10284:10681   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_284:\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9264:9313  _beforeTokenTransfer(account, address(0), amount) */\n      tag_287\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9285:9292  account */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9302:9303  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9306:9312  amount */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9264:9284  _beforeTokenTransfer */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9264:9313  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9349:9367  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9324:9346  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9349:9367  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9385:9409  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10888:10890   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10870:10891   */\n      mstore\n        /* \"#utility.yul\":10927:10929   */\n      0x22\n        /* \"#utility.yul\":10907:10925   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10900:10930   */\n      mstore\n        /* \"#utility.yul\":10966:11000   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":10946:10964   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10939:11001   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":11017:11035   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11010:11042   */\n      mstore\n        /* \"#utility.yul\":11059:11078   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_149\n        /* \"#utility.yul\":10686:11084   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9482:9500  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9482:9491  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9482:9500  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9503:9526  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9482:9526  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9546:9558  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9520:9526  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9482:9491  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      tag_291\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9520:9526  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      tag_164\n      jump\t// in\n    tag_291:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":713:738   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9610:9611  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":701:703   */\n      0x20\n        /* \"#utility.yul\":686:704   */\n      add\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9632:9680  _afterTokenTransfer(account, address(0), amount) */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9652:9659  account */\n      dup4\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9669:9670  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9673:9679  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9632:9651  _afterTokenTransfer */\n      tag_192\n        /* \"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":9632:9680  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n        /* \"#utility.yul\":14:562   */\n    tag_28:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_300:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_300)\n    tag_302:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:922   */\n    tag_296:\n        /* \"#utility.yul\":817:837   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":866:897   */\n      dup2\n      and\n        /* \"#utility.yul\":856:898   */\n      dup2\n      eq\n        /* \"#utility.yul\":846:916   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      0x00\n        /* \"#utility.yul\":909:910   */\n      dup1\n        /* \"#utility.yul\":902:914   */\n      revert\n        /* \"#utility.yul\":846:916   */\n    tag_305:\n        /* \"#utility.yul\":749:922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":927:1181   */\n    tag_37:\n        /* \"#utility.yul\":995:1001   */\n      0x00\n        /* \"#utility.yul\":1003:1009   */\n      dup1\n        /* \"#utility.yul\":1056:1058   */\n      0x40\n        /* \"#utility.yul\":1044:1053   */\n      dup4\n        /* \"#utility.yul\":1035:1042   */\n      dup6\n        /* \"#utility.yul\":1031:1054   */\n      sub\n        /* \"#utility.yul\":1027:1059   */\n      slt\n        /* \"#utility.yul\":1024:1076   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":1072:1073   */\n      0x00\n        /* \"#utility.yul\":1069:1070   */\n      dup1\n        /* \"#utility.yul\":1062:1074   */\n      revert\n        /* \"#utility.yul\":1024:1076   */\n    tag_307:\n        /* \"#utility.yul\":1095:1124   */\n      tag_308\n        /* \"#utility.yul\":1114:1123   */\n      dup4\n        /* \"#utility.yul\":1095:1124   */\n      tag_296\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1085:1124   */\n      swap5\n        /* \"#utility.yul\":1171:1173   */\n      0x20\n        /* \"#utility.yul\":1156:1174   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1143:1175   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":927:1181   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_48:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_311:\n        /* \"#utility.yul\":1563:1592   */\n      tag_312\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_296\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_313\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_296\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2154   */\n    tag_63:\n        /* \"#utility.yul\":1968:1974   */\n      0x00\n        /* \"#utility.yul\":1976:1982   */\n      dup1\n        /* \"#utility.yul\":2029:2031   */\n      0x40\n        /* \"#utility.yul\":2017:2026   */\n      dup4\n        /* \"#utility.yul\":2008:2015   */\n      dup6\n        /* \"#utility.yul\":2004:2027   */\n      sub\n        /* \"#utility.yul\":2000:2032   */\n      slt\n        /* \"#utility.yul\":1997:2049   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":2045:2046   */\n      0x00\n        /* \"#utility.yul\":2042:2043   */\n      dup1\n        /* \"#utility.yul\":2035:2047   */\n      revert\n        /* \"#utility.yul\":1997:2049   */\n    tag_316:\n        /* \"#utility.yul\":2081:2090   */\n      dup3\n        /* \"#utility.yul\":2068:2091   */\n      calldataload\n        /* \"#utility.yul\":2058:2091   */\n      swap2\n      pop\n        /* \"#utility.yul\":2110:2148   */\n      tag_317\n        /* \"#utility.yul\":2144:2146   */\n      0x20\n        /* \"#utility.yul\":2133:2142   */\n      dup5\n        /* \"#utility.yul\":2129:2147   */\n      add\n        /* \"#utility.yul\":2110:2148   */\n      tag_296\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2100:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":1900:2154   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2345   */\n    tag_72:\n        /* \"#utility.yul\":2218:2224   */\n      0x00\n        /* \"#utility.yul\":2271:2273   */\n      0x20\n        /* \"#utility.yul\":2259:2268   */\n      dup3\n        /* \"#utility.yul\":2250:2257   */\n      dup5\n        /* \"#utility.yul\":2246:2269   */\n      sub\n        /* \"#utility.yul\":2242:2274   */\n      slt\n        /* \"#utility.yul\":2239:2291   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2287:2288   */\n      0x00\n        /* \"#utility.yul\":2284:2285   */\n      dup1\n        /* \"#utility.yul\":2277:2289   */\n      revert\n        /* \"#utility.yul\":2239:2291   */\n    tag_319:\n        /* \"#utility.yul\":2310:2339   */\n      tag_320\n        /* \"#utility.yul\":2329:2338   */\n      dup3\n        /* \"#utility.yul\":2310:2339   */\n      tag_296\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2300:2339   */\n      swap4\n        /* \"#utility.yul\":2159:2345   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2558:2818   */\n    tag_103:\n        /* \"#utility.yul\":2626:2632   */\n      0x00\n        /* \"#utility.yul\":2634:2640   */\n      dup1\n        /* \"#utility.yul\":2687:2689   */\n      0x40\n        /* \"#utility.yul\":2675:2684   */\n      dup4\n        /* \"#utility.yul\":2666:2673   */\n      dup6\n        /* \"#utility.yul\":2662:2685   */\n      sub\n        /* \"#utility.yul\":2658:2690   */\n      slt\n        /* \"#utility.yul\":2655:2707   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2703:2704   */\n      0x00\n        /* \"#utility.yul\":2700:2701   */\n      dup1\n        /* \"#utility.yul\":2693:2705   */\n      revert\n        /* \"#utility.yul\":2655:2707   */\n    tag_323:\n        /* \"#utility.yul\":2726:2755   */\n      tag_324\n        /* \"#utility.yul\":2745:2754   */\n      dup4\n        /* \"#utility.yul\":2726:2755   */\n      tag_296\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2716:2755   */\n      swap2\n      pop\n        /* \"#utility.yul\":2774:2812   */\n      tag_317\n        /* \"#utility.yul\":2808:2810   */\n      0x20\n        /* \"#utility.yul\":2797:2806   */\n      dup5\n        /* \"#utility.yul\":2793:2811   */\n      add\n        /* \"#utility.yul\":2774:2812   */\n      tag_296\n      jump\t// in\n        /* \"#utility.yul\":2823:3203   */\n    tag_116:\n        /* \"#utility.yul\":2902:2903   */\n      0x01\n        /* \"#utility.yul\":2898:2910   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2945:2957   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2966:3027   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3020:3024   */\n      0x7f\n        /* \"#utility.yul\":3012:3018   */\n      dup3\n        /* \"#utility.yul\":3008:3025   */\n      and\n        /* \"#utility.yul\":2998:3025   */\n      swap2\n      pop\n        /* \"#utility.yul\":2966:3027   */\n    tag_327:\n        /* \"#utility.yul\":3073:3075   */\n      0x20\n        /* \"#utility.yul\":3065:3071   */\n      dup3\n        /* \"#utility.yul\":3062:3076   */\n      lt\n        /* \"#utility.yul\":3042:3060   */\n      dup2\n        /* \"#utility.yul\":3039:3077   */\n      sub\n        /* \"#utility.yul\":3036:3197   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":3119:3129   */\n      0x4e487b71\n        /* \"#utility.yul\":3114:3117   */\n      0xe0\n        /* \"#utility.yul\":3110:3130   */\n      shl\n        /* \"#utility.yul\":3107:3108   */\n      0x00\n        /* \"#utility.yul\":3100:3131   */\n      mstore\n        /* \"#utility.yul\":3154:3158   */\n      0x22\n        /* \"#utility.yul\":3151:3152   */\n      0x04\n        /* \"#utility.yul\":3144:3159   */\n      mstore\n        /* \"#utility.yul\":3182:3186   */\n      0x24\n        /* \"#utility.yul\":3179:3180   */\n      0x00\n        /* \"#utility.yul\":3172:3187   */\n      revert\n        /* \"#utility.yul\":3036:3197   */\n    tag_328:\n      pop\n        /* \"#utility.yul\":2823:3203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3208:3335   */\n    tag_297:\n        /* \"#utility.yul\":3269:3279   */\n      0x4e487b71\n        /* \"#utility.yul\":3264:3267   */\n      0xe0\n        /* \"#utility.yul\":3260:3280   */\n      shl\n        /* \"#utility.yul\":3257:3258   */\n      0x00\n        /* \"#utility.yul\":3250:3281   */\n      mstore\n        /* \"#utility.yul\":3300:3304   */\n      0x11\n        /* \"#utility.yul\":3297:3298   */\n      0x04\n        /* \"#utility.yul\":3290:3305   */\n      mstore\n        /* \"#utility.yul\":3324:3328   */\n      0x24\n        /* \"#utility.yul\":3321:3322   */\n      0x00\n        /* \"#utility.yul\":3314:3329   */\n      revert\n        /* \"#utility.yul\":3340:3465   */\n    tag_139:\n        /* \"#utility.yul\":3405:3414   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3426:3436   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3423:3459   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3439:3457   */\n      tag_121\n      tag_297\n      jump\t// in\n        /* \"#utility.yul\":3470:3638   */\n    tag_142:\n        /* \"#utility.yul\":3543:3552   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3574:3583   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3591:3606   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3585:3607   */\n      dup5\n      eq\n        /* \"#utility.yul\":3571:3608   */\n      or\n        /* \"#utility.yul\":3561:3632   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3612:3630   */\n      tag_121\n      tag_297\n      jump\t// in\n        /* \"#utility.yul\":3643:3860   */\n    tag_144:\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3709:3710   */\n      dup3\n        /* \"#utility.yul\":3699:3831   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3753:3763   */\n      0x4e487b71\n        /* \"#utility.yul\":3748:3751   */\n      0xe0\n        /* \"#utility.yul\":3744:3764   */\n      shl\n        /* \"#utility.yul\":3741:3742   */\n      0x00\n        /* \"#utility.yul\":3734:3765   */\n      mstore\n        /* \"#utility.yul\":3788:3792   */\n      0x12\n        /* \"#utility.yul\":3785:3786   */\n      0x04\n        /* \"#utility.yul\":3778:3793   */\n      mstore\n        /* \"#utility.yul\":3816:3820   */\n      0x24\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3806:3821   */\n      revert\n        /* \"#utility.yul\":3699:3831   */\n    tag_337:\n      pop\n        /* \"#utility.yul\":3845:3854   */\n      div\n      swap1\n        /* \"#utility.yul\":3643:3860   */\n      jump\t// out\n        /* \"#utility.yul\":4772:4900   */\n    tag_164:\n        /* \"#utility.yul\":4839:4848   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4860:4871   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4857:4894   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":4874:4892   */\n      tag_121\n      tag_297\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220835571cfc45df3d88e88deeae5f330fc627fef98891dcef6e99af5c27b682a5464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_813": {
									"entryPoint": 145,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 149,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2698:6",
										"nodeType": "YulBlock",
										"src": "0:2698:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "201:325:6",
													"nodeType": "YulBlock",
													"src": "201:325:6",
													"statements": [
														{
															"nativeSrc": "211:22:6",
															"nodeType": "YulAssignment",
															"src": "211:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:6",
																		"nodeType": "YulLiteral",
																		"src": "225:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:6"
																},
																"nativeSrc": "221:12:6",
																"nodeType": "YulFunctionCall",
																"src": "221:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																}
															]
														},
														{
															"nativeSrc": "242:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:6"
																},
																"nativeSrc": "268:12:6",
																"nodeType": "YulFunctionCall",
																"src": "268:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:6",
																	"nodeType": "YulTypedName",
																	"src": "246:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:6",
																"nodeType": "YulBlock",
																"src": "319:31:6",
																"statements": [
																	{
																		"nativeSrc": "321:27:6",
																		"nodeType": "YulAssignment",
																		"src": "321:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:6",
																					"nodeType": "YulLiteral",
																					"src": "343:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:6"
																			},
																			"nativeSrc": "331:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:6"
																},
																"nativeSrc": "292:26:6",
																"nodeType": "YulFunctionCall",
																"src": "292:26:6"
															},
															"nativeSrc": "289:61:6",
															"nodeType": "YulIf",
															"src": "289:61:6"
														},
														{
															"body": {
																"nativeSrc": "409:111:6",
																"nodeType": "YulBlock",
																"src": "409:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:6",
																					"nodeType": "YulLiteral",
																					"src": "430:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:6",
																							"nodeType": "YulLiteral",
																							"src": "437:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:6",
																							"nodeType": "YulLiteral",
																							"src": "442:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:6"
																					},
																					"nativeSrc": "433:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:6"
																			},
																			"nativeSrc": "423:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:6"
																		},
																		"nativeSrc": "423:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:6",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:6",
																					"nodeType": "YulLiteral",
																					"src": "477:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:6"
																			},
																			"nativeSrc": "467:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:6"
																		},
																		"nativeSrc": "467:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:6",
																					"nodeType": "YulLiteral",
																					"src": "502:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:6",
																					"nodeType": "YulLiteral",
																					"src": "505:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:6"
																			},
																			"nativeSrc": "495:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:6"
																		},
																		"nativeSrc": "495:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:6",
																				"nodeType": "YulLiteral",
																				"src": "396:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:6"
																		},
																		"nativeSrc": "385:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:6"
																},
																"nativeSrc": "362:38:6",
																"nodeType": "YulFunctionCall",
																"src": "362:38:6"
															},
															"nativeSrc": "359:161:6",
															"nodeType": "YulIf",
															"src": "359:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:6",
														"nodeType": "YulTypedName",
														"src": "181:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:6",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													}
												],
												"src": "146:380:6"
											},
											{
												"body": {
													"nativeSrc": "587:65:6",
													"nodeType": "YulBlock",
													"src": "587:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:6",
																		"nodeType": "YulLiteral",
																		"src": "604:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																},
																"nativeSrc": "597:14:6",
																"nodeType": "YulFunctionCall",
																"src": "597:14:6"
															},
															"nativeSrc": "597:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:6"
														},
														{
															"nativeSrc": "620:26:6",
															"nodeType": "YulAssignment",
															"src": "620:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:6",
																		"nodeType": "YulLiteral",
																		"src": "638:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:6",
																		"nodeType": "YulLiteral",
																		"src": "641:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:6"
																},
																"nativeSrc": "628:18:6",
																"nodeType": "YulFunctionCall",
																"src": "628:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:6",
														"nodeType": "YulTypedName",
														"src": "570:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:6",
														"nodeType": "YulTypedName",
														"src": "578:4:6",
														"type": ""
													}
												],
												"src": "531:121:6"
											},
											{
												"body": {
													"nativeSrc": "738:437:6",
													"nodeType": "YulBlock",
													"src": "738:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:6",
																"nodeType": "YulBlock",
																"src": "771:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:6",
																					"nodeType": "YulLiteral",
																					"src": "792:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:6"
																			},
																			"nativeSrc": "785:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:6"
																		},
																		"nativeSrc": "785:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:6"
																	},
																	{
																		"nativeSrc": "814:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:6",
																					"nodeType": "YulLiteral",
																					"src": "836:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:6",
																					"nodeType": "YulLiteral",
																					"src": "839:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:6"
																			},
																			"nativeSrc": "826:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:6",
																				"nodeType": "YulTypedName",
																				"src": "818:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:6",
																							"nodeType": "YulLiteral",
																							"src": "890:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:6",
																									"nodeType": "YulLiteral",
																									"src": "909:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:6"
																							},
																							"nativeSrc": "893:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:6"
																					},
																					"nativeSrc": "886:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:6"
																			},
																			"nativeSrc": "876:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:6",
																				"nodeType": "YulTypedName",
																				"src": "861:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:6",
																			"nodeType": "YulBlock",
																			"src": "951:23:6",
																			"statements": [
																				{
																					"nativeSrc": "953:19:6",
																					"nodeType": "YulAssignment",
																					"src": "953:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:6",
																					"nodeType": "YulLiteral",
																					"src": "945:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:6"
																			},
																			"nativeSrc": "930:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:6"
																		},
																		"nativeSrc": "927:47:6",
																		"nodeType": "YulIf",
																		"src": "927:47:6"
																	},
																	{
																		"nativeSrc": "987:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:6"
																							},
																							"nativeSrc": "1014:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:6"
																					},
																					"nativeSrc": "1007:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:6"
																			},
																			"nativeSrc": "997:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:6",
																				"nodeType": "YulTypedName",
																				"src": "991:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:6",
																			"nodeType": "YulBlock",
																			"src": "1139:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:6"
																						},
																						"nativeSrc": "1141:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:6"
																					},
																					"nativeSrc": "1141:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:6"
																			},
																			"nativeSrc": "1086:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:6"
																		},
																		"nativeSrc": "1078:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:6",
																			"nodeType": "YulBlock",
																			"src": "1100:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:6"
																						},
																						"nativeSrc": "1111:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:6",
																			"nodeType": "YulBlock",
																			"src": "1082:3:6",
																			"statements": []
																		},
																		"src": "1078:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:6",
																		"nodeType": "YulLiteral",
																		"src": "759:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:6"
																},
																"nativeSrc": "751:11:6",
																"nodeType": "YulFunctionCall",
																"src": "751:11:6"
															},
															"nativeSrc": "748:421:6",
															"nodeType": "YulIf",
															"src": "748:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:6",
														"nodeType": "YulTypedName",
														"src": "710:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:6",
														"nodeType": "YulTypedName",
														"src": "717:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:6",
														"nodeType": "YulTypedName",
														"src": "722:10:6",
														"type": ""
													}
												],
												"src": "657:518:6"
											},
											{
												"body": {
													"nativeSrc": "1265:81:6",
													"nodeType": "YulBlock",
													"src": "1265:81:6",
													"statements": [
														{
															"nativeSrc": "1275:65:6",
															"nodeType": "YulAssignment",
															"src": "1275:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:6"
																								},
																								"nativeSrc": "1304:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:6"
																								},
																								"nativeSrc": "1317:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:6"
																						},
																						"nativeSrc": "1300:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:6"
																				},
																				"nativeSrc": "1296:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:6"
																		},
																		"nativeSrc": "1286:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:6"
																		},
																		"nativeSrc": "1328:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:6"
																},
																"nativeSrc": "1283:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:6",
														"nodeType": "YulTypedName",
														"src": "1242:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:6",
														"nodeType": "YulTypedName",
														"src": "1248:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:6",
														"nodeType": "YulTypedName",
														"src": "1256:4:6",
														"type": ""
													}
												],
												"src": "1180:166:6"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:6",
													"nodeType": "YulBlock",
													"src": "1447:1249:6",
													"statements": [
														{
															"nativeSrc": "1457:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:6"
																},
																"nativeSrc": "1471:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:6",
																"nodeType": "YulBlock",
																"src": "1524:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:6"
																			},
																			"nativeSrc": "1526:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:6"
																		},
																		"nativeSrc": "1526:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:6"
																				},
																				"nativeSrc": "1508:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:6"
																		},
																		"nativeSrc": "1504:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:6"
																},
																"nativeSrc": "1493:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:6"
															},
															"nativeSrc": "1490:56:6",
															"nodeType": "YulIf",
															"src": "1490:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:6"
																				},
																				"nativeSrc": "1631:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:6"
																		},
																		"nativeSrc": "1605:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:6"
																},
																"nativeSrc": "1555:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:6"
															},
															"nativeSrc": "1555:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:6"
														},
														{
															"nativeSrc": "1661:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:6",
																"nodeType": "YulLiteral",
																"src": "1678:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:6",
																"nodeType": "YulLiteral",
																"src": "1707:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:6",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:6",
															"nodeType": "YulAssignment",
															"src": "1720:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:6",
																"nodeType": "YulLiteral",
																"src": "1733:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:6",
																		"nodeType": "YulBlock",
																		"src": "1783:656:6",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:6"
																							},
																							"nativeSrc": "1824:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:6"
																					},
																					"nativeSrc": "1812:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:6",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:6"
																					},
																					"nativeSrc": "1859:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:6",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:6",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:6",
																					"nodeType": "YulBlock",
																					"src": "1994:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:6"
																												},
																												"nativeSrc": "2033:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:6"
																										},
																										"nativeSrc": "2027:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:6"
																								},
																								"nativeSrc": "2012:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:6"
																							},
																							"nativeSrc": "2012:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:6"
																						},
																						{
																							"nativeSrc": "2071:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:6"
																								},
																								"nativeSrc": "2081:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:6",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:6"
																								},
																								"nativeSrc": "2125:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:6"
																					},
																					"nativeSrc": "1938:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:6"
																				},
																				"nativeSrc": "1930:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:6",
																					"nodeType": "YulBlock",
																					"src": "1953:28:6",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:6",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:6"
																								},
																								"nativeSrc": "1960:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:6",
																					"nodeType": "YulBlock",
																					"src": "1934:3:6",
																					"statements": []
																				},
																				"src": "1930:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:6",
																					"nodeType": "YulBlock",
																					"src": "2214:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:6"
																										},
																										"nativeSrc": "2255:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:6"
																								},
																								"nativeSrc": "2249:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:6"
																																		},
																																		"nativeSrc": "2334:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:6"
																																},
																																"nativeSrc": "2330:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:6"
																																},
																																"nativeSrc": "2356:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:6"
																														},
																														"nativeSrc": "2326:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:6"
																												},
																												"nativeSrc": "2322:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:6"
																										},
																										"nativeSrc": "2307:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:6"
																								},
																								"nativeSrc": "2292:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:6"
																							},
																							"nativeSrc": "2292:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:6"
																					},
																					"nativeSrc": "2182:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:6"
																				},
																				"nativeSrc": "2179:201:6",
																				"nodeType": "YulIf",
																				"src": "2179:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:6"
																									},
																									"nativeSrc": "2410:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:6"
																							},
																							"nativeSrc": "2406:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:6"
																					},
																					"nativeSrc": "2393:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:6"
																				},
																				"nativeSrc": "2393:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:6"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:6",
																	"nodeType": "YulCase",
																	"src": "1776:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:6",
																		"nodeType": "YulBlock",
																		"src": "2456:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:6",
																					"nodeType": "YulBlock",
																					"src": "2519:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:6"
																										},
																										"nativeSrc": "2552:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:6"
																								},
																								"nativeSrc": "2546:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:6"
																				},
																				"nativeSrc": "2497:89:6",
																				"nodeType": "YulIf",
																				"src": "2497:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:6"
																							},
																							"nativeSrc": "2612:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:6"
																					},
																					"nativeSrc": "2599:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:6"
																				},
																				"nativeSrc": "2599:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:6",
																	"nodeType": "YulCase",
																	"src": "2448:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:6"
																},
																"nativeSrc": "1753:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:6"
															},
															"nativeSrc": "1746:944:6",
															"nodeType": "YulSwitch",
															"src": "1746:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:6",
														"nodeType": "YulTypedName",
														"src": "1432:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:6",
														"nodeType": "YulTypedName",
														"src": "1438:3:6",
														"type": ""
													}
												],
												"src": "1351:1345:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600881526020016714dbd4d20814d4d560c21b8152506040518060400160405280600381526020016214d4d560ea1b81525081600390816200005f919062000184565b5060046200006e828262000184565b5050506200008b620000856200009160201b60201c565b62000095565b62000250565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200010f57607f821691505b6020821081036200012e57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200017f57805f5260205f20601f840160051c810160208510156200015b5750805b601f840160051c820191505b818110156200017c575f815560010162000167565b50505b505050565b81516001600160401b03811115620001a057620001a0620000e6565b620001b881620001b18454620000fa565b8462000134565b602080601f831160018114620001ee575f8415620001d65750858301515b5f19600386901b1c1916600185901b17855562000248565b5f85815260208120601f198616915b828110156200021e57888601518255948401946001909101908401620001fd565b50858210156200023c57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b611263806200025e5f395ff3fe608060405260043610610110575f3560e01c806370a082311161009d578063a457c2d711610062578063a457c2d7146102c7578063a9059cbb146102e6578063dd62ed3e14610305578063f2fde38b14610324578063fcd3533c14610343575f80fd5b806370a0823114610231578063715018a6146102655780638da5cb5b1461027957806394bf804d146102a057806395d89b41146102b3575f80fd5b806323b872dd116100e357806323b872dd146101a9578063313ce567146101c857806339509351146101e35780634fa1d43614610202578063695d2f1314610217575f80fd5b806306fdde03146101145780630802c2cd1461013e578063095ea7b31461016657806318160ddd14610195575b5f80fd5b34801561011f575f80fd5b50610128610362565b604051610135919061104b565b60405180910390f35b348015610149575f80fd5b50610158660265e8af39300081565b604051908152602001610135565b348015610171575f80fd5b506101856101803660046110b2565b6103f2565b6040519015158152602001610135565b3480156101a0575f80fd5b50600254610158565b3480156101b4575f80fd5b506101856101c33660046110da565b61040b565b3480156101d3575f80fd5b5060405160128152602001610135565b3480156101ee575f80fd5b506101856101fd3660046110b2565b61042e565b610215610210366004611113565b61044f565b005b348015610222575f80fd5b5061015866470de4df82000081565b34801561023c575f80fd5b5061015861024b36600461113d565b6001600160a01b03165f9081526020819052604090205490565b348015610270575f80fd5b50610215610651565b348015610284575f80fd5b506005546040516001600160a01b039091168152602001610135565b6102156102ae366004611113565b610664565b3480156102be575f80fd5b5061012861073b565b3480156102d2575f80fd5b506101856102e13660046110b2565b61074a565b3480156102f1575f80fd5b506101856103003660046110b2565b6107c4565b348015610310575f80fd5b5061015861031f36600461115d565b6107d1565b34801561032f575f80fd5b5061021561033e36600461113d565b6107fb565b34801561034e575f80fd5b5061021561035d366004611113565b610874565b60606003805461037190611185565b80601f016020809104026020016040519081016040528092919081815260200182805461039d90611185565b80156103e85780601f106103bf576101008083540402835291602001916103e8565b820191905f5260205f20905b8154815290600101906020018083116103cb57829003601f168201915b5050505050905090565b5f336103ff8185856109e4565b60019150505b92915050565b5f33610418858285610b07565b610423858585610b79565b506001949350505050565b5f336103ff81858561044083836107d1565b61044a91906111d1565b6109e4565b5f670de0b6b3a764000061046a84660265e8af3930006111e4565b61047491906111fb565b90505f670de0b6b3a764000061049166470de4df820000846111e4565b61049b91906111fb565b90506104a781836111d1565b3410156104f35760405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d08115512081cd95b9d605a1b60448201526064015b60405180910390fd5b6104fd8385610d56565b5f836001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610546576040519150601f19603f3d011682016040523d82523d5f602084013e61054b565b606091505b50509050806105915760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f2073656e642067617360701b60448201526064016104ea565b61059b82846111d1565b34111561064a575f33836105af863461121a565b6105b991906111d1565b6040515f81818185875af1925050503d805f81146105f2576040519150601f19603f3d011682016040523d82523d5f602084013e6105f7565b606091505b50509050806106485760405162461bcd60e51b815260206004820152601860248201527f556e61626c6520746f2073656e64206261636b2066756e64000000000000000060448201526064016104ea565b505b5050505050565b610659610e44565b6106625f610e9e565b565b670de0b6b3a764000061067e83660265e8af3930006111e4565b61068891906111fb565b3410156106cf5760405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d08115512081cd95b9d605a1b60448201526064016104ea565b6106d98183610d56565b6106ea82660265e8af3930006111e4565b34111561073757336108fc61070684660265e8af3930006111e4565b610710903461121a565b6040518115909202915f818181858888f19350505050158015610735573d5f803e3d5ffd5b505b5050565b60606004805461037190611185565b5f338161075782866107d1565b9050838110156107b75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104ea565b61042382868684036109e4565b5f336103ff818585610b79565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610803610e44565b6001600160a01b0381166108685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ea565b61087181610e9e565b50565b335f908152602081905260409020548211156108d25760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742053535420746f6b656e7320746f206275726e0060448201526064016104ea565b6108dc3383610eef565b5f6108ee660265e8af393000846111e4565b90508047101561094a5760405162461bcd60e51b815260206004820152602160248201527f436f6e747261637420646f6573206e6f74206861766520656e6f7567682045546044820152600960fb1b60648201526084016104ea565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610993576040519150601f19603f3d011682016040523d82523d5f602084013e610998565b606091505b50509050806109de5760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b60448201526064016104ea565b50505050565b6001600160a01b038316610a465760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ea565b6001600160a01b038216610aa75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ea565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f610b1284846107d1565b90505f1981146109de5781811015610b6c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ea565b6109de84848484036109e4565b6001600160a01b038316610bdd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ea565b6001600160a01b038216610c3f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ea565b610c4a838383610735565b6001600160a01b0383165f9081526020819052604090205481811015610cc15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ea565b6001600160a01b038085165f90815260208190526040808220858503905591851681529081208054849290610cf79084906111d1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d4391815260200190565b60405180910390a36109de848484610735565b6001600160a01b038216610dac5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104ea565b610db75f8383610735565b8060025f828254610dc891906111d1565b90915550506001600160a01b0382165f9081526020819052604081208054839290610df49084906111d1565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36107375f8383610735565b6005546001600160a01b031633146106625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ea565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610f4f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104ea565b610f5a825f83610735565b6001600160a01b0382165f9081526020819052604090205481811015610fcd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104ea565b6001600160a01b0383165f908152602081905260408120838303905560028054849290610ffb90849061121a565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610735835f84610735565b5f602080835283518060208501525f5b818110156110775785810183015185820160400152820161105b565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146110ad575f80fd5b919050565b5f80604083850312156110c3575f80fd5b6110cc83611097565b946020939093013593505050565b5f805f606084860312156110ec575f80fd5b6110f584611097565b925061110360208501611097565b9150604084013590509250925092565b5f8060408385031215611124575f80fd5b8235915061113460208401611097565b90509250929050565b5f6020828403121561114d575f80fd5b61115682611097565b9392505050565b5f806040838503121561116e575f80fd5b61117783611097565b915061113460208401611097565b600181811c9082168061119957607f821691505b6020821081036111b757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610405576104056111bd565b8082028115828204841417610405576104056111bd565b5f8261121557634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610405576104056111bd56fea2646970667358221220835571cfc45df3d88e88deeae5f330fc627fef98891dcef6e99af5c27b682a5464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x14DBD4D20814D4D5 PUSH1 0xC2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x14D4D5 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5F SWAP2 SWAP1 PUSH3 0x184 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6E DUP3 DUP3 PUSH3 0x184 JUMP JUMPDEST POP POP POP PUSH3 0x8B PUSH3 0x85 PUSH3 0x91 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x95 JUMP JUMPDEST PUSH3 0x250 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x10F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x12E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x17F JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x15B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x17C JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x167 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1A0 JUMPI PUSH3 0x1A0 PUSH3 0xE6 JUMP JUMPDEST PUSH3 0x1B8 DUP2 PUSH3 0x1B1 DUP5 SLOAD PUSH3 0xFA JUMP JUMPDEST DUP5 PUSH3 0x134 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1EE JUMPI PUSH0 DUP5 ISZERO PUSH3 0x1D6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x248 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x21E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1FD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x23C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1263 DUP1 PUSH3 0x25E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xFCD3533C EQ PUSH2 0x343 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x4FA1D436 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x695D2F13 EQ PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x802C2CD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH7 0x265E8AF393000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH7 0x470DE4DF820000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x651 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x73B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x115D JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x113D JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x371 SWAP1 PUSH2 0x1185 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39D SWAP1 PUSH2 0x1185 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x418 DUP6 DUP3 DUP6 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x423 DUP6 DUP6 DUP6 PUSH2 0xB79 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0x440 DUP4 DUP4 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x46A DUP5 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x491 PUSH7 0x470DE4DF820000 DUP5 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH2 0x4A7 DUP2 DUP4 PUSH2 0x11D1 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FD DUP4 DUP6 PUSH2 0xD56 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E61626C6520746F2073656E6420676173 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x59B DUP3 DUP5 PUSH2 0x11D1 JUMP JUMPDEST CALLVALUE GT ISZERO PUSH2 0x64A JUMPI PUSH0 CALLER DUP4 PUSH2 0x5AF DUP7 CALLVALUE PUSH2 0x121A JUMP JUMPDEST PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2073656E64206261636B2066756E640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x662 PUSH0 PUSH2 0xE9E JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x67E DUP4 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x6D9 DUP2 DUP4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x6EA DUP3 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST CALLVALUE GT ISZERO PUSH2 0x737 JUMPI CALLER PUSH2 0x8FC PUSH2 0x706 DUP5 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x710 SWAP1 CALLVALUE PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x735 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x371 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x757 DUP3 DUP7 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x423 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x9E4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x803 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0xE9E JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742053535420746F6B656E7320746F206275726E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x8DC CALLER DUP4 PUSH2 0xEEF JUMP JUMPDEST PUSH0 PUSH2 0x8EE PUSH7 0x265E8AF393000 DUP5 PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768204554 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xFB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x998 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x8CC2D2D8CAC840E8DE40E6CADCC8408AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB12 DUP5 DUP5 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x9DE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x9DE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xC4A DUP4 DUP4 DUP4 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xCF7 SWAP1 DUP5 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD43 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9DE DUP5 DUP5 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xDB7 PUSH0 DUP4 DUP4 PUSH2 0x735 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDF4 SWAP1 DUP5 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x737 PUSH0 DUP4 DUP4 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xF5A DUP3 PUSH0 DUP4 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xFFB SWAP1 DUP5 SWAP1 PUSH2 0x121A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x735 DUP4 PUSH0 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1077 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x105B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10AD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10CC DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10F5 DUP5 PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP PUSH2 0x1103 PUSH1 0x20 DUP6 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1134 PUSH1 0x20 DUP5 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1156 DUP3 PUSH2 0x1097 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1177 DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP PUSH2 0x1134 PUSH1 0x20 DUP5 ADD PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1199 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x11BD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x11BD JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1215 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x11BD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SSTORE PUSH18 0xCFC45DF3D88E88DEEAE5F330FC627FEF9889 SAR 0xCE 0xF6 0xE9 SWAP11 CREATE2 0xC2 PUSH28 0x682A5464736F6C634300081800330000000000000000000000000000 ",
							"sourceMap": "180:2402:5:-:0;;;369:41;;;;;;;;;;1978:113:1;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:1;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;180:2402:5;;640:96:4;719:10;;640:96::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:6;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:6;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:6;;;2546:26;2497:89;-1:-1:-1;;1308:1:6;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:6;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:6;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;:::-;180:2402:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GAS_FEE_TAP_837": {
									"entryPoint": null,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINT_PRICE_PER_TOKEN_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_697": {
									"entryPoint": null,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_632": {
									"entryPoint": 2532,
									"id": 632,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_686": {
									"entryPoint": null,
									"id": 686,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_587": {
									"entryPoint": 3823,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3652,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_515": {
									"entryPoint": 3414,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_675": {
									"entryPoint": 2823,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3742,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 2937,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 2001,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 1010,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1035": {
									"entryPoint": 2164,
									"id": 1035,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 1866,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 1070,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintWithGasTap_980": {
									"entryPoint": 1103,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_892": {
									"entryPoint": 1636,
									"id": 892,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_167": {
									"entryPoint": 866,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1617,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_177": {
									"entryPoint": 1851,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 1035,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 2043,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_236": {
									"entryPoint": 1988,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45565ba86530e34eb5b7c63e4c4dbe68694f761639dc03839c718286fd19914c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_891cf454a37c1b69b16907898af33d98f1d41dde5f3751d6c3c309f3e73c310b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6ecda98a5e42fcff0f3785ccf411cd3f6e1d3191e539e565496b2b1af554ed6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5e0c0c8c39e7cc360eee60824b8f1f12aa2610b94fadb34a5354960e68f3a67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11086:6",
										"nodeType": "YulBlock",
										"src": "0:11086:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:6",
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nativeSrc": "145:12:6",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:6",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:6",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:6",
																		"nodeType": "YulLiteral",
																		"src": "184:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nativeSrc": "166:21:6",
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nativeSrc": "166:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nativeSrc": "196:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nativeSrc": "210:13:6",
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:6",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:6",
																				"nodeType": "YulLiteral",
																				"src": "254:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nativeSrc": "239:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nativeSrc": "232:34:6",
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nativeSrc": "232:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nativeSrc": "275:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:6",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:6",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:6",
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nativeSrc": "369:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:6",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nativeSrc": "365:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nativeSrc": "403:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nativeSrc": "399:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nativeSrc": "393:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nativeSrc": "358:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nativeSrc": "358:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nativeSrc": "302:13:6",
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nativeSrc": "294:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:6",
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nativeSrc": "318:15:6",
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nativeSrc": "323:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:6",
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nativeSrc": "454:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:6",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nativeSrc": "450:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:6",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nativeSrc": "443:42:6",
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nativeSrc": "443:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nativeSrc": "494:62:6",
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:6",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nativeSrc": "525:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:6",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nativeSrc": "542:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nativeSrc": "521:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nativeSrc": "506:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:6",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nativeSrc": "502:54:6",
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nativeSrc": "668:76:6",
													"nodeType": "YulBlock",
													"src": "668:76:6",
													"statements": [
														{
															"nativeSrc": "678:26:6",
															"nodeType": "YulAssignment",
															"src": "678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "690:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "690:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "686:3:6"
																},
																"nativeSrc": "686:18:6",
																"nodeType": "YulFunctionCall",
																"src": "686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "678:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "720:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "720:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "731:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "713:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:6"
																},
																"nativeSrc": "713:25:6",
																"nodeType": "YulFunctionCall",
																"src": "713:25:6"
															},
															"nativeSrc": "713:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "713:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "567:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "637:9:6",
														"nodeType": "YulTypedName",
														"src": "637:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "648:6:6",
														"nodeType": "YulTypedName",
														"src": "648:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "659:4:6",
														"nodeType": "YulTypedName",
														"src": "659:4:6",
														"type": ""
													}
												],
												"src": "567:177:6"
											},
											{
												"body": {
													"nativeSrc": "798:124:6",
													"nodeType": "YulBlock",
													"src": "798:124:6",
													"statements": [
														{
															"nativeSrc": "808:29:6",
															"nodeType": "YulAssignment",
															"src": "808:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "830:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "830:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "817:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "817:12:6"
																},
																"nativeSrc": "817:20:6",
																"nodeType": "YulFunctionCall",
																"src": "817:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "808:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "808:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "900:16:6",
																"nodeType": "YulBlock",
																"src": "900:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "909:1:6",
																					"nodeType": "YulLiteral",
																					"src": "909:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "912:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "902:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:6"
																			},
																			"nativeSrc": "902:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "902:12:6"
																		},
																		"nativeSrc": "902:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "902:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "859:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "859:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "870:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "870:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "885:3:6",
																										"nodeType": "YulLiteral",
																										"src": "885:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "890:1:6",
																										"nodeType": "YulLiteral",
																										"src": "890:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "881:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "881:3:6"
																								},
																								"nativeSrc": "881:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "881:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "894:1:6",
																								"nodeType": "YulLiteral",
																								"src": "894:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "877:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "877:3:6"
																						},
																						"nativeSrc": "877:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "877:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "866:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "866:3:6"
																				},
																				"nativeSrc": "866:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "866:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "856:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "856:2:6"
																		},
																		"nativeSrc": "856:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "856:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "849:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:6"
																},
																"nativeSrc": "849:50:6",
																"nodeType": "YulFunctionCall",
																"src": "849:50:6"
															},
															"nativeSrc": "846:70:6",
															"nodeType": "YulIf",
															"src": "846:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "749:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "777:6:6",
														"nodeType": "YulTypedName",
														"src": "777:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "788:5:6",
														"nodeType": "YulTypedName",
														"src": "788:5:6",
														"type": ""
													}
												],
												"src": "749:173:6"
											},
											{
												"body": {
													"nativeSrc": "1014:167:6",
													"nodeType": "YulBlock",
													"src": "1014:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1060:16:6",
																"nodeType": "YulBlock",
																"src": "1060:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1069:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1069:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1072:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1072:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1062:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1062:6:6"
																			},
																			"nativeSrc": "1062:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1062:12:6"
																		},
																		"nativeSrc": "1062:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1062:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1035:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1035:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1044:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1044:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1031:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:6"
																		},
																		"nativeSrc": "1031:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1031:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1056:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1056:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1027:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:6"
																},
																"nativeSrc": "1027:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1027:32:6"
															},
															"nativeSrc": "1024:52:6",
															"nodeType": "YulIf",
															"src": "1024:52:6"
														},
														{
															"nativeSrc": "1085:39:6",
															"nodeType": "YulAssignment",
															"src": "1085:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1114:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1114:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1095:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1095:18:6"
																},
																"nativeSrc": "1095:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1095:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:6"
																}
															]
														},
														{
															"nativeSrc": "1133:42:6",
															"nodeType": "YulAssignment",
															"src": "1133:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1160:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1160:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1171:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1171:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1156:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1156:3:6"
																		},
																		"nativeSrc": "1156:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1143:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:12:6"
																},
																"nativeSrc": "1143:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1143:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1133:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1133:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "927:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "972:9:6",
														"nodeType": "YulTypedName",
														"src": "972:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "983:7:6",
														"nodeType": "YulTypedName",
														"src": "983:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "995:6:6",
														"nodeType": "YulTypedName",
														"src": "995:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1003:6:6",
														"nodeType": "YulTypedName",
														"src": "1003:6:6",
														"type": ""
													}
												],
												"src": "927:254:6"
											},
											{
												"body": {
													"nativeSrc": "1281:92:6",
													"nodeType": "YulBlock",
													"src": "1281:92:6",
													"statements": [
														{
															"nativeSrc": "1291:26:6",
															"nodeType": "YulAssignment",
															"src": "1291:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1303:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1303:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1314:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1314:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1299:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1299:3:6"
																},
																"nativeSrc": "1299:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1299:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1291:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1291:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1333:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1333:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1358:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1358:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1351:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1351:6:6"
																				},
																				"nativeSrc": "1351:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1351:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1344:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1344:6:6"
																		},
																		"nativeSrc": "1344:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1344:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1326:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:6"
																},
																"nativeSrc": "1326:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1326:41:6"
															},
															"nativeSrc": "1326:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1326:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1186:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1250:9:6",
														"nodeType": "YulTypedName",
														"src": "1250:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1261:6:6",
														"nodeType": "YulTypedName",
														"src": "1261:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1272:4:6",
														"nodeType": "YulTypedName",
														"src": "1272:4:6",
														"type": ""
													}
												],
												"src": "1186:187:6"
											},
											{
												"body": {
													"nativeSrc": "1482:224:6",
													"nodeType": "YulBlock",
													"src": "1482:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:6",
																"nodeType": "YulBlock",
																"src": "1528:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:6"
																			},
																			"nativeSrc": "1530:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:6"
																		},
																		"nativeSrc": "1530:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nativeSrc": "1499:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:6"
																},
																"nativeSrc": "1495:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:6"
															},
															"nativeSrc": "1492:52:6",
															"nodeType": "YulIf",
															"src": "1492:52:6"
														},
														{
															"nativeSrc": "1553:39:6",
															"nodeType": "YulAssignment",
															"src": "1553:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:6"
																},
																"nativeSrc": "1563:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:6"
																}
															]
														},
														{
															"nativeSrc": "1601:48:6",
															"nodeType": "YulAssignment",
															"src": "1601:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:6"
																		},
																		"nativeSrc": "1630:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:6"
																},
																"nativeSrc": "1611:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:6"
																}
															]
														},
														{
															"nativeSrc": "1658:42:6",
															"nodeType": "YulAssignment",
															"src": "1658:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:6"
																		},
																		"nativeSrc": "1681:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:6"
																},
																"nativeSrc": "1668:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:6",
														"nodeType": "YulTypedName",
														"src": "1432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:6",
														"nodeType": "YulTypedName",
														"src": "1443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:6",
														"nodeType": "YulTypedName",
														"src": "1455:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:6",
														"nodeType": "YulTypedName",
														"src": "1463:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:6",
														"nodeType": "YulTypedName",
														"src": "1471:6:6",
														"type": ""
													}
												],
												"src": "1378:328:6"
											},
											{
												"body": {
													"nativeSrc": "1808:87:6",
													"nodeType": "YulBlock",
													"src": "1808:87:6",
													"statements": [
														{
															"nativeSrc": "1818:26:6",
															"nodeType": "YulAssignment",
															"src": "1818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:6"
																},
																"nativeSrc": "1826:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nativeSrc": "1871:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:6"
																},
																"nativeSrc": "1853:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:6"
															},
															"nativeSrc": "1853:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:6",
														"nodeType": "YulTypedName",
														"src": "1777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:6",
														"nodeType": "YulTypedName",
														"src": "1788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:6",
														"nodeType": "YulTypedName",
														"src": "1799:4:6",
														"type": ""
													}
												],
												"src": "1711:184:6"
											},
											{
												"body": {
													"nativeSrc": "1987:167:6",
													"nodeType": "YulBlock",
													"src": "1987:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2033:16:6",
																"nodeType": "YulBlock",
																"src": "2033:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2042:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2042:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2045:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2035:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2035:6:6"
																			},
																			"nativeSrc": "2035:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2035:12:6"
																		},
																		"nativeSrc": "2035:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2035:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2008:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2008:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2017:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2017:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2004:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:6"
																		},
																		"nativeSrc": "2004:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2004:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2029:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2029:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2000:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:6"
																},
																"nativeSrc": "2000:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2000:32:6"
															},
															"nativeSrc": "1997:52:6",
															"nodeType": "YulIf",
															"src": "1997:52:6"
														},
														{
															"nativeSrc": "2058:33:6",
															"nodeType": "YulAssignment",
															"src": "2058:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2081:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2081:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2068:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2068:12:6"
																},
																"nativeSrc": "2068:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2068:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2058:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:6"
																}
															]
														},
														{
															"nativeSrc": "2100:48:6",
															"nodeType": "YulAssignment",
															"src": "2100:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2133:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2144:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2144:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2129:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2129:3:6"
																		},
																		"nativeSrc": "2129:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2129:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2110:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2110:18:6"
																},
																"nativeSrc": "2110:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2110:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2100:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1900:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1945:9:6",
														"nodeType": "YulTypedName",
														"src": "1945:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1956:7:6",
														"nodeType": "YulTypedName",
														"src": "1956:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1968:6:6",
														"nodeType": "YulTypedName",
														"src": "1968:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1976:6:6",
														"nodeType": "YulTypedName",
														"src": "1976:6:6",
														"type": ""
													}
												],
												"src": "1900:254:6"
											},
											{
												"body": {
													"nativeSrc": "2229:116:6",
													"nodeType": "YulBlock",
													"src": "2229:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2275:16:6",
																"nodeType": "YulBlock",
																"src": "2275:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2284:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2284:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2287:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2287:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2277:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2277:6:6"
																			},
																			"nativeSrc": "2277:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:12:6"
																		},
																		"nativeSrc": "2277:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2277:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2250:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2250:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2259:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2246:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2246:3:6"
																		},
																		"nativeSrc": "2246:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2271:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2271:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2242:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2242:3:6"
																},
																"nativeSrc": "2242:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2242:32:6"
															},
															"nativeSrc": "2239:52:6",
															"nodeType": "YulIf",
															"src": "2239:52:6"
														},
														{
															"nativeSrc": "2300:39:6",
															"nodeType": "YulAssignment",
															"src": "2300:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2329:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2329:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2310:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2310:18:6"
																},
																"nativeSrc": "2310:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2310:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2300:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2159:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2195:9:6",
														"nodeType": "YulTypedName",
														"src": "2195:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2206:7:6",
														"nodeType": "YulTypedName",
														"src": "2206:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2218:6:6",
														"nodeType": "YulTypedName",
														"src": "2218:6:6",
														"type": ""
													}
												],
												"src": "2159:186:6"
											},
											{
												"body": {
													"nativeSrc": "2451:102:6",
													"nodeType": "YulBlock",
													"src": "2451:102:6",
													"statements": [
														{
															"nativeSrc": "2461:26:6",
															"nodeType": "YulAssignment",
															"src": "2461:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2473:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2473:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2484:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2484:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2469:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:6"
																},
																"nativeSrc": "2469:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2469:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2461:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2461:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2503:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2503:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2518:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2518:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2534:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2534:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2539:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2539:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2530:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2530:3:6"
																						},
																						"nativeSrc": "2530:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2530:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2543:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2543:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2526:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2526:3:6"
																				},
																				"nativeSrc": "2526:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2526:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2514:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2514:3:6"
																		},
																		"nativeSrc": "2514:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2514:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2496:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:6"
																},
																"nativeSrc": "2496:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2496:51:6"
															},
															"nativeSrc": "2496:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2496:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2350:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2420:9:6",
														"nodeType": "YulTypedName",
														"src": "2420:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2431:6:6",
														"nodeType": "YulTypedName",
														"src": "2431:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2442:4:6",
														"nodeType": "YulTypedName",
														"src": "2442:4:6",
														"type": ""
													}
												],
												"src": "2350:203:6"
											},
											{
												"body": {
													"nativeSrc": "2645:173:6",
													"nodeType": "YulBlock",
													"src": "2645:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2691:16:6",
																"nodeType": "YulBlock",
																"src": "2691:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2700:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2700:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2703:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2703:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2693:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2693:6:6"
																			},
																			"nativeSrc": "2693:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2693:12:6"
																		},
																		"nativeSrc": "2693:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2693:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2666:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2666:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2675:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2675:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2662:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:6"
																		},
																		"nativeSrc": "2662:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2662:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2687:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2687:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2658:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:6"
																},
																"nativeSrc": "2658:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2658:32:6"
															},
															"nativeSrc": "2655:52:6",
															"nodeType": "YulIf",
															"src": "2655:52:6"
														},
														{
															"nativeSrc": "2716:39:6",
															"nodeType": "YulAssignment",
															"src": "2716:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2745:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2745:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2726:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2726:18:6"
																},
																"nativeSrc": "2726:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2726:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2716:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:6"
																}
															]
														},
														{
															"nativeSrc": "2764:48:6",
															"nodeType": "YulAssignment",
															"src": "2764:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2797:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2808:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2793:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:6"
																		},
																		"nativeSrc": "2793:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2774:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2774:18:6"
																},
																"nativeSrc": "2774:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2774:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2764:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2764:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2558:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2603:9:6",
														"nodeType": "YulTypedName",
														"src": "2603:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2614:7:6",
														"nodeType": "YulTypedName",
														"src": "2614:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2626:6:6",
														"nodeType": "YulTypedName",
														"src": "2626:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2634:6:6",
														"nodeType": "YulTypedName",
														"src": "2634:6:6",
														"type": ""
													}
												],
												"src": "2558:260:6"
											},
											{
												"body": {
													"nativeSrc": "2878:325:6",
													"nodeType": "YulBlock",
													"src": "2878:325:6",
													"statements": [
														{
															"nativeSrc": "2888:22:6",
															"nodeType": "YulAssignment",
															"src": "2888:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2902:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2905:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2905:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2898:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2898:3:6"
																},
																"nativeSrc": "2898:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2898:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2888:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2888:6:6"
																}
															]
														},
														{
															"nativeSrc": "2919:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2919:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2949:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2949:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2955:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2955:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2945:3:6"
																},
																"nativeSrc": "2945:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2945:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2923:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2923:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2996:31:6",
																"nodeType": "YulBlock",
																"src": "2996:31:6",
																"statements": [
																	{
																		"nativeSrc": "2998:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2998:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3012:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3012:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3020:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3020:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3008:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3008:3:6"
																			},
																			"nativeSrc": "3008:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3008:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2998:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2998:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2976:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2976:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2969:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2969:6:6"
																},
																"nativeSrc": "2969:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2969:26:6"
															},
															"nativeSrc": "2966:61:6",
															"nodeType": "YulIf",
															"src": "2966:61:6"
														},
														{
															"body": {
																"nativeSrc": "3086:111:6",
																"nodeType": "YulBlock",
																"src": "3086:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3107:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3107:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3114:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3114:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3119:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3119:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3110:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3110:3:6"
																					},
																					"nativeSrc": "3110:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3110:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3100:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3100:6:6"
																			},
																			"nativeSrc": "3100:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3100:31:6"
																		},
																		"nativeSrc": "3100:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3100:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3151:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3151:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3154:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3154:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3144:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3144:6:6"
																			},
																			"nativeSrc": "3144:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3144:15:6"
																		},
																		"nativeSrc": "3144:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3144:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3179:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3179:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3182:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3182:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3172:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3172:6:6"
																			},
																			"nativeSrc": "3172:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3172:15:6"
																		},
																		"nativeSrc": "3172:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3172:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3042:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3042:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3065:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3065:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3073:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3073:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3062:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3062:2:6"
																		},
																		"nativeSrc": "3062:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3062:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3039:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3039:2:6"
																},
																"nativeSrc": "3039:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3039:38:6"
															},
															"nativeSrc": "3036:161:6",
															"nodeType": "YulIf",
															"src": "3036:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2823:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2858:4:6",
														"nodeType": "YulTypedName",
														"src": "2858:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2867:6:6",
														"nodeType": "YulTypedName",
														"src": "2867:6:6",
														"type": ""
													}
												],
												"src": "2823:380:6"
											},
											{
												"body": {
													"nativeSrc": "3240:95:6",
													"nodeType": "YulBlock",
													"src": "3240:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3257:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3257:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3264:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3264:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3269:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3269:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:6"
																		},
																		"nativeSrc": "3260:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3250:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:6"
																},
																"nativeSrc": "3250:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3250:31:6"
															},
															"nativeSrc": "3250:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3250:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3297:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3297:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3300:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3300:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:6"
																},
																"nativeSrc": "3290:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3290:15:6"
															},
															"nativeSrc": "3290:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3290:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3321:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3321:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3324:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3314:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:6"
																},
																"nativeSrc": "3314:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3314:15:6"
															},
															"nativeSrc": "3314:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3314:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3208:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3208:127:6"
											},
											{
												"body": {
													"nativeSrc": "3388:77:6",
													"nodeType": "YulBlock",
													"src": "3388:77:6",
													"statements": [
														{
															"nativeSrc": "3398:16:6",
															"nodeType": "YulAssignment",
															"src": "3398:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3409:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3409:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3412:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3412:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3405:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:6"
																},
																"nativeSrc": "3405:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3405:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3398:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3398:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3437:22:6",
																"nodeType": "YulBlock",
																"src": "3437:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3439:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3439:16:6"
																			},
																			"nativeSrc": "3439:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3439:18:6"
																		},
																		"nativeSrc": "3439:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3439:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3429:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3429:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3432:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3432:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3426:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3426:2:6"
																},
																"nativeSrc": "3426:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3426:10:6"
															},
															"nativeSrc": "3423:36:6",
															"nodeType": "YulIf",
															"src": "3423:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3340:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3371:1:6",
														"nodeType": "YulTypedName",
														"src": "3371:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3374:1:6",
														"nodeType": "YulTypedName",
														"src": "3374:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3380:3:6",
														"nodeType": "YulTypedName",
														"src": "3380:3:6",
														"type": ""
													}
												],
												"src": "3340:125:6"
											},
											{
												"body": {
													"nativeSrc": "3522:116:6",
													"nodeType": "YulBlock",
													"src": "3522:116:6",
													"statements": [
														{
															"nativeSrc": "3532:20:6",
															"nodeType": "YulAssignment",
															"src": "3532:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3547:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3547:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3550:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3550:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3543:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3543:3:6"
																},
																"nativeSrc": "3543:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3543:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3532:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3532:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3610:22:6",
																"nodeType": "YulBlock",
																"src": "3610:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3612:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3612:16:6"
																			},
																			"nativeSrc": "3612:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3612:18:6"
																		},
																		"nativeSrc": "3612:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3612:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3581:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "3581:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3574:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3574:6:6"
																				},
																				"nativeSrc": "3574:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3574:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3588:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "3588:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3595:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "3595:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3604:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "3604:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3591:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3591:3:6"
																						},
																						"nativeSrc": "3591:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3591:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3585:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3585:2:6"
																				},
																				"nativeSrc": "3585:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3585:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3571:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3571:2:6"
																		},
																		"nativeSrc": "3571:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3564:6:6"
																},
																"nativeSrc": "3564:45:6",
																"nodeType": "YulFunctionCall",
																"src": "3564:45:6"
															},
															"nativeSrc": "3561:71:6",
															"nodeType": "YulIf",
															"src": "3561:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3470:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3501:1:6",
														"nodeType": "YulTypedName",
														"src": "3501:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3504:1:6",
														"nodeType": "YulTypedName",
														"src": "3504:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3510:7:6",
														"nodeType": "YulTypedName",
														"src": "3510:7:6",
														"type": ""
													}
												],
												"src": "3470:168:6"
											},
											{
												"body": {
													"nativeSrc": "3689:171:6",
													"nodeType": "YulBlock",
													"src": "3689:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3720:111:6",
																"nodeType": "YulBlock",
																"src": "3720:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3741:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3741:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3748:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3748:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3753:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3753:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3744:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3744:3:6"
																					},
																					"nativeSrc": "3744:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3744:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3734:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3734:6:6"
																			},
																			"nativeSrc": "3734:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3734:31:6"
																		},
																		"nativeSrc": "3734:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3734:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3785:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3785:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3788:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3788:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3778:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3778:6:6"
																			},
																			"nativeSrc": "3778:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3778:15:6"
																		},
																		"nativeSrc": "3778:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3778:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3813:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3816:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3816:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3806:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3806:6:6"
																			},
																			"nativeSrc": "3806:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3806:15:6"
																		},
																		"nativeSrc": "3806:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3806:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3709:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3709:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3702:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:6"
																},
																"nativeSrc": "3702:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3702:9:6"
															},
															"nativeSrc": "3699:132:6",
															"nodeType": "YulIf",
															"src": "3699:132:6"
														},
														{
															"nativeSrc": "3840:14:6",
															"nodeType": "YulAssignment",
															"src": "3840:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3849:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3849:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3852:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3852:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3845:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3845:3:6"
																},
																"nativeSrc": "3845:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3845:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3840:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3840:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3643:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3674:1:6",
														"nodeType": "YulTypedName",
														"src": "3674:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3677:1:6",
														"nodeType": "YulTypedName",
														"src": "3677:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3683:1:6",
														"nodeType": "YulTypedName",
														"src": "3683:1:6",
														"type": ""
													}
												],
												"src": "3643:217:6"
											},
											{
												"body": {
													"nativeSrc": "4039:171:6",
													"nodeType": "YulBlock",
													"src": "4039:171:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4056:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4056:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4067:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4067:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4049:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:6"
																},
																"nativeSrc": "4049:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4049:21:6"
															},
															"nativeSrc": "4049:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4049:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4090:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4090:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4101:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4101:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4086:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:6"
																		},
																		"nativeSrc": "4086:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4086:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4106:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4106:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4079:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4079:6:6"
																},
																"nativeSrc": "4079:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4079:30:6"
															},
															"nativeSrc": "4079:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4079:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4129:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4129:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4140:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4140:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4125:3:6"
																		},
																		"nativeSrc": "4125:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4125:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74204554482073656e74",
																		"kind": "string",
																		"nativeSrc": "4145:23:6",
																		"nodeType": "YulLiteral",
																		"src": "4145:23:6",
																		"type": "",
																		"value": "Insufficient ETH sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:6"
																},
																"nativeSrc": "4118:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:51:6"
															},
															"nativeSrc": "4118:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4118:51:6"
														},
														{
															"nativeSrc": "4178:26:6",
															"nodeType": "YulAssignment",
															"src": "4178:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4190:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4190:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4201:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4201:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4186:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:6"
																},
																"nativeSrc": "4186:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4186:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4178:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4178:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3865:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4016:9:6",
														"nodeType": "YulTypedName",
														"src": "4016:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4030:4:6",
														"nodeType": "YulTypedName",
														"src": "4030:4:6",
														"type": ""
													}
												],
												"src": "3865:345:6"
											},
											{
												"body": {
													"nativeSrc": "4406:14:6",
													"nodeType": "YulBlock",
													"src": "4406:14:6",
													"statements": [
														{
															"nativeSrc": "4408:10:6",
															"nodeType": "YulAssignment",
															"src": "4408:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "4415:3:6",
																"nodeType": "YulIdentifier",
																"src": "4415:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4408:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4215:205:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4390:3:6",
														"nodeType": "YulTypedName",
														"src": "4390:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4398:3:6",
														"nodeType": "YulTypedName",
														"src": "4398:3:6",
														"type": ""
													}
												],
												"src": "4215:205:6"
											},
											{
												"body": {
													"nativeSrc": "4599:168:6",
													"nodeType": "YulBlock",
													"src": "4599:168:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4616:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4616:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4627:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4627:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4609:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:6"
																},
																"nativeSrc": "4609:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4609:21:6"
															},
															"nativeSrc": "4609:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4609:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4650:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4650:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4661:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4661:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4646:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:6"
																		},
																		"nativeSrc": "4646:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4646:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4666:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4666:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4639:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:6"
																},
																"nativeSrc": "4639:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4639:30:6"
															},
															"nativeSrc": "4639:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4639:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4689:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4689:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4700:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4700:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4685:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4685:3:6"
																		},
																		"nativeSrc": "4685:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4685:18:6"
																	},
																	{
																		"hexValue": "556e61626c6520746f2073656e6420676173",
																		"kind": "string",
																		"nativeSrc": "4705:20:6",
																		"nodeType": "YulLiteral",
																		"src": "4705:20:6",
																		"type": "",
																		"value": "Unable to send gas"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4678:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4678:6:6"
																},
																"nativeSrc": "4678:48:6",
																"nodeType": "YulFunctionCall",
																"src": "4678:48:6"
															},
															"nativeSrc": "4678:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "4678:48:6"
														},
														{
															"nativeSrc": "4735:26:6",
															"nodeType": "YulAssignment",
															"src": "4735:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4747:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4747:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4758:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4758:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4743:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4743:3:6"
																},
																"nativeSrc": "4743:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4743:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4735:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4735:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6ecda98a5e42fcff0f3785ccf411cd3f6e1d3191e539e565496b2b1af554ed6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4425:342:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4576:9:6",
														"nodeType": "YulTypedName",
														"src": "4576:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4590:4:6",
														"nodeType": "YulTypedName",
														"src": "4590:4:6",
														"type": ""
													}
												],
												"src": "4425:342:6"
											},
											{
												"body": {
													"nativeSrc": "4821:79:6",
													"nodeType": "YulBlock",
													"src": "4821:79:6",
													"statements": [
														{
															"nativeSrc": "4831:17:6",
															"nodeType": "YulAssignment",
															"src": "4831:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4843:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4843:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4846:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4846:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4839:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:6"
																},
																"nativeSrc": "4839:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4839:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4831:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4831:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4872:22:6",
																"nodeType": "YulBlock",
																"src": "4872:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4874:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4874:16:6"
																			},
																			"nativeSrc": "4874:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4874:18:6"
																		},
																		"nativeSrc": "4874:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4874:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4863:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4863:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4869:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4869:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4860:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4860:2:6"
																},
																"nativeSrc": "4860:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4860:11:6"
															},
															"nativeSrc": "4857:37:6",
															"nodeType": "YulIf",
															"src": "4857:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4772:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4803:1:6",
														"nodeType": "YulTypedName",
														"src": "4803:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4806:1:6",
														"nodeType": "YulTypedName",
														"src": "4806:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4812:4:6",
														"nodeType": "YulTypedName",
														"src": "4812:4:6",
														"type": ""
													}
												],
												"src": "4772:128:6"
											},
											{
												"body": {
													"nativeSrc": "5079:174:6",
													"nodeType": "YulBlock",
													"src": "5079:174:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5096:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5096:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5107:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5089:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5089:6:6"
																},
																"nativeSrc": "5089:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5089:21:6"
															},
															"nativeSrc": "5089:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5089:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5130:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5130:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5141:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5141:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5126:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5126:3:6"
																		},
																		"nativeSrc": "5126:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5126:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5146:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5146:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5119:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:6"
																},
																"nativeSrc": "5119:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5119:30:6"
															},
															"nativeSrc": "5119:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5119:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5169:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5169:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5180:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5180:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5165:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:6"
																		},
																		"nativeSrc": "5165:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5165:18:6"
																	},
																	{
																		"hexValue": "556e61626c6520746f2073656e64206261636b2066756e64",
																		"kind": "string",
																		"nativeSrc": "5185:26:6",
																		"nodeType": "YulLiteral",
																		"src": "5185:26:6",
																		"type": "",
																		"value": "Unable to send back fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5158:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:6"
																},
																"nativeSrc": "5158:54:6",
																"nodeType": "YulFunctionCall",
																"src": "5158:54:6"
															},
															"nativeSrc": "5158:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "5158:54:6"
														},
														{
															"nativeSrc": "5221:26:6",
															"nodeType": "YulAssignment",
															"src": "5221:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5233:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5244:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5229:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5229:3:6"
																},
																"nativeSrc": "5229:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5229:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5221:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5221:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45565ba86530e34eb5b7c63e4c4dbe68694f761639dc03839c718286fd19914c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4905:348:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5056:9:6",
														"nodeType": "YulTypedName",
														"src": "5056:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5070:4:6",
														"nodeType": "YulTypedName",
														"src": "5070:4:6",
														"type": ""
													}
												],
												"src": "4905:348:6"
											},
											{
												"body": {
													"nativeSrc": "5432:227:6",
													"nodeType": "YulBlock",
													"src": "5432:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5449:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5449:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5460:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5460:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:6"
																},
																"nativeSrc": "5442:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5442:21:6"
															},
															"nativeSrc": "5442:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5442:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5483:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5483:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5494:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5494:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5479:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5479:3:6"
																		},
																		"nativeSrc": "5479:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5479:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5499:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5499:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5472:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5472:6:6"
																},
																"nativeSrc": "5472:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5472:30:6"
															},
															"nativeSrc": "5472:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5472:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5522:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5522:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5533:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5533:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5518:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:6"
																		},
																		"nativeSrc": "5518:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5518:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "5538:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5538:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5511:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:6"
																},
																"nativeSrc": "5511:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5511:62:6"
															},
															"nativeSrc": "5511:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5511:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5593:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5593:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5604:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5604:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5589:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5589:3:6"
																		},
																		"nativeSrc": "5589:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5589:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "5609:7:6",
																		"nodeType": "YulLiteral",
																		"src": "5609:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5582:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5582:6:6"
																},
																"nativeSrc": "5582:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5582:35:6"
															},
															"nativeSrc": "5582:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5582:35:6"
														},
														{
															"nativeSrc": "5626:27:6",
															"nodeType": "YulAssignment",
															"src": "5626:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5638:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5638:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5649:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5649:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5634:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5634:3:6"
																},
																"nativeSrc": "5634:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5634:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5626:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5626:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5258:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5409:9:6",
														"nodeType": "YulTypedName",
														"src": "5409:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5423:4:6",
														"nodeType": "YulTypedName",
														"src": "5423:4:6",
														"type": ""
													}
												],
												"src": "5258:401:6"
											},
											{
												"body": {
													"nativeSrc": "5838:228:6",
													"nodeType": "YulBlock",
													"src": "5838:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5855:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5855:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5866:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5866:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5848:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5848:6:6"
																},
																"nativeSrc": "5848:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5848:21:6"
															},
															"nativeSrc": "5848:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5848:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5889:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5889:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5900:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5900:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5885:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5885:3:6"
																		},
																		"nativeSrc": "5885:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5885:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5905:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5905:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:6"
																},
																"nativeSrc": "5878:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5878:30:6"
															},
															"nativeSrc": "5878:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5878:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5928:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5939:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5939:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5924:3:6"
																		},
																		"nativeSrc": "5924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5924:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "5944:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5944:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5917:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5917:6:6"
																},
																"nativeSrc": "5917:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5917:62:6"
															},
															"nativeSrc": "5917:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5917:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5999:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5999:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6010:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6010:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5995:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5995:3:6"
																		},
																		"nativeSrc": "5995:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5995:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "6015:8:6",
																		"nodeType": "YulLiteral",
																		"src": "6015:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5988:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5988:6:6"
																},
																"nativeSrc": "5988:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5988:36:6"
															},
															"nativeSrc": "5988:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5988:36:6"
														},
														{
															"nativeSrc": "6033:27:6",
															"nodeType": "YulAssignment",
															"src": "6033:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6045:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6045:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6056:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6056:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6041:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6041:3:6"
																},
																"nativeSrc": "6041:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6041:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6033:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6033:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5664:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5815:9:6",
														"nodeType": "YulTypedName",
														"src": "5815:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5829:4:6",
														"nodeType": "YulTypedName",
														"src": "5829:4:6",
														"type": ""
													}
												],
												"src": "5664:402:6"
											},
											{
												"body": {
													"nativeSrc": "6245:181:6",
													"nodeType": "YulBlock",
													"src": "6245:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6262:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6262:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6273:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6273:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6255:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:6"
																},
																"nativeSrc": "6255:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6255:21:6"
															},
															"nativeSrc": "6255:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6255:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6296:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6296:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6307:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6307:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6292:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6292:3:6"
																		},
																		"nativeSrc": "6292:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6292:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6312:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6312:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6285:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6285:6:6"
																},
																"nativeSrc": "6285:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6285:30:6"
															},
															"nativeSrc": "6285:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6285:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6335:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6335:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6346:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6346:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6331:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6331:3:6"
																		},
																		"nativeSrc": "6331:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6331:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742053535420746f6b656e7320746f206275726e",
																		"kind": "string",
																		"nativeSrc": "6351:33:6",
																		"nodeType": "YulLiteral",
																		"src": "6351:33:6",
																		"type": "",
																		"value": "Insufficient SST tokens to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6324:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6324:6:6"
																},
																"nativeSrc": "6324:61:6",
																"nodeType": "YulFunctionCall",
																"src": "6324:61:6"
															},
															"nativeSrc": "6324:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "6324:61:6"
														},
														{
															"nativeSrc": "6394:26:6",
															"nodeType": "YulAssignment",
															"src": "6394:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6406:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6406:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6417:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6402:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6402:3:6"
																},
																"nativeSrc": "6402:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6402:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6394:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6394:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5e0c0c8c39e7cc360eee60824b8f1f12aa2610b94fadb34a5354960e68f3a67__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6071:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6222:9:6",
														"nodeType": "YulTypedName",
														"src": "6222:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6236:4:6",
														"nodeType": "YulTypedName",
														"src": "6236:4:6",
														"type": ""
													}
												],
												"src": "6071:355:6"
											},
											{
												"body": {
													"nativeSrc": "6605:223:6",
													"nodeType": "YulBlock",
													"src": "6605:223:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6622:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6622:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6615:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6615:6:6"
																},
																"nativeSrc": "6615:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6615:21:6"
															},
															"nativeSrc": "6615:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6615:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6656:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6656:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6667:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6667:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6652:3:6"
																		},
																		"nativeSrc": "6652:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6672:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6672:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6645:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6645:6:6"
																},
																"nativeSrc": "6645:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6645:30:6"
															},
															"nativeSrc": "6645:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6645:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6695:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6695:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6706:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6706:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6691:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6691:3:6"
																		},
																		"nativeSrc": "6691:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6691:18:6"
																	},
																	{
																		"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f756768204554",
																		"kind": "string",
																		"nativeSrc": "6711:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6711:34:6",
																		"type": "",
																		"value": "Contract does not have enough ET"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6684:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6684:6:6"
																},
																"nativeSrc": "6684:62:6",
																"nodeType": "YulFunctionCall",
																"src": "6684:62:6"
															},
															"nativeSrc": "6684:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "6684:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6766:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6766:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6777:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6777:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6762:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6762:3:6"
																		},
																		"nativeSrc": "6762:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6762:18:6"
																	},
																	{
																		"hexValue": "48",
																		"kind": "string",
																		"nativeSrc": "6782:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6782:3:6",
																		"type": "",
																		"value": "H"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6755:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6755:6:6"
																},
																"nativeSrc": "6755:31:6",
																"nodeType": "YulFunctionCall",
																"src": "6755:31:6"
															},
															"nativeSrc": "6755:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "6755:31:6"
														},
														{
															"nativeSrc": "6795:27:6",
															"nodeType": "YulAssignment",
															"src": "6795:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6807:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6807:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6818:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6818:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6803:3:6"
																},
																"nativeSrc": "6803:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6803:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6795:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6795:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_891cf454a37c1b69b16907898af33d98f1d41dde5f3751d6c3c309f3e73c310b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6431:397:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6582:9:6",
														"nodeType": "YulTypedName",
														"src": "6582:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6596:4:6",
														"nodeType": "YulTypedName",
														"src": "6596:4:6",
														"type": ""
													}
												],
												"src": "6431:397:6"
											},
											{
												"body": {
													"nativeSrc": "7007:168:6",
													"nodeType": "YulBlock",
													"src": "7007:168:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7024:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7024:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7035:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7035:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7017:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:6"
																},
																"nativeSrc": "7017:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7017:21:6"
															},
															"nativeSrc": "7017:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7017:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7058:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7058:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7069:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7069:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7054:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7054:3:6"
																		},
																		"nativeSrc": "7054:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7054:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7074:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7047:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7047:6:6"
																},
																"nativeSrc": "7047:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7047:30:6"
															},
															"nativeSrc": "7047:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7047:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7097:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7097:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7108:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7108:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7093:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7093:3:6"
																		},
																		"nativeSrc": "7093:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7093:18:6"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e6420455448",
																		"kind": "string",
																		"nativeSrc": "7113:20:6",
																		"nodeType": "YulLiteral",
																		"src": "7113:20:6",
																		"type": "",
																		"value": "Failed to send ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7086:6:6"
																},
																"nativeSrc": "7086:48:6",
																"nodeType": "YulFunctionCall",
																"src": "7086:48:6"
															},
															"nativeSrc": "7086:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "7086:48:6"
														},
														{
															"nativeSrc": "7143:26:6",
															"nodeType": "YulAssignment",
															"src": "7143:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7155:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7166:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7151:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:6"
																},
																"nativeSrc": "7151:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7151:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6833:342:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6984:9:6",
														"nodeType": "YulTypedName",
														"src": "6984:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6998:4:6",
														"nodeType": "YulTypedName",
														"src": "6998:4:6",
														"type": ""
													}
												],
												"src": "6833:342:6"
											},
											{
												"body": {
													"nativeSrc": "7354:226:6",
													"nodeType": "YulBlock",
													"src": "7354:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7371:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7371:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7364:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7364:6:6"
																},
																"nativeSrc": "7364:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7364:21:6"
															},
															"nativeSrc": "7364:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7364:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7405:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7405:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7416:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7416:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7401:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7401:3:6"
																		},
																		"nativeSrc": "7401:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7401:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7421:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7421:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7394:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:6"
																},
																"nativeSrc": "7394:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7394:30:6"
															},
															"nativeSrc": "7394:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7394:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7444:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7444:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7455:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7455:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7440:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7440:3:6"
																		},
																		"nativeSrc": "7440:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7440:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "7460:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7460:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:6"
																},
																"nativeSrc": "7433:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7433:62:6"
															},
															"nativeSrc": "7433:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7433:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7515:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7515:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7526:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7526:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7511:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:6"
																		},
																		"nativeSrc": "7511:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7511:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "7531:6:6",
																		"nodeType": "YulLiteral",
																		"src": "7531:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7504:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:6"
																},
																"nativeSrc": "7504:34:6",
																"nodeType": "YulFunctionCall",
																"src": "7504:34:6"
															},
															"nativeSrc": "7504:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "7504:34:6"
														},
														{
															"nativeSrc": "7547:27:6",
															"nodeType": "YulAssignment",
															"src": "7547:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7559:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7559:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7570:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7570:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7555:3:6"
																},
																"nativeSrc": "7555:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7555:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7547:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7547:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7180:400:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7331:9:6",
														"nodeType": "YulTypedName",
														"src": "7331:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7345:4:6",
														"nodeType": "YulTypedName",
														"src": "7345:4:6",
														"type": ""
													}
												],
												"src": "7180:400:6"
											},
											{
												"body": {
													"nativeSrc": "7759:224:6",
													"nodeType": "YulBlock",
													"src": "7759:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7776:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7776:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7787:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7787:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7769:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:6"
																},
																"nativeSrc": "7769:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7769:21:6"
															},
															"nativeSrc": "7769:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7769:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7810:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7810:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7821:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7821:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7806:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7806:3:6"
																		},
																		"nativeSrc": "7806:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7806:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7826:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7826:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7799:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7799:6:6"
																},
																"nativeSrc": "7799:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7799:30:6"
															},
															"nativeSrc": "7799:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7799:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7849:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7849:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7860:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7860:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7845:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7845:3:6"
																		},
																		"nativeSrc": "7845:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7845:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "7865:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7865:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7838:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7838:6:6"
																},
																"nativeSrc": "7838:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7838:62:6"
															},
															"nativeSrc": "7838:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7838:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7920:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7920:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7931:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7931:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:6"
																		},
																		"nativeSrc": "7916:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "7936:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7936:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7909:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:6"
																},
																"nativeSrc": "7909:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7909:32:6"
															},
															"nativeSrc": "7909:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "7909:32:6"
														},
														{
															"nativeSrc": "7950:27:6",
															"nodeType": "YulAssignment",
															"src": "7950:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7962:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7962:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7973:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7973:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7958:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:6"
																},
																"nativeSrc": "7958:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7958:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7950:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7950:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7585:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7736:9:6",
														"nodeType": "YulTypedName",
														"src": "7736:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7750:4:6",
														"nodeType": "YulTypedName",
														"src": "7750:4:6",
														"type": ""
													}
												],
												"src": "7585:398:6"
											},
											{
												"body": {
													"nativeSrc": "8162:179:6",
													"nodeType": "YulBlock",
													"src": "8162:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8179:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8179:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8190:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8190:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8172:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8172:6:6"
																},
																"nativeSrc": "8172:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8172:21:6"
															},
															"nativeSrc": "8172:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8172:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8213:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8213:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8224:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8224:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8209:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8209:3:6"
																		},
																		"nativeSrc": "8209:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8209:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8229:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8229:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8202:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:6"
																},
																"nativeSrc": "8202:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8202:30:6"
															},
															"nativeSrc": "8202:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8202:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8252:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8263:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8263:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8248:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:6"
																		},
																		"nativeSrc": "8248:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8248:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "8268:31:6",
																		"nodeType": "YulLiteral",
																		"src": "8268:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8241:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8241:6:6"
																},
																"nativeSrc": "8241:59:6",
																"nodeType": "YulFunctionCall",
																"src": "8241:59:6"
															},
															"nativeSrc": "8241:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "8241:59:6"
														},
														{
															"nativeSrc": "8309:26:6",
															"nodeType": "YulAssignment",
															"src": "8309:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8321:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8321:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8332:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8332:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8317:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8317:3:6"
																},
																"nativeSrc": "8317:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8317:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8309:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8309:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7988:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8139:9:6",
														"nodeType": "YulTypedName",
														"src": "8139:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8153:4:6",
														"nodeType": "YulTypedName",
														"src": "8153:4:6",
														"type": ""
													}
												],
												"src": "7988:353:6"
											},
											{
												"body": {
													"nativeSrc": "8520:227:6",
													"nodeType": "YulBlock",
													"src": "8520:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8537:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8537:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8548:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8530:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:6"
																},
																"nativeSrc": "8530:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8530:21:6"
															},
															"nativeSrc": "8530:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8530:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8571:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8571:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8582:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8582:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8567:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8567:3:6"
																		},
																		"nativeSrc": "8567:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8567:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8587:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8587:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8560:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:6"
																},
																"nativeSrc": "8560:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8560:30:6"
															},
															"nativeSrc": "8560:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8560:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8610:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8610:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8621:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8621:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8606:3:6"
																		},
																		"nativeSrc": "8606:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8606:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "8626:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8626:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8599:6:6"
																},
																"nativeSrc": "8599:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8599:62:6"
															},
															"nativeSrc": "8599:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8599:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8681:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8681:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8692:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8692:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8677:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8677:3:6"
																		},
																		"nativeSrc": "8677:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8677:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "8697:7:6",
																		"nodeType": "YulLiteral",
																		"src": "8697:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8670:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8670:6:6"
																},
																"nativeSrc": "8670:35:6",
																"nodeType": "YulFunctionCall",
																"src": "8670:35:6"
															},
															"nativeSrc": "8670:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "8670:35:6"
														},
														{
															"nativeSrc": "8714:27:6",
															"nodeType": "YulAssignment",
															"src": "8714:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8726:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8726:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8737:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8737:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8722:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8722:3:6"
																},
																"nativeSrc": "8722:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8722:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8714:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8714:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8346:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8497:9:6",
														"nodeType": "YulTypedName",
														"src": "8497:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8511:4:6",
														"nodeType": "YulTypedName",
														"src": "8511:4:6",
														"type": ""
													}
												],
												"src": "8346:401:6"
											},
											{
												"body": {
													"nativeSrc": "8926:225:6",
													"nodeType": "YulBlock",
													"src": "8926:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8943:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8943:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8954:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8954:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8936:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8936:6:6"
																},
																"nativeSrc": "8936:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8936:21:6"
															},
															"nativeSrc": "8936:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8936:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8977:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8977:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8988:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8988:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8973:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8973:3:6"
																		},
																		"nativeSrc": "8973:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8973:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8993:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8966:6:6"
																},
																"nativeSrc": "8966:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8966:30:6"
															},
															"nativeSrc": "8966:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8966:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9016:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9016:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9027:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9027:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9012:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9012:3:6"
																		},
																		"nativeSrc": "9012:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9012:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "9032:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9032:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9005:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9005:6:6"
																},
																"nativeSrc": "9005:62:6",
																"nodeType": "YulFunctionCall",
																"src": "9005:62:6"
															},
															"nativeSrc": "9005:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "9005:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9087:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9087:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9098:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9098:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9083:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9083:3:6"
																		},
																		"nativeSrc": "9083:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9083:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "9103:5:6",
																		"nodeType": "YulLiteral",
																		"src": "9103:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9076:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9076:6:6"
																},
																"nativeSrc": "9076:33:6",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:6"
															},
															"nativeSrc": "9076:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "9076:33:6"
														},
														{
															"nativeSrc": "9118:27:6",
															"nodeType": "YulAssignment",
															"src": "9118:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9130:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9130:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9141:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9141:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9126:3:6"
																},
																"nativeSrc": "9126:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9126:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9118:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8752:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8903:9:6",
														"nodeType": "YulTypedName",
														"src": "8903:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8917:4:6",
														"nodeType": "YulTypedName",
														"src": "8917:4:6",
														"type": ""
													}
												],
												"src": "8752:399:6"
											},
											{
												"body": {
													"nativeSrc": "9330:228:6",
													"nodeType": "YulBlock",
													"src": "9330:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9347:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9347:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9358:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9358:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9340:6:6"
																},
																"nativeSrc": "9340:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9340:21:6"
															},
															"nativeSrc": "9340:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9340:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9381:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9381:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9392:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9392:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9377:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9377:3:6"
																		},
																		"nativeSrc": "9377:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9377:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9397:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9397:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9370:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9370:6:6"
																},
																"nativeSrc": "9370:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9370:30:6"
															},
															"nativeSrc": "9370:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9370:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9431:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:6"
																		},
																		"nativeSrc": "9416:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "9436:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9436:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9409:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9409:6:6"
																},
																"nativeSrc": "9409:62:6",
																"nodeType": "YulFunctionCall",
																"src": "9409:62:6"
															},
															"nativeSrc": "9409:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "9409:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9491:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9502:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9502:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9487:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9487:3:6"
																		},
																		"nativeSrc": "9487:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9487:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9507:8:6",
																		"nodeType": "YulLiteral",
																		"src": "9507:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9480:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9480:6:6"
																},
																"nativeSrc": "9480:36:6",
																"nodeType": "YulFunctionCall",
																"src": "9480:36:6"
															},
															"nativeSrc": "9480:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "9480:36:6"
														},
														{
															"nativeSrc": "9525:27:6",
															"nodeType": "YulAssignment",
															"src": "9525:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9537:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9537:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9548:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9548:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9533:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9533:3:6"
																},
																"nativeSrc": "9533:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9533:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9525:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9525:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9156:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9307:9:6",
														"nodeType": "YulTypedName",
														"src": "9307:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9321:4:6",
														"nodeType": "YulTypedName",
														"src": "9321:4:6",
														"type": ""
													}
												],
												"src": "9156:402:6"
											},
											{
												"body": {
													"nativeSrc": "9737:181:6",
													"nodeType": "YulBlock",
													"src": "9737:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9754:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9754:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9765:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9747:6:6"
																},
																"nativeSrc": "9747:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9747:21:6"
															},
															"nativeSrc": "9747:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9747:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9788:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9788:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9799:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9799:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9784:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9784:3:6"
																		},
																		"nativeSrc": "9784:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9784:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9804:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9804:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9777:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9777:6:6"
																},
																"nativeSrc": "9777:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9777:30:6"
															},
															"nativeSrc": "9777:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9777:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9827:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9827:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9838:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9838:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9823:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9823:3:6"
																		},
																		"nativeSrc": "9823:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9823:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "9843:33:6",
																		"nodeType": "YulLiteral",
																		"src": "9843:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9816:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9816:6:6"
																},
																"nativeSrc": "9816:61:6",
																"nodeType": "YulFunctionCall",
																"src": "9816:61:6"
															},
															"nativeSrc": "9816:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "9816:61:6"
														},
														{
															"nativeSrc": "9886:26:6",
															"nodeType": "YulAssignment",
															"src": "9886:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9898:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9898:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9909:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9909:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9894:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9894:3:6"
																},
																"nativeSrc": "9894:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9894:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9886:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9886:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9563:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9714:9:6",
														"nodeType": "YulTypedName",
														"src": "9714:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9728:4:6",
														"nodeType": "YulTypedName",
														"src": "9728:4:6",
														"type": ""
													}
												],
												"src": "9563:355:6"
											},
											{
												"body": {
													"nativeSrc": "10097:182:6",
													"nodeType": "YulBlock",
													"src": "10097:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10114:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10114:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10125:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10125:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10107:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10107:6:6"
																},
																"nativeSrc": "10107:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10107:21:6"
															},
															"nativeSrc": "10107:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "10107:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10148:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10148:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10159:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10159:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10144:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10144:3:6"
																		},
																		"nativeSrc": "10144:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10144:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10164:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10164:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10137:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10137:6:6"
																},
																"nativeSrc": "10137:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10137:30:6"
															},
															"nativeSrc": "10137:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "10137:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10187:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10187:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10198:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10198:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10183:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10183:3:6"
																		},
																		"nativeSrc": "10183:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10183:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "10203:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10203:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10176:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10176:6:6"
																},
																"nativeSrc": "10176:62:6",
																"nodeType": "YulFunctionCall",
																"src": "10176:62:6"
															},
															"nativeSrc": "10176:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "10176:62:6"
														},
														{
															"nativeSrc": "10247:26:6",
															"nodeType": "YulAssignment",
															"src": "10247:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10259:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10259:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10270:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10270:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10255:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10255:3:6"
																},
																"nativeSrc": "10255:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10255:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10247:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10247:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9923:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10074:9:6",
														"nodeType": "YulTypedName",
														"src": "10074:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10088:4:6",
														"nodeType": "YulTypedName",
														"src": "10088:4:6",
														"type": ""
													}
												],
												"src": "9923:356:6"
											},
											{
												"body": {
													"nativeSrc": "10458:223:6",
													"nodeType": "YulBlock",
													"src": "10458:223:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10475:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10475:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10486:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10486:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10468:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10468:6:6"
																},
																"nativeSrc": "10468:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10468:21:6"
															},
															"nativeSrc": "10468:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "10468:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10509:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10509:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10520:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10520:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10505:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10505:3:6"
																		},
																		"nativeSrc": "10505:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10505:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10525:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10525:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10498:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10498:6:6"
																},
																"nativeSrc": "10498:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10498:30:6"
															},
															"nativeSrc": "10498:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "10498:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10548:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10548:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10559:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10559:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10544:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10544:3:6"
																		},
																		"nativeSrc": "10544:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10544:18:6"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "10564:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10564:34:6",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10537:6:6"
																},
																"nativeSrc": "10537:62:6",
																"nodeType": "YulFunctionCall",
																"src": "10537:62:6"
															},
															"nativeSrc": "10537:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "10537:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10619:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10619:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10630:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10630:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10615:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10615:3:6"
																		},
																		"nativeSrc": "10615:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10615:18:6"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "10635:3:6",
																		"nodeType": "YulLiteral",
																		"src": "10635:3:6",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10608:6:6"
																},
																"nativeSrc": "10608:31:6",
																"nodeType": "YulFunctionCall",
																"src": "10608:31:6"
															},
															"nativeSrc": "10608:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "10608:31:6"
														},
														{
															"nativeSrc": "10648:27:6",
															"nodeType": "YulAssignment",
															"src": "10648:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10660:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10660:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10671:3:6",
																		"nodeType": "YulLiteral",
																		"src": "10671:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10656:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10656:3:6"
																},
																"nativeSrc": "10656:19:6",
																"nodeType": "YulFunctionCall",
																"src": "10656:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10648:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10648:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10284:397:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10435:9:6",
														"nodeType": "YulTypedName",
														"src": "10435:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10449:4:6",
														"nodeType": "YulTypedName",
														"src": "10449:4:6",
														"type": ""
													}
												],
												"src": "10284:397:6"
											},
											{
												"body": {
													"nativeSrc": "10860:224:6",
													"nodeType": "YulBlock",
													"src": "10860:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10877:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10877:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10888:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10888:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10870:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:6"
																},
																"nativeSrc": "10870:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10870:21:6"
															},
															"nativeSrc": "10870:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "10870:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10911:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10922:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10922:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10907:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:6"
																		},
																		"nativeSrc": "10907:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10907:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10927:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10927:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10900:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:6"
																},
																"nativeSrc": "10900:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10900:30:6"
															},
															"nativeSrc": "10900:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "10900:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10950:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10950:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10961:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10961:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10946:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10946:3:6"
																		},
																		"nativeSrc": "10946:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10946:18:6"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "10966:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10966:34:6",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10939:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10939:6:6"
																},
																"nativeSrc": "10939:62:6",
																"nodeType": "YulFunctionCall",
																"src": "10939:62:6"
															},
															"nativeSrc": "10939:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "10939:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11021:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11021:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11032:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11032:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11017:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11017:3:6"
																		},
																		"nativeSrc": "11017:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11017:18:6"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "11037:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11037:4:6",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11010:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11010:6:6"
																},
																"nativeSrc": "11010:32:6",
																"nodeType": "YulFunctionCall",
																"src": "11010:32:6"
															},
															"nativeSrc": "11010:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "11010:32:6"
														},
														{
															"nativeSrc": "11051:27:6",
															"nodeType": "YulAssignment",
															"src": "11051:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11074:3:6",
																		"nodeType": "YulLiteral",
																		"src": "11074:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11059:3:6"
																},
																"nativeSrc": "11059:19:6",
																"nodeType": "YulFunctionCall",
																"src": "11059:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11051:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10686:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10837:9:6",
														"nodeType": "YulTypedName",
														"src": "10837:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10851:4:6",
														"nodeType": "YulTypedName",
														"src": "10851:4:6",
														"type": ""
													}
												],
												"src": "10686:398:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient ETH sent\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_e6ecda98a5e42fcff0f3785ccf411cd3f6e1d3191e539e565496b2b1af554ed6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Unable to send gas\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_45565ba86530e34eb5b7c63e4c4dbe68694f761639dc03839c718286fd19914c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Unable to send back fund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f5e0c0c8c39e7cc360eee60824b8f1f12aa2610b94fadb34a5354960e68f3a67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Insufficient SST tokens to burn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_891cf454a37c1b69b16907898af33d98f1d41dde5f3751d6c3c309f3e73c310b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Contract does not have enough ET\")\n        mstore(add(headStart, 96), \"H\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Failed to send ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x110 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xFCD3533C EQ PUSH2 0x343 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x4FA1D436 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x695D2F13 EQ PUSH2 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x802C2CD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH7 0x265E8AF393000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x215 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH7 0x470DE4DF820000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x651 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x73B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x115D JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x113D JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x371 SWAP1 PUSH2 0x1185 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39D SWAP1 PUSH2 0x1185 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x418 DUP6 DUP3 DUP6 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x423 DUP6 DUP6 DUP6 PUSH2 0xB79 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0x440 DUP4 DUP4 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x46A DUP5 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x491 PUSH7 0x470DE4DF820000 DUP5 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP PUSH2 0x4A7 DUP2 DUP4 PUSH2 0x11D1 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FD DUP4 DUP6 PUSH2 0xD56 JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E61626C6520746F2073656E6420676173 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x59B DUP3 DUP5 PUSH2 0x11D1 JUMP JUMPDEST CALLVALUE GT ISZERO PUSH2 0x64A JUMPI PUSH0 CALLER DUP4 PUSH2 0x5AF DUP7 CALLVALUE PUSH2 0x121A JUMP JUMPDEST PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2073656E64206261636B2066756E640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x662 PUSH0 PUSH2 0xE9E JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x67E DUP4 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x11FB JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9CDD59999A58DA595B9D08115512081CD95B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x6D9 DUP2 DUP4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x6EA DUP3 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST CALLVALUE GT ISZERO PUSH2 0x737 JUMPI CALLER PUSH2 0x8FC PUSH2 0x706 DUP5 PUSH7 0x265E8AF393000 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x710 SWAP1 CALLVALUE PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x735 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x371 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x757 DUP3 DUP7 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x423 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x9E4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3FF DUP2 DUP6 DUP6 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x803 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0xE9E JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742053535420746F6B656E7320746F206275726E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x8DC CALLER DUP4 PUSH2 0xEEF JUMP JUMPDEST PUSH0 PUSH2 0x8EE PUSH7 0x265E8AF393000 DUP5 PUSH2 0x11E4 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768204554 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xFB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x998 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x8CC2D2D8CAC840E8DE40E6CADCC8408AA89 PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB12 DUP5 DUP5 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x9DE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x9DE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xC4A DUP4 DUP4 DUP4 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xCF7 SWAP1 DUP5 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD43 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9DE DUP5 DUP5 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xDB7 PUSH0 DUP4 DUP4 PUSH2 0x735 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDF4 SWAP1 DUP5 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x737 PUSH0 DUP4 DUP4 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xF5A DUP3 PUSH0 DUP4 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xFFB SWAP1 DUP5 SWAP1 PUSH2 0x121A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x735 DUP4 PUSH0 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1077 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x105B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10AD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10CC DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10F5 DUP5 PUSH2 0x1097 JUMP JUMPDEST SWAP3 POP PUSH2 0x1103 PUSH1 0x20 DUP6 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1134 PUSH1 0x20 DUP5 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1156 DUP3 PUSH2 0x1097 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1177 DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP PUSH2 0x1134 PUSH1 0x20 DUP5 ADD PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1199 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x11BD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x11BD JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1215 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x405 JUMPI PUSH2 0x405 PUSH2 0x11BD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SSTORE PUSH18 0xCFC45DF3D88E88DEEAE5F330FC627FEF9889 SAR 0xCE 0xF6 0xE9 SWAP11 CREATE2 0xC2 PUSH28 0x682A5464736F6C634300081800330000000000000000000000000000 ",
							"sourceMap": "180:2402:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;217:62:5;;;;;;;;;;;;264:15;217:62;;;;;713:25:6;;;701:2;686:18;217:62:5;567:177:6;4433:197:1;;;;;;;;;;-1:-1:-1;4433:197:1;;;;;:::i;:::-;;:::i;:::-;;;1351:14:6;;1344:22;1326:41;;1314:2;1299:18;4433:197:1;1186:187:6;3244:106:1;;;;;;;;;;-1:-1:-1;3331:12:1;;3244:106;;5192:286;;;;;;;;;;-1:-1:-1;5192:286:1;;;;;:::i;:::-;;:::i;3093:91::-;;;;;;;;;;-1:-1:-1;3093:91:1;;3175:2;1853:36:6;;1841:2;1826:18;3093:91:1;1711:184:6;5873:234:1;;;;;;;;;;-1:-1:-1;5873:234:1;;;;;:::i;:::-;;:::i;965:797:5:-;;;;;;:::i;:::-;;:::i;:::-;;308:48;;;;;;;;;;;;346:10;308:48;;3408:125:1;;;;;;;;;;-1:-1:-1;3408:125:1;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:0;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1273:6:0;;1201:85;;-1:-1:-1;;;;;1273:6:0;;;2496:51:6;;2484:2;2469:18;1201:85:0;2350:203:6;451:431:5;;;;;;:::i;:::-;;:::i;2367:102:1:-;;;;;;;;;;;;;:::i;6594:427::-;;;;;;;;;;-1:-1:-1;6594:427:1;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:1;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;;;;;-1:-1:-1;3976:149:1;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;1824:459:5:-;;;;;;;;;;-1:-1:-1;1824:459:5;;;;;:::i;:::-;;:::i;2156:98:1:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:1;719:10:4;4586:7:1;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:4;5375:38:1;5391:4;719:10:4;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:234::-;5961:4;719:10:4;6015:64:1;719:10:4;6031:7:1;6068:10;6040:25;719:10:4;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;965:797:5:-;1053:21;1114:7;1077:34;1100:11;264:15;1077:34;:::i;:::-;:44;;;;:::i;:::-;1053:68;-1:-1:-1;1131:14:5;1178:7;1148:27;346:10;1053:68;1148:27;:::i;:::-;:37;;;;:::i;:::-;1131:54;-1:-1:-1;1261:22:5;1131:54;1261:13;:22;:::i;:::-;1248:9;:35;;1240:69;;;;-1:-1:-1;;;1240:69:5;;4067:2:6;1240:69:5;;;4049:21:6;4106:2;4086:18;;;4079:30;-1:-1:-1;;;4125:18:6;;;4118:51;4186:18;;1240:69:5;;;;;;;;;1321:28;1327:8;1337:11;1321:5;:28::i;:::-;1369:13;1396:8;-1:-1:-1;;;;;1388:22:5;1419:6;1388:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1368:63;;;1449:8;1441:39;;;;-1:-1:-1;;;1441:39:5;;4627:2:6;1441:39:5;;;4609:21:6;4666:2;4646:18;;;4639:30;-1:-1:-1;;;4685:18:6;;;4678:48;4743:18;;1441:39:5;4425:342:6;1441:39:5;1552:22;1568:6;1552:13;:22;:::i;:::-;1540:9;:34;1536:220;;;1591:16;1621:10;1672:6;1644:25;1656:13;1644:9;:25;:::i;:::-;:34;;;;:::i;:::-;1613:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:93;;;1705:11;1697:48;;;;-1:-1:-1;;;1697:48:5;;5107:2:6;1697:48:5;;;5089:21:6;5146:2;5126:18;;;5119:30;5185:26;5165:18;;;5158:54;5229:18;;1697:48:5;4905:348:6;1697:48:5;1576:180;1536:220;1043:719;;;965:797;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;451:431:5:-;587:7;550:34;573:11;264:15;550:34;:::i;:::-;:44;;;;:::i;:::-;537:9;:57;;529:91;;;;-1:-1:-1;;;529:91:5;;4067:2:6;529:91:5;;;4049:21:6;4106:2;4086:18;;;4079:30;-1:-1:-1;;;4125:18:6;;;4118:51;4186:18;;529:91:5;3865:345:6;529:91:5;631:28;637:8;647:11;631:5;:28::i;:::-;739:34;762:11;264:15;739:34;:::i;:::-;727:9;:46;723:153;;;797:10;789:76;830:34;853:11;264:15;830:34;:::i;:::-;818:46;;:9;:46;:::i;:::-;789:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:153;451:431;;:::o;2367:102:1:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:1;6768:25;719:10:4;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;5460:2:6;6803:85:1;;;5442:21:6;5499:2;5479:18;;;5472:30;5538:34;5518:18;;;5511:62;-1:-1:-1;;;5589:18:6;;;5582:35;5634:19;;6803:85:1;5258:401:6;6803:85:1;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:1;719:10:4;3879:2:1;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5866:2:6;2161:73:0::1;::::0;::::1;5848:21:6::0;5905:2;5885:18;;;5878:30;5944:34;5924:18;;;5917:62;-1:-1:-1;;;5995:18:6;;;5988:36;6041:19;;2161:73:0::1;5664:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1824:459:5:-;1917:10;3482:7:1;3508:18;;;;;;;;;;;1932:6:5;-1:-1:-1;1907:31:5;1899:75;;;;-1:-1:-1;;;1899:75:5;;6273:2:6;1899:75:5;;;6255:21:6;6312:2;6292:18;;;6285:30;6351:33;6331:18;;;6324:61;6402:18;;1899:75:5;6071:355:6;1899:75:5;1984:25;1990:10;2002:6;1984:5;:25::i;:::-;2020:17;2040:29;264:15;2040:6;:29;:::i;:::-;2020:49;;2112:9;2087:21;:34;;2079:80;;;;-1:-1:-1;;;2079:80:5;;6633:2:6;2079:80:5;;;6615:21:6;6672:2;6652:18;;;6645:30;6711:34;6691:18;;;6684:62;-1:-1:-1;;;6762:18:6;;;6755:31;6803:19;;2079:80:5;6431:397:6;2079:80:5;2171:9;2186:18;-1:-1:-1;;;;;2186:23:5;2217:9;2186:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:61;;;2249:4;2241:35;;;;-1:-1:-1;;;2241:35:5;;7035:2:6;2241:35:5;;;7017:21:6;7074:2;7054:18;;;7047:30;-1:-1:-1;;;7093:18:6;;;7086:48;7151:18;;2241:35:5;6833:342:6;2241:35:5;1889:394;;1824:459;;:::o;10110:370:1:-;-1:-1:-1;;;;;10241:19:1;;10233:68;;;;-1:-1:-1;;;10233:68:1;;7382:2:6;10233:68:1;;;7364:21:6;7421:2;7401:18;;;7394:30;7460:34;7440:18;;;7433:62;-1:-1:-1;;;7511:18:6;;;7504:34;7555:19;;10233:68:1;7180:400:6;10233:68:1;-1:-1:-1;;;;;10319:21:1;;10311:68;;;;-1:-1:-1;;;10311:68:1;;7787:2:6;10311:68:1;;;7769:21:6;7826:2;7806:18;;;7799:30;7865:34;7845:18;;;7838:62;-1:-1:-1;;;7916:18:6;;;7909:32;7958:19;;10311:68:1;7585:398:6;10311:68:1;-1:-1:-1;;;;;10390:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;713:25:6;;;10441:32:1;;686:18:6;10441:32:1;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:1;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:1;;8190:2:6;11010:68:1;;;8172:21:6;8229:2;8209:18;;;8202:30;8268:31;8248:18;;;8241:59;8317:18;;11010:68:1;7988:353:6;11010:68:1;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;7475:651::-;-1:-1:-1;;;;;7601:18:1;;7593:68;;;;-1:-1:-1;;;7593:68:1;;8548:2:6;7593:68:1;;;8530:21:6;8587:2;8567:18;;;8560:30;8626:34;8606:18;;;8599:62;-1:-1:-1;;;8677:18:6;;;8670:35;8722:19;;7593:68:1;8346:401:6;7593:68:1;-1:-1:-1;;;;;7679:16:1;;7671:64;;;;-1:-1:-1;;;7671:64:1;;8954:2:6;7671:64:1;;;8936:21:6;8993:2;8973:18;;;8966:30;9032:34;9012:18;;;9005:62;-1:-1:-1;;;9083:18:6;;;9076:33;9126:19;;7671:64:1;8752:399:6;7671:64:1;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;-1:-1:-1;;;;;7817:15:1;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:1;;9358:2:6;7842:72:1;;;9340:21:6;9397:2;9377:18;;;9370:30;9436:34;9416:18;;;9409:62;-1:-1:-1;;;9487:18:6;;;9480:36;9533:19;;7842:72:1;9156:402:6;7842:72:1;-1:-1:-1;;;;;7948:15:1;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:1;8054:4;-1:-1:-1;;;;;8045:26:1;;8064:6;8045:26;;;;713:25:6;;701:2;686:18;;567:177;8045:26:1;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;8402:389::-;-1:-1:-1;;;;;8485:21:1;;8477:65;;;;-1:-1:-1;;;8477:65:1;;9765:2:6;8477:65:1;;;9747:21:6;9804:2;9784:18;;;9777:30;9843:33;9823:18;;;9816:61;9894:18;;8477:65:1;9563:355:6;8477:65:1;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:1;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:1;;713:25:6;;;-1:-1:-1;;;;;8688:37:1;;;8705:1;;8688:37;;701:2:6;686:18;8688:37:1;;;;;;;8736:48;8764:1;8768:7;8777:6;8736:19;:48::i;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10125:2:6;1414:68:0;;;10107:21:6;;;10144:18;;;10137:30;10203:34;10183:18;;;10176:62;10255:18;;1414:68:0;9923:356:6;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;9111:576:1:-;-1:-1:-1;;;;;9194:21:1;;9186:67;;;;-1:-1:-1;;;9186:67:1;;10486:2:6;9186:67:1;;;10468:21:6;10525:2;10505:18;;;10498:30;10564:34;10544:18;;;10537:62;-1:-1:-1;;;10615:18:6;;;10608:31;10656:19;;9186:67:1;10284:397:6;9186:67:1;9264:49;9285:7;9302:1;9306:6;9264:20;:49::i;:::-;-1:-1:-1;;;;;9349:18:1;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;-1:-1:-1;;;9377:71:1;;10888:2:6;9377:71:1;;;10870:21:6;10927:2;10907:18;;;10900:30;10966:34;10946:18;;;10939:62;-1:-1:-1;;;11017:18:6;;;11010:32;11059:19;;9377:71:1;10686:398:6;9377:71:1;-1:-1:-1;;;;;9482:18:1;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:1;;713:25:6;;;9610:1:1;;-1:-1:-1;;;;;9584:37:1;;;;;701:2:6;686:18;9584:37:1;;;;;;;9632:48;9652:7;9669:1;9673:6;9632:19;:48::i;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:173::-;817:20;;-1:-1:-1;;;;;866:31:6;;856:42;;846:70;;912:1;909;902:12;846:70;749:173;;;:::o;927:254::-;995:6;1003;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1095:29;1114:9;1095:29;:::i;:::-;1085:39;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;927:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:254::-;1968:6;1976;2029:2;2017:9;2008:7;2004:23;2000:32;1997:52;;;2045:1;2042;2035:12;1997:52;2081:9;2068:23;2058:33;;2110:38;2144:2;2133:9;2129:18;2110:38;:::i;:::-;2100:48;;1900:254;;;;;:::o;2159:186::-;2218:6;2271:2;2259:9;2250:7;2246:23;2242:32;2239:52;;;2287:1;2284;2277:12;2239:52;2310:29;2329:9;2310:29;:::i;:::-;2300:39;2159:186;-1:-1:-1;;;2159:186:6:o;2558:260::-;2626:6;2634;2687:2;2675:9;2666:7;2662:23;2658:32;2655:52;;;2703:1;2700;2693:12;2655:52;2726:29;2745:9;2726:29;:::i;:::-;2716:39;;2774:38;2808:2;2797:9;2793:18;2774:38;:::i;2823:380::-;2902:1;2898:12;;;;2945;;;2966:61;;3020:4;3012:6;3008:17;2998:27;;2966:61;3073:2;3065:6;3062:14;3042:18;3039:38;3036:161;;3119:10;3114:3;3110:20;3107:1;3100:31;3154:4;3151:1;3144:15;3182:4;3179:1;3172:15;3036:161;;2823:380;;;:::o;3208:127::-;3269:10;3264:3;3260:20;3257:1;3250:31;3300:4;3297:1;3290:15;3324:4;3321:1;3314:15;3340:125;3405:9;;;3426:10;;;3423:36;;;3439:18;;:::i;3470:168::-;3543:9;;;3574;;3591:15;;;3585:22;;3571:37;3561:71;;3612:18;;:::i;3643:217::-;3683:1;3709;3699:132;;3753:10;3748:3;3744:20;3741:1;3734:31;3788:4;3785:1;3778:15;3816:4;3813:1;3806:15;3699:132;-1:-1:-1;3845:9:6;;3643:217::o;4772:128::-;4839:9;;;4860:11;;;4857:37;;;4874:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "941400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GAS_FEE_TAP()": "305",
								"MINT_PRICE_PER_TOKEN()": "240",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24669",
								"balanceOf(address)": "2560",
								"burn(uint256,address)": "infinite",
								"decimals()": "221",
								"decreaseAllowance(address,uint256)": "26967",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256,address)": "infinite",
								"mintWithGasTap(uint256,address)": "infinite",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2381",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 2582,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 410,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 410,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 410,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 369,
									"end": 410,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14DBD4D20814D4D5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14D4D5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2077,
									"end": 2084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 2582,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220835571cfc45df3d88e88deeae5f330fc627fef98891dcef6e99af5c27b682a5464736f6c63430008180033",
									".code": [
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "FCD3533C"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "94BF804D"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "4FA1D436"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "695D2F13"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "802C2CD"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 180,
											"end": 2582,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 217,
											"end": 279,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 217,
											"end": 279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 217,
											"end": 279,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 217,
											"end": 279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 264,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "265E8AF393000"
										},
										{
											"begin": 217,
											"end": 279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 217,
											"end": 279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 217,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 279,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 713,
											"end": 738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 217,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 567,
											"end": 744,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1365,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1366,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1326,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1186,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 965,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 965,
											"end": 1762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 308,
											"end": 356,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 308,
											"end": 356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 346,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "470DE4DF820000"
										},
										{
											"begin": 308,
											"end": 356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 308,
											"end": 356,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3408,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2350,
											"end": 2553,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 451,
											"end": 882,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 451,
											"end": 882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 451,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 451,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 451,
											"end": 882,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 451,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 451,
											"end": 882,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 451,
											"end": 882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 451,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2367,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1824,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1824,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4570,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5375,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5423,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6040,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6040,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6015,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1077,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1100,
											"end": 1111,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "265E8AF393000"
										},
										{
											"begin": 1077,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1077,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1077,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1077,
											"end": 1121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1077,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1121,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1077,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1148,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 346,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "470DE4DF820000"
										},
										{
											"begin": 1053,
											"end": 1121,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1148,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1175,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1148,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1148,
											"end": 1185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1148,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1148,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1131,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1274,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1261,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1261,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1283,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1283,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4079,
											"end": 4109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D08115512081CD95B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1240,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1327,
											"end": 1335,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1348,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1321,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1349,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1321,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E61626C6520746F2073656E6420676173"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4726,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4425,
											"end": 4767,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1441,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1552,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1574,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1756,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1536,
											"end": 1756,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1631,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1656,
											"end": 1669,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1644,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1669,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1644,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1644,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1716,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5089,
											"end": 5110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5148,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5119,
											"end": 5149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "PUSH",
											"source": 6,
											"value": "556E61626C6520746F2073656E64206261636B2066756E640000000000000000"
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5212,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4905,
											"end": 5253,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1697,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 1756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1756,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1536,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 1762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 882,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 451,
											"end": 882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 594,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 550,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 573,
											"end": 584,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 264,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "265E8AF393000"
										},
										{
											"begin": 550,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 550,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 550,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 550,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 550,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 550,
											"end": 594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 550,
											"end": 594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 550,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 550,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 550,
											"end": 594,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 550,
											"end": 594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 537,
											"end": 546,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 537,
											"end": 594,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 594,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 529,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 529,
											"end": 620,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 620,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 529,
											"end": 620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 529,
											"end": 620,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 620,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 620,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 529,
											"end": 620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4079,
											"end": 4109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D08115512081CD95B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 529,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3865,
											"end": 4210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 529,
											"end": 620,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 529,
											"end": 620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 631,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 637,
											"end": 645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 647,
											"end": 658,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 631,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 631,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 631,
											"end": 659,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 631,
											"end": 659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 739,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 762,
											"end": 773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 264,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "265E8AF393000"
										},
										{
											"begin": 739,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 739,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 739,
											"end": 773,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 739,
											"end": 773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 727,
											"end": 736,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 727,
											"end": 773,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 723,
											"end": 876,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 723,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 723,
											"end": 876,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 797,
											"end": 807,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 830,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 853,
											"end": 864,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "265E8AF393000"
										},
										{
											"begin": 830,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 830,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 830,
											"end": 864,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 830,
											"end": 864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 818,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 818,
											"end": 864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 818,
											"end": 827,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 818,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 818,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 818,
											"end": 864,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 818,
											"end": 864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 789,
											"end": 865,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 865,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 789,
											"end": 865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 723,
											"end": 876,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 723,
											"end": 876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 451,
											"end": 882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 451,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2448,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6768,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5572,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5573,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5634,
											"end": 5653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5258,
											"end": 5659,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6922,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3862,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5848,
											"end": 5869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 5907,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 5978,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5924,
											"end": 5942,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5924,
											"end": 5942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5917,
											"end": 5979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 6013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6060,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6041,
											"end": 6060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5664,
											"end": 6066,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1927,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6273,
											"end": 6275,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6255,
											"end": 6276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6292,
											"end": 6310,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6292,
											"end": 6310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6384,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742053535420746F6B656E7320746F206275726E00"
										},
										{
											"begin": 6331,
											"end": 6349,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6331,
											"end": 6349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6071,
											"end": 6426,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1899,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1990,
											"end": 2000,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1984,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2009,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1984,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 264,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "265E8AF393000"
										},
										{
											"begin": 2040,
											"end": 2046,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2040,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2069,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2040,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2020,
											"end": 2069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2121,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2121,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6745,
											"name": "PUSH",
											"source": 6,
											"value": "436F6E747261637420646F6573206E6F74206861766520656E6F756768204554"
										},
										{
											"begin": 6691,
											"end": 6709,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6691,
											"end": 6709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6803,
											"end": 6822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6431,
											"end": 6828,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2079,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2186,
											"end": 2209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2226,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7054,
											"end": 7072,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7054,
											"end": 7072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7054,
											"end": 7072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7047,
											"end": 7077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8CC2D2D8CAC840E8DE40E6CADCC8408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6833,
											"end": 7175,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2241,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 2283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 2283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7421,
											"end": 7423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7494,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7504,
											"end": 7538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7180,
											"end": 7580,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7826,
											"end": 7828,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7806,
											"end": 7824,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7806,
											"end": 7824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7865,
											"end": 7899,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7958,
											"end": 7977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7585,
											"end": 7983,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 686,
											"end": 704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10918,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8172,
											"end": 8193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8268,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8241,
											"end": 8300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7988,
											"end": 8341,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 11120,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8530,
											"end": 8551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8560,
											"end": 8590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8626,
											"end": 8660,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8705,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8741,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8722,
											"end": 8741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8346,
											"end": 8747,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8966,
											"end": 8996,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9032,
											"end": 9066,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9005,
											"end": 9067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9126,
											"end": 9145,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9126,
											"end": 9145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8752,
											"end": 9151,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7767,
											"end": 7771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7777,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7746,
											"end": 7784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7746,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9358,
											"end": 9360,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9340,
											"end": 9361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9397,
											"end": 9399,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 9377,
											"end": 9395,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9377,
											"end": 9395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9377,
											"end": 9395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9470,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 9416,
											"end": 9434,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9416,
											"end": 9434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9480,
											"end": 9516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9533,
											"end": 9552,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9533,
											"end": 9552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9156,
											"end": 9558,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8006,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 686,
											"end": 704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 744,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8108,
											"end": 8110,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8082,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8082,
											"end": 8119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9804,
											"end": 9806,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 9876,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9823,
											"end": 9841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9816,
											"end": 9877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9563,
											"end": 9918,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8553,
											"end": 8602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8602,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 8553,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8629,
											"end": 8635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8613,
											"end": 8635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8645,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8736,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 8764,
											"end": 8765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8736,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8736,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10107,
											"end": 10128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10107,
											"end": 10128,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10144,
											"end": 10162,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10237,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10183,
											"end": 10201,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10183,
											"end": 10201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10183,
											"end": 10201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10176,
											"end": 10238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9923,
											"end": 10279,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9111,
											"end": 9687,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 9111,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10486,
											"end": 10488,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10468,
											"end": 10489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10525,
											"end": 10527,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 10505,
											"end": 10523,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10505,
											"end": 10523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10505,
											"end": 10523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10498,
											"end": 10528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10564,
											"end": 10598,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10537,
											"end": 10599,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10615,
											"end": 10633,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10615,
											"end": 10633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10608,
											"end": 10639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10656,
											"end": 10675,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 10656,
											"end": 10675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10284,
											"end": 10681,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 9285,
											"end": 9292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9264,
											"end": 9313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9313,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 9264,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10870,
											"end": 10891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10927,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10900,
											"end": 10930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10966,
											"end": 11000,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 10946,
											"end": 10964,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10946,
											"end": 10964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10946,
											"end": 10964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10939,
											"end": 11001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11017,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11017,
											"end": 11035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11078,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11059,
											"end": 11078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10686,
											"end": 11084,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9526,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9558,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 9546,
											"end": 9568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9610,
											"end": 9611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 701,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9652,
											"end": 9659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9669,
											"end": 9670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9632,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9632,
											"end": 9680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 922,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 749,
											"end": 922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 837,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 866,
											"end": 897,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 866,
											"end": 897,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 856,
											"end": 898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 898,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 846,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 846,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 912,
											"end": 913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 914,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 846,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 846,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 922,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 749,
											"end": 922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 749,
											"end": 922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 927,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 927,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1058,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1059,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1076,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1024,
											"end": 1076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1062,
											"end": 1074,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1076,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1024,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1095,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1124,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1174,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1174,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 927,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2154,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1900,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2026,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2027,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2049,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 1997,
											"end": 2049,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2047,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2049,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 1997,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2110,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2154,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2154,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2345,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2159,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2257,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2274,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2291,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2239,
											"end": 2291,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2289,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2291,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2239,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2310,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2339,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 2310,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2339,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2345,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2159,
											"end": 2345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2818,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2558,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2673,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2705,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 2655,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 2745,
											"end": 2754,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2726,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 2726,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2808,
											"end": 2810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2774,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 3203,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2823,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2957,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3076,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3077,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3036,
											"end": 3197,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3110,
											"end": 3130,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3131,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3158,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3144,
											"end": 3159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3186,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3197,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3036,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 3203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 3203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 3203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 3203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3335,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3208,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3264,
											"end": 3267,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3260,
											"end": 3280,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3304,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3297,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3290,
											"end": 3305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3465,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3340,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3414,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3436,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3459,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3423,
											"end": 3459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3439,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3470,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3606,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3607,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3607,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3608,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3561,
											"end": 3632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3612,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3860,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3643,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 3699,
											"end": 3831,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3763,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3744,
											"end": 3764,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3792,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3820,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3831,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 3699,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4900,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4772,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4871,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4857,
											"end": 4894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4874,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4874,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.0/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.7.0/utils/Context.sol",
								"sosh/SST.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"GAS_FEE_TAP()": "695d2f13",
							"MINT_PRICE_PER_TOKEN()": "0802c2cd",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256,address)": "fcd3533c",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256,address)": "94bf804d",
							"mintWithGasTap(uint256,address)": "4fa1d436",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GAS_FEE_TAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_PRICE_PER_TOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destinationAddress\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"aAWallet\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"aAWallet\",\"type\":\"address\"}],\"name\":\"mintWithGasTap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sosh/SST.sol\":\"SST\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.0/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.7.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"sosh/SST.sol\":{\"keccak256\":\"0x6c1f3e6f0f360fb19a7ea94631ff5237d052cc3b14d1341df0068479fcafff70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb48cc85249bc8462a12060529c44a76134d15d286fc858e9a3a8c7a47ae544d\",\"dweb:/ipfs/QmSz2QZtxgAupTiv6z4whi6aYxxk8KFiv8pc1qZyHAxiBP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "sosh/SST.sol:SST",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "sosh/SST.sol:SST",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "sosh/SST.sol:SST",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "sosh/SST.sol:SST",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "sosh/SST.sol:SST",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "sosh/SST.sol:SST",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							823
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 824,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								823
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							823
						],
						"ERC20": [
							698
						],
						"IERC20": [
							776
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 699,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 699,
							"sourceUnit": 777,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 699,
							"sourceUnit": 802,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 699,
							"sourceUnit": 824,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 119,
										"name": "Context",
										"nameLocations": [
											"1421:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "1421:7:1"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:1"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC20",
										"nameLocations": [
											"1430:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 776,
										"src": "1430:6:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:1"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1438:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 801,
										"src": "1438:14:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 698,
							"linearizedBaseContracts": [
								698,
								801,
								776,
								823
							],
							"name": "ERC20",
							"nameLocation": "1412:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 698,
									"src": "1459:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 127,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 698,
									"src": "1511:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 133,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 132,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 698,
									"src": "1585:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 698,
									"src": "1620:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 698,
									"src": "1646:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2034:57:1",
										"statements": [
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2044:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2077:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1990:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2011:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:1"
									},
									"scope": 698,
									"src": "1978:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2225:29:1",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2242:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "2235:12:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:1"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2210:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:1"
									},
									"scope": 698,
									"src": "2156:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										794
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2438:31:1",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "2448:14:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2423:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:1"
									},
									"scope": 698,
									"src": "2367:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "3158:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "3168:9:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "3151:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:1"
									},
									"scope": 698,
									"src": "3093:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3314:36:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "3331:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "3324:19:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:1"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3305:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:1"
									},
									"scope": 698,
									"src": "3244:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										733
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3491:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 206,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3508:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3501:25:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3427:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:1"
									},
									"scope": 698,
									"src": "3408:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										743
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3814:104:1",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3824:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 224,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3840:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3872:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3879:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3883:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 221,
												"id": 234,
												"nodeType": "Return",
												"src": "3900:11:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3747:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3759:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:1"
									},
									"scope": 698,
									"src": "3729:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4074:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4091:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4103:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4110:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "4084:34:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:1"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4010:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:1"
									},
									"scope": 698,
									"src": "3976:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										763
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4522:108:1",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "4532:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 265,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4548:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4579:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "4570:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 277,
												"nodeType": "Return",
												"src": "4612:11:1"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4450:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4467:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4516:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:1"
									},
									"scope": 698,
									"src": "4433:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										775
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5325:153:1",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "5335:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5353:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5391:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "5397:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5406:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "5375:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5439:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5443:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "5423:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 310,
												"nodeType": "Return",
												"src": "5460:11:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:1"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5245:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5265:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5319:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:1"
									},
									"scope": 698,
									"src": "5192:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5967:140:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5977:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5993:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6024:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6031:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "6050:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 332,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6057:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6040:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 334,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6068:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "6015:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 321,
												"id": 339,
												"nodeType": "Return",
												"src": "6089:11:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5917:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5961:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:1"
									},
									"scope": 698,
									"src": "5873:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "6693:328:1",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6703:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "6719:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:1"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6741:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6778:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6785:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "6768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6811:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 365,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "6831:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:1"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6931:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6938:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "6947:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "6966:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "6922:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 380,
												"nodeType": "Return",
												"src": "7003:11:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6621:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6638:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:1"
									},
									"scope": 698,
									"src": "6594:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "7583:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "7601:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "7679:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7767:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7773:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7777:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "7746:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "7795:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "7817:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7827:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7850:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "7865:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:1"
											},
											{
												"id": 439,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:1",
												"statements": [
													{
														"expression": {
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "7948:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"id": 432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "7958:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7966:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "7980:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 440,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "8006:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 442,
														"indexExpression": {
															"id": 441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8016:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 443,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "8023:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8054:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8060:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8064:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "8045:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8040:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8102:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8108:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8112:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "8082:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7503:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7525:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:1"
									},
									"scope": 698,
									"src": "7475:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "8467:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "8485:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "8553:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8613:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8629:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:1"
											},
											{
												"expression": {
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 490,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "8645:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 492,
														"indexExpression": {
															"id": 491,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8655:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 493,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8667:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 497,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8709:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8718:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 496,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "8688:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "EmitStatement",
												"src": "8683:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 506,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8768:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8777:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 505,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "8736:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "8417:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "8434:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:1"
									},
									"scope": 698,
									"src": "8402:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "9176:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 524,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "9194:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 525,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 534,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "9285:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "9306:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "9264:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:1"
											},
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "9324:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"baseExpression": {
														"id": 544,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9349:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 546,
													"indexExpression": {
														"id": 545,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "9359:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "9385:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 550,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "9403:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:1"
											},
											{
												"id": 563,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:1",
												"statements": [
													{
														"expression": {
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 555,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "9482:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 557,
																"indexExpression": {
																	"id": 556,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "9492:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 558,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "9503:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 559,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "9520:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 562,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 564,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "9546:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 565,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "9562:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 569,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "9593:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "9614:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "9584:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "9579:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 578,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "9652:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "9673:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 577,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9632:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:1"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "9126:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "9143:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:1"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:1"
									},
									"scope": 698,
									"src": "9111:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "10223:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 598,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "10241:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 599,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 608,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "10319:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 609,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:1"
											},
											{
												"expression": {
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 617,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "10390:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 620,
															"indexExpression": {
																"id": 618,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "10402:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 621,
														"indexExpression": {
															"id": 619,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "10409:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 622,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "10420:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 626,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "10450:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "10457:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "10466:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 625,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "10441:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "10436:37:1"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "10137:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "10160:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "10185:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:1"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:1"
									},
									"scope": 698,
									"src": "10110:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "10881:321:1",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "10891:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"initialValue": {
													"arguments": [
														{
															"id": 645,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "10928:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "10935:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 644,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "10918:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 649,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "10957:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 651,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 650,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10991:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "10953:243:1",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "10996:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 657,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 643,
																			"src": "11018:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 658,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "11038:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 656,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:1"
														},
														{
															"id": 671,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 664,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "11129:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 665,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "11136:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 666,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 643,
																					"src": "11145:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 667,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 639,
																					"src": "11164:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 663,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "11120:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10795:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10818:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10843:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:1"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:1"
									},
									"scope": 698,
									"src": "10761:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "11905:2:1",
										"statements": []
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "11825:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "11847:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "11867:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:1"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:1"
									},
									"scope": 698,
									"src": "11786:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "12613:2:1",
										"statements": []
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "12533:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "12555:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "12575:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:1"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:1"
									},
									"scope": 698,
									"src": "12495:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 699,
							"src": "1403:11214:1",
							"usedErrors": [],
							"usedEvents": [
								710,
								719
							]
						}
					],
					"src": "105:12513:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							776
						]
					},
					"id": 777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 700,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 701,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 776,
							"linearizedBaseContracts": [
								776
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 710,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 719,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 776,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 776,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 776,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 776,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 776,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 776,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 777,
							"src": "202:2564:2",
							"usedErrors": [],
							"usedEvents": [
								710,
								719
							]
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.0/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							776
						],
						"IERC20Metadata": [
							801
						]
					},
					"id": 802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 802,
							"sourceUnit": 777,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 776,
										"src": "305:6:3"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 801,
							"linearizedBaseContracts": [
								801,
								776
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 801,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 801,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 801,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 802,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								710,
								719
							]
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.7.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							823
						]
					},
					"id": 824,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 823,
							"linearizedBaseContracts": [
								823
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 809,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 808,
												"id": 811,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 823,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 818,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 817,
												"id": 820,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 823,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 824,
							"src": "608:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"sosh/SST.sol": {
				"ast": {
					"absolutePath": "sosh/SST.sol",
					"exportedSymbols": {
						"Context": [
							823
						],
						"ERC20": [
							698
						],
						"IERC20": [
							776
						],
						"IERC20Metadata": [
							801
						],
						"Ownable": [
							112
						],
						"SST": [
							1036
						]
					},
					"id": 1037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@4.7.0/token/ERC20/ERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1037,
							"sourceUnit": 699,
							"src": "58:61:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.0/access/Ownable.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1037,
							"sourceUnit": 113,
							"src": "120:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "ERC20",
										"nameLocations": [
											"196:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 698,
										"src": "196:5:5"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "196:5:5"
								},
								{
									"baseName": {
										"id": 830,
										"name": "Ownable",
										"nameLocations": [
											"203:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "203:7:5"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "203:7:5"
								}
							],
							"canonicalName": "SST",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1036,
							"linearizedBaseContracts": [
								1036,
								112,
								698,
								801,
								776,
								823
							],
							"name": "SST",
							"nameLocation": "189:3:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "0802c2cd",
									"id": 834,
									"mutability": "constant",
									"name": "MINT_PRICE_PER_TOKEN",
									"nameLocation": "241:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 1036,
									"src": "217:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 832,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363735303030303030303030303030",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "264:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_675000000000000_by_1",
											"typeString": "int_const 675000000000000"
										},
										"value": "675000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "695d2f13",
									"id": 837,
									"mutability": "constant",
									"name": "GAS_FEE_TAP",
									"nameLocation": "332:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1036,
									"src": "308:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 835,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3032",
										"id": 836,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:10:5",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20000000000000000_by_1",
											"typeString": "int_const 20000000000000000"
										},
										"value": "0.02"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "408:2:5",
										"statements": []
									},
									"id": 845,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "536f534820535354",
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "389:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1161c9388a1441392542a945447229d0e325bdf74c9762b4c3e5909976195132",
														"typeString": "literal_string \"SoSH SST\""
													},
													"value": "SoSH SST"
												},
												{
													"hexValue": "535354",
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "401:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0e7f9c62ef3a0e3a57b632226e8c8c02912b0e3d0b7895ad9bddd93afbdf4925",
														"typeString": "literal_string \"SST\""
													},
													"value": "SST"
												}
											],
											"id": 842,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 839,
												"name": "ERC20",
												"nameLocations": [
													"383:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 698,
												"src": "383:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "383:24:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:2:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:0:5"
									},
									"scope": 1036,
									"src": "369:41:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "519:363:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 853,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "537:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "541:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "537:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 855,
																		"name": "MINT_PRICE_PER_TOKEN",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "550:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 856,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "573:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "550:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "587:7:5",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "550:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "537:57:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74204554482073656e74",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "596:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
																"typeString": "literal_string \"Insufficient ETH sent\""
															},
															"value": "Insufficient ETH sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
																"typeString": "literal_string \"Insufficient ETH sent\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "529:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "529:91:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "529:91:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "aAWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "637:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "647:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 864,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "631:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "631:28:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 869,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "727:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "731:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "727:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 871,
															"name": "MINT_PRICE_PER_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "739:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 872,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "762:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "739:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "727:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "723:153:5",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "775:101:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 881,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "818:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "822:5:5",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "818:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 883,
																				"name": "MINT_PRICE_PER_TOKEN",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 834,
																				"src": "830:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 884,
																				"name": "tokenAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "853:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "830:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "818:46:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 877,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "797:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "801:6:5",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "797:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "789:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 875,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "789:8:5",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "789:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "809:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "789:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "789:76:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "789:76:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "94bf804d",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "460:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "473:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "465:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "aAWallet",
												"nameLocation": "494:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "486:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:39:5"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "519:0:5"
									},
									"scope": 1036,
									"src": "451:431:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "1043:719:5",
										"statements": [
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "totalMintCost",
														"nameLocation": "1061:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "1053:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1053:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 901,
															"name": "MINT_PRICE_PER_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "1077:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 902,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1100:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1077:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1114:7:5",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "1077:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1053:68:5"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "gasFee",
														"nameLocation": "1139:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "1131:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1131:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 909,
															"name": "totalMintCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "1148:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 910,
															"name": "GAS_FEE_TAP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1164:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1148:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1178:7:5",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "1148:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1131:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 916,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1248:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1252:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1248:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 918,
																	"name": "totalMintCost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "1261:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 919,
																	"name": "gasFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1277:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1261:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1248:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74204554482073656e74",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1285:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
																"typeString": "literal_string \"Insufficient ETH sent\""
															},
															"value": "Insufficient ETH sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404",
																"typeString": "literal_string \"Insufficient ETH sent\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "1240:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "aAWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "1327:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1337:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1321:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1321:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "1321:28:5"
											},
											{
												"assignments": [
													931,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "success1",
														"nameLocation": "1374:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "1369:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 930,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1369:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 942,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1428:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 934,
																		"name": "aAWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "1396:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1388:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 932,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1388:8:5",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1388:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1406:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1388:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"components": [
																	{
																		"id": 937,
																		"name": "gasFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "1419:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 938,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1418:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1388:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1368:63:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "success1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "1449:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e61626c6520746f2073656e6420676173",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1459:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6ecda98a5e42fcff0f3785ccf411cd3f6e1d3191e539e565496b2b1af554ed6",
																"typeString": "literal_string \"Unable to send gas\""
															},
															"value": "Unable to send gas"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6ecda98a5e42fcff0f3785ccf411cd3f6e1d3191e539e565496b2b1af554ed6",
																"typeString": "literal_string \"Unable to send gas\""
															}
														],
														"id": 943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "1441:39:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 948,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1540:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1544:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1540:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 950,
															"name": "totalMintCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "1552:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 951,
															"name": "gasFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "1568:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1552:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 978,
												"nodeType": "IfStatement",
												"src": "1536:220:5",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "1576:180:5",
													"statements": [
														{
															"assignments": [
																955,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 955,
																	"mutability": "mutable",
																	"name": "successBack",
																	"nameLocation": "1596:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 977,
																	"src": "1591:16:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1591:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 971,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1680:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 958,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1621:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 959,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1625:6:5",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1621:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1613:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 956,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1613:8:5",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1613:19:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1633:4:5",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "1613:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 962,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1644:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 963,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1648:5:5",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "1644:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 964,
																					"name": "totalMintCost",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "1656:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1644:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 966,
																				"name": "gasFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "1672:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1644:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1613:66:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1613:70:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1590:93:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "successBack",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "1705:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "556e61626c6520746f2073656e64206261636b2066756e64",
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1718:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_45565ba86530e34eb5b7c63e4c4dbe68694f761639dc03839c718286fd19914c",
																			"typeString": "literal_string \"Unable to send back fund\""
																		},
																		"value": "Unable to send back fund"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_45565ba86530e34eb5b7c63e4c4dbe68694f761639dc03839c718286fd19914c",
																			"typeString": "literal_string \"Unable to send back fund\""
																		}
																	],
																	"id": 972,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1697:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1697:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "1697:48:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4fa1d436",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintWithGasTap",
									"nameLocation": "974:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "997:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "989:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "aAWallet",
												"nameLocation": "1018:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1010:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:39:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:0:5"
									},
									"scope": 1036,
									"src": "965:797:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "1889:394:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 989,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1917:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1921:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1917:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 988,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "1907:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1907:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 992,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "1932:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1907:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742053535420746f6b656e7320746f206275726e",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e0c0c8c39e7cc360eee60824b8f1f12aa2610b94fadb34a5354960e68f3a67",
																"typeString": "literal_string \"Insufficient SST tokens to burn\""
															},
															"value": "Insufficient SST tokens to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e0c0c8c39e7cc360eee60824b8f1f12aa2610b94fadb34a5354960e68f3a67",
																"typeString": "literal_string \"Insufficient SST tokens to burn\""
															}
														],
														"id": 987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1899:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "1899:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 998,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1990:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1994:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1990:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "2002:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "1984:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1984:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1984:25:5"
											},
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "2028:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "2020:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2020:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2040:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1006,
														"name": "MINT_PRICE_PER_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "2049:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2040:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2020:49:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1012,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2095:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SST_$1036",
																				"typeString": "contract SST"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SST_$1036",
																				"typeString": "contract SST"
																			}
																		],
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2087:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1010,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2087:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2087:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2101:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2087:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1015,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2112:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2087:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f75676820455448",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_891cf454a37c1b69b16907898af33d98f1d41dde5f3751d6c3c309f3e73c310b",
																"typeString": "literal_string \"Contract does not have enough ETH\""
															},
															"value": "Contract does not have enough ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_891cf454a37c1b69b16907898af33d98f1d41dde5f3751d6c3c309f3e73c310b",
																"typeString": "literal_string \"Contract does not have enough ETH\""
															}
														],
														"id": 1009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2079:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "2079:80:5"
											},
											{
												"assignments": [
													1021,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2176:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "2171:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1020,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2171:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1028,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2228:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1022,
																"name": "destinationAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "2186:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2205:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2186:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1024,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2217:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2186:41:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1030,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "2249:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420455448",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2255:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858",
																"typeString": "literal_string \"Failed to send ETH\""
															},
															"value": "Failed to send ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a14d063efbeb956897c353204e1ee998d729d316bfdb01a81da7413a77626858",
																"typeString": "literal_string \"Failed to send ETH\""
															}
														],
														"id": 1029,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2241:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "2241:35:5"
											}
										]
									},
									"functionSelector": "fcd3533c",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1833:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1846:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1838:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "destinationAddress",
												"nameLocation": "1862:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1854:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:44:5"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:5"
									},
									"scope": 1036,
									"src": "1824:459:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1037,
							"src": "180:2402:5",
							"usedErrors": [],
							"usedEvents": [
								13,
								710,
								719
							]
						}
					],
					"src": "32:2551:5"
				},
				"id": 5
			}
		}
	}
}